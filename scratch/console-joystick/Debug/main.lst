Zilog eZ80 Macro Assembler Version 4.3 (19073001) RELISTED29-Oct-23     21:39:02     page:   1


PC     Object              I  Line    Source 
                           A     1    ; Zilog eZ80 ANSI C Compiler Release 3.4
                           A     2    ; -nomodsect -optsize -noreduceopt -nopadbranch
                           A     3    ; -peephole -globalopt -localcse -const=ROM 
                           A     4    	FILE	"..\main.c"
                           A     5    	.assume ADL=1
                           A     6    .DEBUG "C"
                           A     7    	SEGMENT CODE
                           A     8    .BEGREC "fmt_type",19
                           A     9    .DEFINE "status"
                           A    10    .VALUE 0
                           A    11    .CLASS 8
                           A    12    .TYPE 12
                           A    13    .ENDEF
                           A    14    .DEFINE "flags"
                           A    15    .VALUE 1
                           A    16    .CLASS 8
                           A    17    .TYPE 12
                           A    18    .ENDEF
                           A    19    .DEFINE "size"
                           A    20    .VALUE 2
                           A    21    .CLASS 8
                           A    22    .TYPE 2
                           A    23    .ENDEF
                           A    24    .DEFINE "chr"
                           A    25    .VALUE 3
                           A    26    .CLASS 8
                           A    27    .TYPE 2
                           A    28    .ENDEF
                           A    29    .DEFINE "type"
                           A    30    .VALUE 4
                           A    31    .CLASS 8
                           A    32    .TYPE 2
                           A    33    .ENDEF
                           A    34    .DEFINE "field_width"
                           A    35    .VALUE 5
                           A    36    .CLASS 8
                           A    37    .TYPE 2
                           A    38    .ENDEF
                           A    39    .DEFINE "precision"
                           A    40    .VALUE 6
                           A    41    .CLASS 8
                           A    42    .TYPE 2
                           A    43    .ENDEF
                           A    44    .DEFINE "set_begin"
                           A    45    .VALUE 7
                           A    46    .CLASS 8
                           A    47    .TYPE 34
                           A    48    .ENDEF
                           A    49    .DEFINE "set_end"
                           A    50    .VALUE 10
                           A    51    .CLASS 8
                           A    52    .TYPE 34
                           A    53    .ENDEF
                           A    54    .DEFINE "pad_whole"
                           A    55    .VALUE 13
                           A    56    .CLASS 8
                           A    57    .TYPE 12
                           A    58    .ENDEF
                           A    59    .DEFINE "pad_pre_fract"
                           A    60    .VALUE 14
                           A    61    .CLASS 8
                           A    62    .TYPE 12
                           A    63    .ENDEF
                           A    64    .DEFINE "pad_post_fract"
                           A    65    .VALUE 15
                           A    66    .CLASS 8
                           A    67    .TYPE 12
                           A    68    .ENDEF
                           A    69    .DEFINE "pad_at"
                           A    70    .VALUE 16
                           A    71    .CLASS 8
                           A    72    .TYPE 34
                           A    73    .ENDEF
                           A    74    .ENDREC "fmt_type"
                           A    75    .BEGREC "flt_info",12
                           A    76    .DEFINE "flags"
                           A    77    .VALUE 0
                           A    78    .CLASS 8
                           A    79    .TYPE 12
                           A    80    .ENDEF
                           A    81    .DEFINE "exp"
                           A    82    .VALUE 1
                           A    83    .CLASS 8
                           A    84    .TYPE 2
                           A    85    .ENDEF
                           A    86    .DEFINE "digits"
                           A    87    .VALUE 2
                           A    88    .CLASS 8
                           A    89    .DIM 10
                           A    90    .TYPE 108
                           A    91    .ENDEF
                           A    92    .ENDREC "flt_info"
                           A    93    .BEGREC "NONAME0",8
                           A    94    .DEFINE "baudRate"
                           A    95    .VALUE 0
                           A    96    .CLASS 8
                           A    97    .TYPE 4
                           A    98    .ENDEF
                           A    99    .DEFINE "dataBits"
                           A   100    .VALUE 3
                           A   101    .CLASS 8
                           A   102    .TYPE 12
                           A   103    .ENDEF
                           A   104    .DEFINE "stopBits"
                           A   105    .VALUE 4
                           A   106    .CLASS 8
                           A   107    .TYPE 12
                           A   108    .ENDEF
                           A   109    .DEFINE "parity"
                           A   110    .VALUE 5
                           A   111    .CLASS 8
                           A   112    .TYPE 12
                           A   113    .ENDEF
                           A   114    .DEFINE "flowcontrol"
                           A   115    .VALUE 6
                           A   116    .CLASS 8
                           A   117    .TYPE 12
                           A   118    .ENDEF
                           A   119    .DEFINE "eir"
                           A   120    .VALUE 7
                           A   121    .CLASS 8
                           A   122    .TYPE 12
                           A   123    .ENDEF
                           A   124    .ENDREC "NONAME0"
                           A   125    .BEGREC "NONAME1",15
                           A   126    .DEFINE "fs"
                           A   127    .VALUE 0
                           A   128    .CLASS 8
                           A   129    .TYPE 46
                           A   130    .ENDEF
                           A   131    .DEFINE "id"
                           A   132    .VALUE 3
                           A   133    .CLASS 8
                           A   134    .TYPE 13
                           A   135    .ENDEF
                           A   136    .DEFINE "attr"
                           A   137    .VALUE 5
                           A   138    .CLASS 8
                           A   139    .TYPE 12
                           A   140    .ENDEF
                           A   141    .DEFINE "stat"
                           A   142    .VALUE 6
                           A   143    .CLASS 8
                           A   144    .TYPE 12
                           A   145    .ENDEF
                           A   146    .DEFINE "sclust"
                           A   147    .VALUE 7
                           A   148    .CLASS 8
                           A   149    .TYPE 15
                           A   150    .ENDEF
                           A   151    .DEFINE "objsize"
                           A   152    .VALUE 11
                           A   153    .CLASS 8
                           A   154    .TYPE 15
                           A   155    .ENDEF
                           A   156    .ENDREC "NONAME1"
                           A   157    .BEGREC "NONAME2",36
                           A   158    .DEFINE "obj"
                           A   159    .VALUE 0
                           A   160    .CLASS 8
                           A   161    .TAG "NONAME1"
                           A   162    .TYPE 8
                           A   163    .ENDEF
                           A   164    .DEFINE "flag"
                           A   165    .VALUE 15
                           A   166    .CLASS 8
                           A   167    .TYPE 12
                           A   168    .ENDEF
                           A   169    .DEFINE "err"
                           A   170    .VALUE 16
                           A   171    .CLASS 8
                           A   172    .TYPE 12
                           A   173    .ENDEF
                           A   174    .DEFINE "fptr"
                           A   175    .VALUE 17
                           A   176    .CLASS 8
                           A   177    .TYPE 15
                           A   178    .ENDEF
                           A   179    .DEFINE "clust"
                           A   180    .VALUE 21
                           A   181    .CLASS 8
                           A   182    .TYPE 15
                           A   183    .ENDEF
                           A   184    .DEFINE "sect"
                           A   185    .VALUE 25
                           A   186    .CLASS 8
                           A   187    .TYPE 15
                           A   188    .ENDEF
                           A   189    .DEFINE "dir_sect"
                           A   190    .VALUE 29
                           A   191    .CLASS 8
                           A   192    .TYPE 15
                           A   193    .ENDEF
                           A   194    .DEFINE "dir_ptr"
                           A   195    .VALUE 33
                           A   196    .CLASS 8
                           A   197    .TYPE 46
                           A   198    .ENDEF
                           A   199    .ENDREC "NONAME2"
                           A   200    ;    1	#include <stdio.h>
                           A   201    ;    2	#include <ctype.h>
                           A   202    ;    3	#include "mos-interface.h"
                           A   203    ;    4	#include "vdp.h"
                           A   204    ;    5	#include "agontimer.h"
                           A   205    ;    6	#include <ez80f92.h>
                           A   206    ;    7	
                           A   207    ;    8	extern void setsysvar_keyascii(UINT8);
                           A   208    ;    9	
                           A   209    ;   10	int main(int argc, char * argv[]) {
0400E5                     A   210    _main:
                           A   211    .DEFINE "_main"
                           A   212    
                           A   213    .VALUE _main
                           A   214    
                           A   215    .CLASS 2
                           A   216    
                           A   217    .TYPE 68
                           A   218    
                           A   219    .ENDEF
                           A   220    
                           A   221    .BEGFUNC "main",10,"_main"
                           A   222    
                           A   223    .LINE 10
                           A   224    
                           A   225    .DEFINE "argc"
                           A   226    
                           A   227    .CLASS 65
                           A   228    
                           A   229    .VALUE 6
                           A   230    
                           A   231    .TYPE 4
                           A   232    
                           A   233    .ENDEF
                           A   234    
                           A   235    .DEFINE "argv"
                           A   236    
                           A   237    .CLASS 65
                           A   238    
                           A   239    .VALUE 9
                           A   240    
                           A   241    .TYPE 290
                           A   242    
                           A   243    .ENDEF
                           A   244    
                           A   245    .DEFINE "direction"
                           A   246    
                           A   247    .CLASS 65
                           A   248    
                           A   249    .VALUE -1
                           A   250    
                           A   251    .TYPE 12
                           A   252    
                           A   253    .ENDEF
                           A   254    
                           A   255    .DEFINE "fire"
                           A   256    
                           A   257    .CLASS 65
                           A   258    
                           A   259    .VALUE -2
                           A   260    
                           A   261    .TYPE 12
                           A   262    
                           A   263    .ENDEF
                           A   264    
0400E5 DDE5                A   265    	PUSH	IX
0400E7 DD210000 00         A   266    	LD	IX,0
0400EC DD39                A   267    	ADD	IX,SP
0400EE ED22DA              A   268    	LEA	HL,IX+%FFFFFFDA
0400F1 F9                  A   269    	LD	SP,HL
                           A   270    ;   11		uint8_t fire, direction;
                           A   271    ;   12		PC_DDR = 0xFF; // both joysticks
                           A   272    .LINE 12
                           A   273    
0400F2 3EFF                A   274    	LD	A,%FF
0400F4 ED399F              A   275    	OUT0	(159),A
                           A   276    ;   13		PD_DDR |= 0xF0; // both joysticks, 
                           A   277    .LINE 13
                           A   278    
0400F7 ED38A3              A   279    	IN0	A,(163)
0400FA F6F0                A   280    	OR	A,%F0
0400FC ED39A3              A   281    	OUT0	(163),A
                           A   282    ;   14	
                           A   283    ;   15		vdp_cls();
                           A   284    .LINE 15
                           A   285    
0400FF CD D8 05 04         A   286    	CALL	_vdp_cls
                           A   287    ;   16		printf("Console8 joystick test\r\n\
                           A   288    .LINE 16
                           A   289    
040103 01 97 16 04         A   290    	LD	BC,___print_uputch
040107 ED43 69 1E 04       A   291    	LD	(___print_xputch),BC
04010C 01 6C 1E 04         A   292    	LD	BC,L__0
040110 C5                  A   293    	PUSH	BC
040111 CD 0B 15 04         A   294    	CALL	___print_sendstring
040115 C1                  A   295    	POP	BC
                           A   296    ;   17	
                           A   297    ;   18		while(1) {
040116                     A   298    L_51:
                           A   299    .LINE 18
                           A   300    
                           A   301    ;   19			fire = PD_DR;
                           A   302    .LINE 19
                           A   303    
040116 ED38A2              A   304    	IN0	A,(162)
040119 DD77FE              A   305    	LD	(IX+%FFFFFFFE),A
                           A   306    ;   20			direction = PC_DR;
                           A   307    .LINE 20
                           A   308    
04011C ED389E              A   309    	IN0	A,(158)
04011F DD77FF              A   310    	LD	(IX+%FFFFFFFF),A
                           A   311    ;   21			vdp_cursorGoto(0, 2);
                           A   312    .LINE 21
                           A   313    
040122 01020000            A   314    	LD	BC,2
040126 C5                  A   315    	PUSH	BC
040127 01000000            A   316    	LD	BC,0
04012B C5                  A   317    	PUSH	BC
04012C CD 20 06 04         A   318    	CALL	_vdp_cursorGoto
040130 C1                  A   319    	POP	BC
040131 C1                  A   320    	POP	BC
                           A   321    ;   22			printf("  PORT1     PORT2\r\n\r
                           A   322    .LINE 22
                           A   323    
040132 01 97 16 04         A   324    	LD	BC,___print_uputch
040136 ED43 69 1E 04       A   325    	LD	(___print_xputch),BC
04013B 01 87 1E 04         A   326    	LD	BC,L__1
04013F C5                  A   327    	PUSH	BC
040140 CD 0B 15 04         A   328    	CALL	___print_sendstring
040144 C1                  A   329    	POP	BC
                           A   330    ;   23			printf("   Up : %d    Up : %d\r
                           A   331    .LINE 23
                           A   332    
040145 DD7EFF              A   333    	LD	A,(IX+%FFFFFFFF)
040148 E602                A   334    	AND	A,%2
04014A 28 09               A   335    	JR	Z,L_2
04014C 01000000            A   336    	LD	BC,0
040150 DD0FFB              A   337    	LD	(IX+%FFFFFFFB),BC
040153 18 07               A   338    	JR	L_3
040155                     A   339    L_2:
040155 01010000            A   340    	LD	BC,1
040159 DD0FFB              A   341    	LD	(IX+%FFFFFFFB),BC
04015C                     A   342    L_3:
04015C DD7EFF              A   343    	LD	A,(IX+%FFFFFFFF)
04015F E601                A   344    	AND	A,%1
040161 28 09               A   345    	JR	Z,L_6
040163 01000000            A   346    	LD	BC,0
040167 DD0FF8              A   347    	LD	(IX+%FFFFFFF8),BC
04016A 18 07               A   348    	JR	L_7
04016C                     A   349    L_6:
04016C 01010000            A   350    	LD	BC,1
040170 DD0FF8              A   351    	LD	(IX+%FFFFFFF8),BC
040173                     A   352    L_7:
040173 01 97 16 04         A   353    	LD	BC,___print_uputch
040177 ED43 69 1E 04       A   354    	LD	(___print_xputch),BC
04017C 01 9D 1E 04         A   355    	LD	BC,L__4
040180 C5                  A   356    	PUSH	BC
040181 CD 0B 15 04         A   357    	CALL	___print_sendstring
040185 C1                  A   358    	POP	BC
040186 DD07FB              A   359    	LD	BC,(IX+%FFFFFFFB)
040189 CD 23 1D 04         A   360    	CALL	__itol
04018D C5D1                A   361    	LD	DE,BC
04018F 4F                  A   362    	LD	C,A
040190 0600                A   363    	LD	B,%0
040192 C5                  A   364    	PUSH	BC
040193 D5                  A   365    	PUSH	DE
040194 CD 8F 17 04         A   366    	CALL	__u_itoa
040198 C1                  A   367    	POP	BC
040199 C1                  A   368    	POP	BC
04019A 01 A6 1E 04         A   369    	LD	BC,L__5
04019E C5                  A   370    	PUSH	BC
04019F CD 0B 15 04         A   371    	CALL	___print_sendstring
0401A3 C1                  A   372    	POP	BC
0401A4 DD07F8              A   373    	LD	BC,(IX+%FFFFFFF8)
0401A7 CD 23 1D 04         A   374    	CALL	__itol
0401AB C5D1                A   375    	LD	DE,BC
0401AD 4F                  A   376    	LD	C,A
0401AE 0600                A   377    	LD	B,%0
0401B0 C5                  A   378    	PUSH	BC
0401B1 D5                  A   379    	PUSH	DE
0401B2 CD 8F 17 04         A   380    	CALL	__u_itoa
0401B6 C1                  A   381    	POP	BC
0401B7 C1                  A   382    	POP	BC
0401B8 01 B0 1E 04         A   383    	LD	BC,L__6
0401BC C5                  A   384    	PUSH	BC
0401BD CD 0B 15 04         A   385    	CALL	___print_sendstring
0401C1 C1                  A   386    	POP	BC
                           A   387    ;   24			printf(" Down : %d  Down : %d\r
                           A   388    .LINE 24
                           A   389    
0401C2 DD7EFF              A   390    	LD	A,(IX+%FFFFFFFF)
0401C5 E608                A   391    	AND	A,%8
0401C7 28 09               A   392    	JR	Z,L_10
0401C9 01000000            A   393    	LD	BC,0
0401CD DD0FF5              A   394    	LD	(IX+%FFFFFFF5),BC
0401D0 18 07               A   395    	JR	L_11
0401D2                     A   396    L_10:
0401D2 01010000            A   397    	LD	BC,1
0401D6 DD0FF5              A   398    	LD	(IX+%FFFFFFF5),BC
0401D9                     A   399    L_11:
0401D9 DD7EFF              A   400    	LD	A,(IX+%FFFFFFFF)
0401DC E604                A   401    	AND	A,%4
0401DE 28 09               A   402    	JR	Z,L_14
0401E0 01000000            A   403    	LD	BC,0
0401E4 DD0FF2              A   404    	LD	(IX+%FFFFFFF2),BC
0401E7 18 07               A   405    	JR	L_15
0401E9                     A   406    L_14:
0401E9 01010000            A   407    	LD	BC,1
0401ED DD0FF2              A   408    	LD	(IX+%FFFFFFF2),BC
0401F0                     A   409    L_15:
0401F0 01 97 16 04         A   410    	LD	BC,___print_uputch
0401F4 ED43 69 1E 04       A   411    	LD	(___print_xputch),BC
0401F9 01 B3 1E 04         A   412    	LD	BC,L__9
0401FD C5                  A   413    	PUSH	BC
0401FE CD 0B 15 04         A   414    	CALL	___print_sendstring
040202 C1                  A   415    	POP	BC
040203 DD07F5              A   416    	LD	BC,(IX+%FFFFFFF5)
040206 CD 23 1D 04         A   417    	CALL	__itol
04020A C5D1                A   418    	LD	DE,BC
04020C 4F                  A   419    	LD	C,A
04020D 0600                A   420    	LD	B,%0
04020F C5                  A   421    	PUSH	BC
040210 D5                  A   422    	PUSH	DE
040211 CD 8F 17 04         A   423    	CALL	__u_itoa
040215 C1                  A   424    	POP	BC
040216 C1                  A   425    	POP	BC
040217 01 BC 1E 04         A   426    	LD	BC,L__10
04021B C5                  A   427    	PUSH	BC
04021C CD 0B 15 04         A   428    	CALL	___print_sendstring
040220 C1                  A   429    	POP	BC
040221 DD07F2              A   430    	LD	BC,(IX+%FFFFFFF2)
040224 CD 23 1D 04         A   431    	CALL	__itol
040228 C5D1                A   432    	LD	DE,BC
04022A 4F                  A   433    	LD	C,A
04022B 0600                A   434    	LD	B,%0
04022D C5                  A   435    	PUSH	BC
04022E D5                  A   436    	PUSH	DE
04022F CD 8F 17 04         A   437    	CALL	__u_itoa
040233 C1                  A   438    	POP	BC
040234 C1                  A   439    	POP	BC
040235 01 C6 1E 04         A   440    	LD	BC,L__11
040239 C5                  A   441    	PUSH	BC
04023A CD 0B 15 04         A   442    	CALL	___print_sendstring
04023E C1                  A   443    	POP	BC
                           A   444    ;   25			printf(" Left : %d  Left : %d\r
                           A   445    .LINE 25
                           A   446    
04023F DD7EFF              A   447    	LD	A,(IX+%FFFFFFFF)
040242 E620                A   448    	AND	A,%20
040244 28 09               A   449    	JR	Z,L_18
040246 01000000            A   450    	LD	BC,0
04024A DD0FEF              A   451    	LD	(IX+%FFFFFFEF),BC
04024D 18 07               A   452    	JR	L_19
04024F                     A   453    L_18:
04024F 01010000            A   454    	LD	BC,1
040253 DD0FEF              A   455    	LD	(IX+%FFFFFFEF),BC
040256                     A   456    L_19:
040256 DD7EFF              A   457    	LD	A,(IX+%FFFFFFFF)
040259 E610                A   458    	AND	A,%10
04025B 28 09               A   459    	JR	Z,L_22
04025D 01000000            A   460    	LD	BC,0
040261 DD0FEC              A   461    	LD	(IX+%FFFFFFEC),BC
040264 18 07               A   462    	JR	L_23
040266                     A   463    L_22:
040266 01010000            A   464    	LD	BC,1
04026A DD0FEC              A   465    	LD	(IX+%FFFFFFEC),BC
04026D                     A   466    L_23:
04026D 01 97 16 04         A   467    	LD	BC,___print_uputch
040271 ED43 69 1E 04       A   468    	LD	(___print_xputch),BC
040276 01 C9 1E 04         A   469    	LD	BC,L__14
04027A C5                  A   470    	PUSH	BC
04027B CD 0B 15 04         A   471    	CALL	___print_sendstring
04027F C1                  A   472    	POP	BC
040280 DD07EF              A   473    	LD	BC,(IX+%FFFFFFEF)
040283 CD 23 1D 04         A   474    	CALL	__itol
040287 C5D1                A   475    	LD	DE,BC
040289 4F                  A   476    	LD	C,A
04028A 0600                A   477    	LD	B,%0
04028C C5                  A   478    	PUSH	BC
04028D D5                  A   479    	PUSH	DE
04028E CD 8F 17 04         A   480    	CALL	__u_itoa
040292 C1                  A   481    	POP	BC
040293 C1                  A   482    	POP	BC
040294 01 D2 1E 04         A   483    	LD	BC,L__15
040298 C5                  A   484    	PUSH	BC
040299 CD 0B 15 04         A   485    	CALL	___print_sendstring
04029D C1                  A   486    	POP	BC
04029E DD07EC              A   487    	LD	BC,(IX+%FFFFFFEC)
0402A1 CD 23 1D 04         A   488    	CALL	__itol
0402A5 C5D1                A   489    	LD	DE,BC
0402A7 4F                  A   490    	LD	C,A
0402A8 0600                A   491    	LD	B,%0
0402AA C5                  A   492    	PUSH	BC
0402AB D5                  A   493    	PUSH	DE
0402AC CD 8F 17 04         A   494    	CALL	__u_itoa
0402B0 C1                  A   495    	POP	BC
0402B1 C1                  A   496    	POP	BC
0402B2 01 DC 1E 04         A   497    	LD	BC,L__16
0402B6 C5                  A   498    	PUSH	BC
0402B7 CD 0B 15 04         A   499    	CALL	___print_sendstring
0402BB C1                  A   500    	POP	BC
                           A   501    ;   26			printf("Right : %d Right : %d\r
                           A   502    .LINE 26
                           A   503    
0402BC DD7EFF              A   504    	LD	A,(IX+%FFFFFFFF)
0402BF E680                A   505    	AND	A,%80
0402C1 28 09               A   506    	JR	Z,L_26
0402C3 01000000            A   507    	LD	BC,0
0402C7 DD0FE9              A   508    	LD	(IX+%FFFFFFE9),BC
0402CA 18 07               A   509    	JR	L_27
0402CC                     A   510    L_26:
0402CC 01010000            A   511    	LD	BC,1
0402D0 DD0FE9              A   512    	LD	(IX+%FFFFFFE9),BC
0402D3                     A   513    L_27:
0402D3 DD7EFF              A   514    	LD	A,(IX+%FFFFFFFF)
0402D6 E640                A   515    	AND	A,%40
0402D8 28 09               A   516    	JR	Z,L_30
0402DA 01000000            A   517    	LD	BC,0
0402DE DD0FE6              A   518    	LD	(IX+%FFFFFFE6),BC
0402E1 18 07               A   519    	JR	L_31
0402E3                     A   520    L_30:
0402E3 01010000            A   521    	LD	BC,1
0402E7 DD0FE6              A   522    	LD	(IX+%FFFFFFE6),BC
0402EA                     A   523    L_31:
0402EA 01 97 16 04         A   524    	LD	BC,___print_uputch
0402EE ED43 69 1E 04       A   525    	LD	(___print_xputch),BC
0402F3 01 DF 1E 04         A   526    	LD	BC,L__19
0402F7 C5                  A   527    	PUSH	BC
0402F8 CD 0B 15 04         A   528    	CALL	___print_sendstring
0402FC C1                  A   529    	POP	BC
0402FD DD07E9              A   530    	LD	BC,(IX+%FFFFFFE9)
040300 CD 23 1D 04         A   531    	CALL	__itol
040304 C5D1                A   532    	LD	DE,BC
040306 4F                  A   533    	LD	C,A
040307 0600                A   534    	LD	B,%0
040309 C5                  A   535    	PUSH	BC
04030A D5                  A   536    	PUSH	DE
04030B CD 8F 17 04         A   537    	CALL	__u_itoa
04030F C1                  A   538    	POP	BC
040310 C1                  A   539    	POP	BC
040311 01 E8 1E 04         A   540    	LD	BC,L__20
040315 C5                  A   541    	PUSH	BC
040316 CD 0B 15 04         A   542    	CALL	___print_sendstring
04031A C1                  A   543    	POP	BC
04031B DD07E6              A   544    	LD	BC,(IX+%FFFFFFE6)
04031E CD 23 1D 04         A   545    	CALL	__itol
040322 C5D1                A   546    	LD	DE,BC
040324 4F                  A   547    	LD	C,A
040325 0600                A   548    	LD	B,%0
040327 C5                  A   549    	PUSH	BC
040328 D5                  A   550    	PUSH	DE
040329 CD 8F 17 04         A   551    	CALL	__u_itoa
04032D C1                  A   552    	POP	BC
04032E C1                  A   553    	POP	BC
04032F 01 F2 1E 04         A   554    	LD	BC,L__21
040333 C5                  A   555    	PUSH	BC
040334 CD 0B 15 04         A   556    	CALL	___print_sendstring
040338 C1                  A   557    	POP	BC
                           A   558    ;   27			printf("BTN 1 : %d BTN 1 : %d\r
                           A   559    .LINE 27
                           A   560    
040339 DD7EFE              A   561    	LD	A,(IX+%FFFFFFFE)
04033C E620                A   562    	AND	A,%20
04033E 28 09               A   563    	JR	Z,L_34
040340 01000000            A   564    	LD	BC,0
040344 DD0FE3              A   565    	LD	(IX+%FFFFFFE3),BC
040347 18 07               A   566    	JR	L_35
040349                     A   567    L_34:
040349 01010000            A   568    	LD	BC,1
04034D DD0FE3              A   569    	LD	(IX+%FFFFFFE3),BC
040350                     A   570    L_35:
040350 DD7EFE              A   571    	LD	A,(IX+%FFFFFFFE)
040353 E610                A   572    	AND	A,%10
040355 28 09               A   573    	JR	Z,L_38
040357 01000000            A   574    	LD	BC,0
04035B DD0FE0              A   575    	LD	(IX+%FFFFFFE0),BC
04035E 18 07               A   576    	JR	L_39
040360                     A   577    L_38:
040360 01010000            A   578    	LD	BC,1
040364 DD0FE0              A   579    	LD	(IX+%FFFFFFE0),BC
040367                     A   580    L_39:
040367 01 97 16 04         A   581    	LD	BC,___print_uputch
04036B ED43 69 1E 04       A   582    	LD	(___print_xputch),BC
040370 01 F5 1E 04         A   583    	LD	BC,L__24
040374 C5                  A   584    	PUSH	BC
040375 CD 0B 15 04         A   585    	CALL	___print_sendstring
040379 C1                  A   586    	POP	BC
04037A DD07E3              A   587    	LD	BC,(IX+%FFFFFFE3)
04037D CD 23 1D 04         A   588    	CALL	__itol
040381 C5D1                A   589    	LD	DE,BC
040383 4F                  A   590    	LD	C,A
040384 0600                A   591    	LD	B,%0
040386 C5                  A   592    	PUSH	BC
040387 D5                  A   593    	PUSH	DE
040388 CD 8F 17 04         A   594    	CALL	__u_itoa
04038C C1                  A   595    	POP	BC
04038D C1                  A   596    	POP	BC
04038E 01 FE 1E 04         A   597    	LD	BC,L__25
040392 C5                  A   598    	PUSH	BC
040393 CD 0B 15 04         A   599    	CALL	___print_sendstring
040397 C1                  A   600    	POP	BC
040398 DD07E0              A   601    	LD	BC,(IX+%FFFFFFE0)
04039B CD 23 1D 04         A   602    	CALL	__itol
04039F C5D1                A   603    	LD	DE,BC
0403A1 4F                  A   604    	LD	C,A
0403A2 0600                A   605    	LD	B,%0
0403A4 C5                  A   606    	PUSH	BC
0403A5 D5                  A   607    	PUSH	DE
0403A6 CD 8F 17 04         A   608    	CALL	__u_itoa
0403AA C1                  A   609    	POP	BC
0403AB C1                  A   610    	POP	BC
0403AC 01 08 1F 04         A   611    	LD	BC,L__26
0403B0 C5                  A   612    	PUSH	BC
0403B1 CD 0B 15 04         A   613    	CALL	___print_sendstring
0403B5 C1                  A   614    	POP	BC
                           A   615    ;   28			printf("BTN 2 : %d BTN 2 : %d\r
                           A   616    .LINE 28
                           A   617    
0403B6 DD7EFE              A   618    	LD	A,(IX+%FFFFFFFE)
0403B9 E680                A   619    	AND	A,%80
0403BB 28 09               A   620    	JR	Z,L_42
0403BD 01000000            A   621    	LD	BC,0
0403C1 DD0FDD              A   622    	LD	(IX+%FFFFFFDD),BC
0403C4 18 07               A   623    	JR	L_43
0403C6                     A   624    L_42:
0403C6 01010000            A   625    	LD	BC,1
0403CA DD0FDD              A   626    	LD	(IX+%FFFFFFDD),BC
0403CD                     A   627    L_43:
0403CD DD7EFE              A   628    	LD	A,(IX+%FFFFFFFE)
0403D0 E640                A   629    	AND	A,%40
0403D2 28 09               A   630    	JR	Z,L_46
0403D4 01000000            A   631    	LD	BC,0
0403D8 DD0FDA              A   632    	LD	(IX+%FFFFFFDA),BC
0403DB 18 07               A   633    	JR	L_47
0403DD                     A   634    L_46:
0403DD 01010000            A   635    	LD	BC,1
0403E1 DD0FDA              A   636    	LD	(IX+%FFFFFFDA),BC
0403E4                     A   637    L_47:
0403E4 01 97 16 04         A   638    	LD	BC,___print_uputch
0403E8 ED43 69 1E 04       A   639    	LD	(___print_xputch),BC
0403ED 01 0B 1F 04         A   640    	LD	BC,L__29
0403F1 C5                  A   641    	PUSH	BC
0403F2 CD 0B 15 04         A   642    	CALL	___print_sendstring
0403F6 C1                  A   643    	POP	BC
0403F7 DD07DD              A   644    	LD	BC,(IX+%FFFFFFDD)
0403FA CD 23 1D 04         A   645    	CALL	__itol
0403FE C5D1                A   646    	LD	DE,BC
040400 4F                  A   647    	LD	C,A
040401 0600                A   648    	LD	B,%0
040403 C5                  A   649    	PUSH	BC
040404 D5                  A   650    	PUSH	DE
040405 CD 8F 17 04         A   651    	CALL	__u_itoa
040409 C1                  A   652    	POP	BC
04040A C1                  A   653    	POP	BC
04040B 01 14 1F 04         A   654    	LD	BC,L__30
04040F C5                  A   655    	PUSH	BC
040410 CD 0B 15 04         A   656    	CALL	___print_sendstring
040414 C1                  A   657    	POP	BC
040415 DD07DA              A   658    	LD	BC,(IX+%FFFFFFDA)
040418 CD 23 1D 04         A   659    	CALL	__itol
04041C C5D1                A   660    	LD	DE,BC
04041E 4F                  A   661    	LD	C,A
04041F 0600                A   662    	LD	B,%0
040421 C5                  A   663    	PUSH	BC
040422 D5                  A   664    	PUSH	DE
040423 CD 8F 17 04         A   665    	CALL	__u_itoa
040427 C1                  A   666    	POP	BC
040428 C1                  A   667    	POP	BC
040429 01 1E 1F 04         A   668    	LD	BC,L__31
04042D C5                  A   669    	PUSH	BC
04042E CD 0B 15 04         A   670    	CALL	___print_sendstring
040432 C1                  A   671    	POP	BC
                           A   672    ;   29	
                           A   673    ;   30			printf("\r\nPress ESC key to qu
                           A   674    .LINE 30
                           A   675    
040433 01 97 16 04         A   676    	LD	BC,___print_uputch
040437 ED43 69 1E 04       A   677    	LD	(___print_xputch),BC
04043C 01 21 1F 04         A   678    	LD	BC,L__32
040440 C5                  A   679    	PUSH	BC
040441 CD 0B 15 04         A   680    	CALL	___print_sendstring
040445 C1                  A   681    	POP	BC
                           A   682    ;   31			if(getsysvar_keyascii() == 0x1B
                           A   683    .LINE 31
                           A   684    
040446 CD 14 10 04         A   685    	CALL	_getsysvar_keyascii
04044A B7ED62              A   686    	UEXT	HL
04044D 6F                  A   687    	LD	L,A
04044E 011B0000            A   688    	LD	BC,27
040452 B7                  A   689    	OR	A,A
040453 ED42                A   690    	SBC	HL,BC
040455 28 0E               A   691    	JR	Z,L_52
                           A   692    ;   32			delayms(10);
                           A   693    .LINE 32
                           A   694    
040457 010A0000            A   695    	LD	BC,10
04045B C5                  A   696    	PUSH	BC
04045C CD 45 14 04         A   697    	CALL	_delayms
040460 C1                  A   698    	POP	BC
040461 C3 16 01 04         A   699    	JR	L_51
                           A   700    ;   33		}
040465                     A   701    L_52:
                           A   702    .LINE 33
                           A   703    
                           A   704    ;   34		printf("\r\n");
                           A   705    .LINE 34
                           A   706    
040465 01 97 16 04         A   707    	LD	BC,___print_uputch
040469 ED43 69 1E 04       A   708    	LD	(___print_xputch),BC
04046E 01 39 1F 04         A   709    	LD	BC,L__34
040472 C5                  A   710    	PUSH	BC
040473 CD 0B 15 04         A   711    	CALL	___print_sendstring
040477 C1                  A   712    	POP	BC
                           A   713    ;   35		return 0;
                           A   714    .LINE 35
                           A   715    
040478 B7                  A   716    	OR	A,A
040479 ED62                A   717    	SBC	HL,HL
                           A   718    ;   36	}
                           A   719    .LINE 36
                           A   720    
04047B DDF9                A   721    	LD	SP,IX
04047D DDE1                A   722    	POP	IX
04047F C9                  A   723    	RET	
                           A   724    
                           A   725    
                           A   726    ;**************************** _main ***********
                           A   727    ;Name                         Addr/Register   S
                           A   728    ;_delayms                            IMPORT  --
                           A   729    ;_getsysvar_keyascii                 IMPORT  --
                           A   730    ;__u_itoa                            IMPORT  --
                           A   731    ;_vdp_cursorGoto                     IMPORT  --
                           A   732    ;___print_sendstring                 IMPORT  --
                           A   733    ;___print_xputch                     IMPORT    
                           A   734    ;___print_uputch                     IMPORT  --
                           A   735    ;_vdp_cls                            IMPORT  --
                           A   736    ;temp44                               IX-38    
                           A   737    ;temp40                               IX-35    
                           A   738    ;temp36                               IX-32    
                           A   739    ;temp32                               IX-29    
                           A   740    ;temp28                               IX-26    
                           A   741    ;temp24                               IX-23    
                           A   742    ;temp20                               IX-20    
                           A   743    ;temp16                               IX-17    
                           A   744    ;temp12                               IX-14    
                           A   745    ;temp8                                IX-11    
                           A   746    ;temp4                                 IX-8    
                           A   747    ;temp0                                 IX-5    
                           A   748    ;fire                                  IX-2    
                           A   749    ;direction                             IX-1    
                           A   750    ;argv                                  IX+9    
                           A   751    ;argc                                  IX+6    
                           A   752    
                           A   753    
                           A   754    ; Stack Frame Size: 50 (bytes)
                           A   755    ;       Spill Code: 0 (instruction)
                           A   756    
                           A   757    
                           A   758    .ENDFUNC "main",36,"_main"
                           A   759    	SEGMENT STRSECT
041E6C                     A   760    L__0:
041E6C 436F6E73 6F6C6538   A   761    	DB	"Console8 joystick test"
041E74 206A6F79 73746963 
041E7C 6B207465 7374 
041E82 0D0A0D0A 00         A   762    	DB	13,10,13,10,0
041E87                     A   763    L__1:
041E87 2020504F 52543120   A   764    	DB	"  PORT1     PORT2"
041E8F 20202020 504F5254 
041E97 32 
041E98 0D0A0D0A 00         A   765    	DB	13,10,13,10,0
041E9D                     A   766    L__4:
041E9D 20202055 70203A20   A   767    	DB	"   Up : "
041EA5 00                  A   768    	DB	0
041EA6                     A   769    L__5:
041EA6 20202020 5570203A   A   770    	DB	"    Up : "
041EAE 20 
041EAF 00                  A   771    	DB	0
041EB0                     A   772    L__6:
041EB0 0D0A00              A   773    	DB	13,10,0
041EB3                     A   774    L__9:
041EB3 20446F77 6E203A20   A   775    	DB	" Down : "
041EBB 00                  A   776    	DB	0
041EBC                     A   777    L__10:
041EBC 2020446F 776E203A   A   778    	DB	"  Down : "
041EC4 20 
041EC5 00                  A   779    	DB	0
041EC6                     A   780    L__11:
041EC6 0D0A00              A   781    	DB	13,10,0
041EC9                     A   782    L__14:
041EC9 204C6566 74203A20   A   783    	DB	" Left : "
041ED1 00                  A   784    	DB	0
041ED2                     A   785    L__15:
041ED2 20204C65 6674203A   A   786    	DB	"  Left : "
041EDA 20 
041EDB 00                  A   787    	DB	0
041EDC                     A   788    L__16:
041EDC 0D0A00              A   789    	DB	13,10,0
041EDF                     A   790    L__19:
041EDF 52696768 74203A20   A   791    	DB	"Right : "
041EE7 00                  A   792    	DB	0
041EE8                     A   793    L__20:
041EE8 20526967 6874203A   A   794    	DB	" Right : "
041EF0 20 
041EF1 00                  A   795    	DB	0
041EF2                     A   796    L__21:
041EF2 0D0A00              A   797    	DB	13,10,0
041EF5                     A   798    L__24:
041EF5 42544E20 31203A20   A   799    	DB	"BTN 1 : "
041EFD 00                  A   800    	DB	0
041EFE                     A   801    L__25:
041EFE 2042544E 2031203A   A   802    	DB	" BTN 1 : "
041F06 20 
041F07 00                  A   803    	DB	0
041F08                     A   804    L__26:
041F08 0D0A00              A   805    	DB	13,10,0
041F0B                     A   806    L__29:
041F0B 42544E20 32203A20   A   807    	DB	"BTN 2 : "
041F13 00                  A   808    	DB	0
041F14                     A   809    L__30:
041F14 2042544E 2032203A   A   810    	DB	" BTN 2 : "
041F1C 20 
041F1D 00                  A   811    	DB	0
041F1E                     A   812    L__31:
041F1E 0D0A00              A   813    	DB	13,10,0
041F21                     A   814    L__32:
041F21 0D0A                A   815    	DB	13,10
041F23 50726573 73204553   A   816    	DB	"Press ESC key to quit"
041F2B 43206B65 7920746F 
041F33 20717569 74 
041F38 00                  A   817    	DB	0
041F39                     A   818    L__34:
041F39 0D0A00              A   819    	DB	13,10,0
                           A   820    	XREF _delayms:ROM
                           A   821    	XREF _vdp_cursorGoto:ROM
                           A   822    	XREF _vdp_cls:ROM
                           A   823    	XREF _getsysvar_keyascii:ROM
                           A   824    	XREF __u_itoa:ROM
                           A   825    	XREF ___print_sendstring:ROM
                           A   826    	XREF ___print_xputch:ROM
                           A   827    	XREF ___print_uputch:ROM
                           A   828    	XREF __itol:ROM
                           A   829    	XDEF _main
                           A   830    	END


Errors: 0
Warnings: 0
Lines Assembled: 831
