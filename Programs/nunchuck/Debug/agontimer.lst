Zilog eZ80 Macro Assembler Version 4.3 (19073001) RELISTED17-Nov-23     15:10:05     page:   1


PC     Object              I  Line    Source 
                           A     1    ; Zilog eZ80 ANSI C Compiler Release 3.4
                           A     2    ; -nomodsect -optsize -noreduceopt -nopadbranch
                           A     3    ; -peephole -globalopt -localcse -const=ROM 
                           A     4    	FILE	"..\agontimer.c"
                           A     5    	.assume ADL=1
                           A     6    .DEBUG "C"
                           A     7    	SEGMENT CODE
                           A     8    .BEGREC "NONAME0",51
                           A     9    .DEFINE "clock"
                           A    10    .VALUE 0
                           A    11    .CLASS 8
                           A    12    .TYPE 15
                           A    13    .ENDEF
                           A    14    .DEFINE "vpd_protocol_flags"
                           A    15    .VALUE 4
                           A    16    .CLASS 8
                           A    17    .TYPE 12
                           A    18    .ENDEF
                           A    19    .DEFINE "keyascii"
                           A    20    .VALUE 5
                           A    21    .CLASS 8
                           A    22    .TYPE 12
                           A    23    .ENDEF
                           A    24    .DEFINE "keymods"
                           A    25    .VALUE 6
                           A    26    .CLASS 8
                           A    27    .TYPE 12
                           A    28    .ENDEF
                           A    29    .DEFINE "cursorX"
                           A    30    .VALUE 7
                           A    31    .CLASS 8
                           A    32    .TYPE 12
                           A    33    .ENDEF
                           A    34    .DEFINE "cursorY"
                           A    35    .VALUE 8
                           A    36    .CLASS 8
                           A    37    .TYPE 12
                           A    38    .ENDEF
                           A    39    .DEFINE "scrchar"
                           A    40    .VALUE 9
                           A    41    .CLASS 8
                           A    42    .TYPE 12
                           A    43    .ENDEF
                           A    44    .DEFINE "scrpixel"
                           A    45    .VALUE 10
                           A    46    .CLASS 8
                           A    47    .TYPE 14
                           A    48    .ENDEF
                           A    49    .DEFINE "audioChannel"
                           A    50    .VALUE 13
                           A    51    .CLASS 8
                           A    52    .TYPE 12
                           A    53    .ENDEF
                           A    54    .DEFINE "audioSuccess"
                           A    55    .VALUE 14
                           A    56    .CLASS 8
                           A    57    .TYPE 12
                           A    58    .ENDEF
                           A    59    .DEFINE "scrwidth"
                           A    60    .VALUE 15
                           A    61    .CLASS 8
                           A    62    .TYPE 13
                           A    63    .ENDEF
                           A    64    .DEFINE "scrheight"
                           A    65    .VALUE 17
                           A    66    .CLASS 8
                           A    67    .TYPE 13
                           A    68    .ENDEF
                           A    69    .DEFINE "scrcols"
                           A    70    .VALUE 19
                           A    71    .CLASS 8
                           A    72    .TYPE 12
                           A    73    .ENDEF
                           A    74    .DEFINE "scrrows"
                           A    75    .VALUE 20
                           A    76    .CLASS 8
                           A    77    .TYPE 12
                           A    78    .ENDEF
                           A    79    .DEFINE "scrcolours"
                           A    80    .VALUE 21
                           A    81    .CLASS 8
                           A    82    .TYPE 12
                           A    83    .ENDEF
                           A    84    .DEFINE "scrpixelIndex"
                           A    85    .VALUE 22
                           A    86    .CLASS 8
                           A    87    .TYPE 12
                           A    88    .ENDEF
                           A    89    .DEFINE "keycode"
                           A    90    .VALUE 23
                           A    91    .CLASS 8
                           A    92    .TYPE 12
                           A    93    .ENDEF
                           A    94    .DEFINE "keydown"
                           A    95    .VALUE 24
                           A    96    .CLASS 8
                           A    97    .TYPE 12
                           A    98    .ENDEF
                           A    99    .DEFINE "keycount"
                           A   100    .VALUE 25
                           A   101    .CLASS 8
                           A   102    .TYPE 12
                           A   103    .ENDEF
                           A   104    .DEFINE "rtc"
                           A   105    .VALUE 26
                           A   106    .CLASS 8
                           A   107    .DIM 6
                           A   108    .TYPE 108
                           A   109    .ENDEF
                           A   110    .DEFINE "rtc_spare"
                           A   111    .VALUE 32
                           A   112    .CLASS 8
                           A   113    .DIM 2
                           A   114    .TYPE 108
                           A   115    .ENDEF
                           A   116    .DEFINE "keydelay"
                           A   117    .VALUE 34
                           A   118    .CLASS 8
                           A   119    .TYPE 13
                           A   120    .ENDEF
                           A   121    .DEFINE "keyrate"
                           A   122    .VALUE 36
                           A   123    .CLASS 8
                           A   124    .TYPE 13
                           A   125    .ENDEF
                           A   126    .DEFINE "keyled"
                           A   127    .VALUE 38
                           A   128    .CLASS 8
                           A   129    .TYPE 12
                           A   130    .ENDEF
                           A   131    .DEFINE "scrmode"
                           A   132    .VALUE 39
                           A   133    .CLASS 8
                           A   134    .TYPE 12
                           A   135    .ENDEF
                           A   136    .DEFINE "rtc_enable"
                           A   137    .VALUE 40
                           A   138    .CLASS 8
                           A   139    .TYPE 12
                           A   140    .ENDEF
                           A   141    .DEFINE "mouseX"
                           A   142    .VALUE 41
                           A   143    .CLASS 8
                           A   144    .TYPE 13
                           A   145    .ENDEF
                           A   146    .DEFINE "mouseY"
                           A   147    .VALUE 43
                           A   148    .CLASS 8
                           A   149    .TYPE 13
                           A   150    .ENDEF
                           A   151    .DEFINE "mouseButtons"
                           A   152    .VALUE 45
                           A   153    .CLASS 8
                           A   154    .TYPE 12
                           A   155    .ENDEF
                           A   156    .DEFINE "mouseWheel"
                           A   157    .VALUE 46
                           A   158    .CLASS 8
                           A   159    .TYPE 12
                           A   160    .ENDEF
                           A   161    .DEFINE "mouseXDelta"
                           A   162    .VALUE 47
                           A   163    .CLASS 8
                           A   164    .TYPE 13
                           A   165    .ENDEF
                           A   166    .DEFINE "mouseYDelta"
                           A   167    .VALUE 49
                           A   168    .CLASS 8
                           A   169    .TYPE 13
                           A   170    .ENDEF
                           A   171    .ENDREC "NONAME0"
                           A   172    .BEGREC "NONAME1",8
                           A   173    .DEFINE "baudRate"
                           A   174    .VALUE 0
                           A   175    .CLASS 8
                           A   176    .TYPE 4
                           A   177    .ENDEF
                           A   178    .DEFINE "dataBits"
                           A   179    .VALUE 3
                           A   180    .CLASS 8
                           A   181    .TYPE 12
                           A   182    .ENDEF
                           A   183    .DEFINE "stopBits"
                           A   184    .VALUE 4
                           A   185    .CLASS 8
                           A   186    .TYPE 12
                           A   187    .ENDEF
                           A   188    .DEFINE "parity"
                           A   189    .VALUE 5
                           A   190    .CLASS 8
                           A   191    .TYPE 12
                           A   192    .ENDEF
                           A   193    .DEFINE "flowcontrol"
                           A   194    .VALUE 6
                           A   195    .CLASS 8
                           A   196    .TYPE 12
                           A   197    .ENDEF
                           A   198    .DEFINE "eir"
                           A   199    .VALUE 7
                           A   200    .CLASS 8
                           A   201    .TYPE 12
                           A   202    .ENDEF
                           A   203    .ENDREC "NONAME1"
                           A   204    .BEGREC "NONAME2",15
                           A   205    .DEFINE "fs"
                           A   206    .VALUE 0
                           A   207    .CLASS 8
                           A   208    .TYPE 46
                           A   209    .ENDEF
                           A   210    .DEFINE "id"
                           A   211    .VALUE 3
                           A   212    .CLASS 8
                           A   213    .TYPE 13
                           A   214    .ENDEF
                           A   215    .DEFINE "attr"
                           A   216    .VALUE 5
                           A   217    .CLASS 8
                           A   218    .TYPE 12
                           A   219    .ENDEF
                           A   220    .DEFINE "stat"
                           A   221    .VALUE 6
                           A   222    .CLASS 8
                           A   223    .TYPE 12
                           A   224    .ENDEF
                           A   225    .DEFINE "sclust"
                           A   226    .VALUE 7
                           A   227    .CLASS 8
                           A   228    .TYPE 15
                           A   229    .ENDEF
                           A   230    .DEFINE "objsize"
                           A   231    .VALUE 11
                           A   232    .CLASS 8
                           A   233    .TYPE 15
                           A   234    .ENDEF
                           A   235    .ENDREC "NONAME2"
                           A   236    .BEGREC "NONAME3",36
                           A   237    .DEFINE "obj"
                           A   238    .VALUE 0
                           A   239    .CLASS 8
                           A   240    .TAG "NONAME2"
                           A   241    .TYPE 8
                           A   242    .ENDEF
                           A   243    .DEFINE "flag"
                           A   244    .VALUE 15
                           A   245    .CLASS 8
                           A   246    .TYPE 12
                           A   247    .ENDEF
                           A   248    .DEFINE "err"
                           A   249    .VALUE 16
                           A   250    .CLASS 8
                           A   251    .TYPE 12
                           A   252    .ENDEF
                           A   253    .DEFINE "fptr"
                           A   254    .VALUE 17
                           A   255    .CLASS 8
                           A   256    .TYPE 15
                           A   257    .ENDEF
                           A   258    .DEFINE "clust"
                           A   259    .VALUE 21
                           A   260    .CLASS 8
                           A   261    .TYPE 15
                           A   262    .ENDEF
                           A   263    .DEFINE "sect"
                           A   264    .VALUE 25
                           A   265    .CLASS 8
                           A   266    .TYPE 15
                           A   267    .ENDEF
                           A   268    .DEFINE "dir_sect"
                           A   269    .VALUE 29
                           A   270    .CLASS 8
                           A   271    .TYPE 15
                           A   272    .ENDEF
                           A   273    .DEFINE "dir_ptr"
                           A   274    .VALUE 33
                           A   275    .CLASS 8
                           A   276    .TYPE 46
                           A   277    .ENDEF
                           A   278    .ENDREC "NONAME3"
                           A   279    	SEGMENT BSS
042015                     A   280    __timer1_prevhandler:
042015                     A   281    	DS	3
                           A   282    .DEFINE "_timer1_prevhandler"
                           A   283    .ALIAS "__timer1_prevhandler"
                           A   284    .CLASS 83
                           A   285    .VALUE __timer1_prevhandler
                           A   286    .TYPE 33
                           A   287    .ENDEF
                           A   288    ;    1	/*
                           A   289    ;    2	 * Title:			AGON timer interfac
                           A   290    ;    3	 * Author:			Jeroen Venema
                           A   291    ;    4	 * Created:			06/11/2022
                           A   292    ;    5	 * Last Updated:	22/01/2023
                           A   293    ;    6	 * 
                           A   294    ;    7	 * Modinfo:
                           A   295    ;    8	 * 06/11/2022:		Initial version
                           A   296    ;    9	 * 22/01/2023:		Interrupt-based fre
                           A   297    ;   10	 * 10/04/2023:		Using mos_setintvec
                           A   298    ;   11	 */
                           A   299    ;   12	
                           A   300    ;   13	#include <defines.h>
                           A   301    ;   14	#include <ez80.h>
                           A   302    ;   15	#include "agontimer.h"
                           A   303    ;   16	#include "mos-interface.h"
                           A   304    ;   17	
                           A   305    ;   18	#define TMR1_COUNTER_1ms	(unsigned s
                           A   306    ;   19	
                           A   307    ;   20	void *_timer1_prevhandler;				
                           A   308    	SEGMENT CODE
                           A   309    ;   21	
                           A   310    ;   22	// start timer0 on a millisecond interv
                           A   311    ;   23	// this function registers an interrupt
                           A   312    ;   24	void timer1_begin(int interval)
                           A   313    ;   25	{
041451                     A   314    _timer1_begin:
                           A   315    .DEFINE "_timer1_begin"
                           A   316    
                           A   317    .VALUE _timer1_begin
                           A   318    
                           A   319    .CLASS 2
                           A   320    
                           A   321    .TYPE 65
                           A   322    
                           A   323    .ENDEF
                           A   324    
                           A   325    .BEGFUNC "timer1_begin",25,"_timer1_begin"
                           A   326    
                           A   327    .LINE 25
                           A   328    
                           A   329    .DEFINE "interval"
                           A   330    
                           A   331    .CLASS 65
                           A   332    
                           A   333    .VALUE 6
                           A   334    
                           A   335    .TYPE 4
                           A   336    
                           A   337    .ENDEF
                           A   338    
                           A   339    .DEFINE "rr"
                           A   340    
                           A   341    .CLASS 65
                           A   342    
                           A   343    .VALUE -2
                           A   344    
                           A   345    .TYPE 13
                           A   346    
                           A   347    .ENDEF
                           A   348    
                           A   349    .DEFINE "tmp"
                           A   350    
                           A   351    .CLASS 65
                           A   352    
                           A   353    .VALUE -3
                           A   354    
                           A   355    .TYPE 12
                           A   356    
                           A   357    .ENDEF
                           A   358    
041451 DDE5                A   359    	PUSH	IX
041453 DD210000 00         A   360    	LD	IX,0
041458 DD39                A   361    	ADD	IX,SP
04145A C5                  A   362    	PUSH	BC
                           A   363    ;   26		unsigned char tmp;
                           A   364    ;   27		unsigned short rr;
                           A   365    ;   28		
                           A   366    ;   29		_timer1_prevhandler = mos_setintvec
                           A   367    .LINE 29
                           A   368    
04145B 01 4A 15 04         A   369    	LD	BC,_timer1_handler
04145F C5                  A   370    	PUSH	BC
041460 010A0000            A   371    	LD	BC,10
041464 C5                  A   372    	PUSH	BC
041465 CD 28 13 04         A   373    	CALL	_mos_setintvector
041469 C1                  A   374    	POP	BC
04146A C1                  A   375    	POP	BC
04146B 22 15 20 04         A   376    	LD	(__timer1_prevhandler),HL
                           A   377    ;   30	
                           A   378    ;   31		timer1 = 0;
                           A   379    .LINE 31
                           A   380    
04146F 01000000            A   381    	LD	BC,0
041473 ED43 1E 1F 04       A   382    	LD	(_timer1),BC
                           A   383    ;   32		TMR1_CTL = 0x00;
                           A   384    .LINE 32
                           A   385    
041478 AF                  A   386    	XOR	A,A
041479 ED3983              A   387    	OUT0	(131),A
                           A   388    ;   33		rr = (unsigned short)(((18432000 / 
                           A   389    .LINE 33
                           A   390    
04147C DD0706              A   391    	LD	BC,(IX+%6)
04147F CD AE 1D 04         A   392    	CALL	__itol
041483 5F                  A   393    	LD	E,A
041484 C5E1                A   394    	LD	HL,BC
041486 01004800            A   395    	LD	BC,18432
04148A AF                  A   396    	XOR	A,A
04148B CD 81 1E 04         A   397    	CALL	__lmuls
04148F 01100000            A   398    	LD	BC,16
041493 AF                  A   399    	XOR	A,A
041494 CD A8 17 04         A   400    	CALL	__ldivs
041498 DD75FE              A   401    	LD	(IX+%FFFFFFFE),L
04149B DD74FF              A   402    	LD	(IX+%FFFFFFFF),H
                           A   403    ;   34		TMR1_RR_H = (unsigned char)(rr >> 8
                           A   404    .LINE 34
                           A   405    
04149E DD07FE              A   406    	LD	BC,(IX+%FFFFFFFE)
0414A1 CD 1C 17 04         A   407    	CALL	__stoiu
0414A5 3E08                A   408    	LD	A,%8
0414A7 CD 71 15 04         A   409    	CALL	__ishrs_b
0414AB 7D                  A   410    	LD	A,L
0414AC ED3985              A   411    	OUT0	(133),A
                           A   412    ;   35		TMR1_RR_L = (unsigned char)(rr);
                           A   413    .LINE 35
                           A   414    
0414AF DD7EFE              A   415    	LD	A,(IX+%FFFFFFFE)
0414B2 ED3984              A   416    	OUT0	(132),A
                           A   417    ;   36		tmp = TMR1_CTL;
                           A   418    .LINE 36
                           A   419    
0414B5 ED3883              A   420    	IN0	A,(131)
0414B8 DD77FD              A   421    	LD	(IX+%FFFFFFFD),A
                           A   422    ;   37	    TMR1_CTL = 0x57;
                           A   423    .LINE 37
                           A   424    
0414BB 3E57                A   425    	LD	A,%57
0414BD ED3983              A   426    	OUT0	(131),A
                           A   427    ;   38	}
                           A   428    .LINE 38
                           A   429    
0414C0 DDF9                A   430    	LD	SP,IX
0414C2 DDE1                A   431    	POP	IX
0414C4 C9                  A   432    	RET	
                           A   433    
                           A   434    
                           A   435    ;**************************** _timer1_begin ***
                           A   436    ;Name                         Addr/Register   S
                           A   437    ;_timer1                             IMPORT    
                           A   438    ;__timer1_prevhandler                STATIC    
                           A   439    ;_timer1_handler                     IMPORT  --
                           A   440    ;_mos_setintvector                   IMPORT  --
                           A   441    ;tmp                                   IX-3    
                           A   442    ;rr                                    IX-2    
                           A   443    ;interval                              IX+6    
                           A   444    
                           A   445    
                           A   446    ; Stack Frame Size: 12 (bytes)
                           A   447    ;       Spill Code: 0 (instruction)
                           A   448    
                           A   449    
                           A   450    .ENDFUNC "timer1_begin",38,"_timer1_begin"
                           A   451    ;   39	
                           A   452    ;   40	void timer1_end(void)
                           A   453    ;   41	{
0414C5                     A   454    _timer1_end:
                           A   455    .DEFINE "_timer1_end"
                           A   456    
                           A   457    .VALUE _timer1_end
                           A   458    
                           A   459    .CLASS 2
                           A   460    
                           A   461    .TYPE 65
                           A   462    
                           A   463    .ENDEF
                           A   464    
                           A   465    .BEGFUNC "timer1_end",41,"_timer1_end"
                           A   466    
0414C5 DDE5                A   467    	PUSH	IX
0414C7 DD210000 00         A   468    	LD	IX,0
0414CC DD39                A   469    	ADD	IX,SP
                           A   470    ;   42		TMR1_CTL = 0;
                           A   471    .LINE 42
                           A   472    
0414CE AF                  A   473    	XOR	A,A
0414CF ED3983              A   474    	OUT0	(131),A
                           A   475    ;   43		mos_setintvector(PRT1_IVECT, _timer
                           A   476    .LINE 43
                           A   477    
0414D2 ED4B 15 20 04       A   478    	LD	BC,(__timer1_prevhandler)
0414D7 C5                  A   479    	PUSH	BC
0414D8 010C0000            A   480    	LD	BC,12
0414DC C5                  A   481    	PUSH	BC
0414DD CD 28 13 04         A   482    	CALL	_mos_setintvector
0414E1 C1                  A   483    	POP	BC
0414E2 C1                  A   484    	POP	BC
                           A   485    ;   44	}
                           A   486    .LINE 44
                           A   487    
0414E3 DDF9                A   488    	LD	SP,IX
0414E5 DDE1                A   489    	POP	IX
0414E7 C9                  A   490    	RET	
                           A   491    
                           A   492    
                           A   493    ;**************************** _timer1_end *****
                           A   494    ;Name                         Addr/Register   S
                           A   495    ;__timer1_prevhandler                STATIC    
                           A   496    ;_mos_setintvector                   IMPORT  --
                           A   497    
                           A   498    
                           A   499    ; Stack Frame Size: 6 (bytes)
                           A   500    ;       Spill Code: 0 (instruction)
                           A   501    
                           A   502    
                           A   503    .ENDFUNC "timer1_end",44,"_timer1_end"
                           A   504    ;   45	
                           A   505    ;   46	// delay for number of ms using TMR1
                           A   506    ;   47	// this routine doesn't use the interru
                           A   507    ;   48	void delayms(int ms)
                           A   508    ;   49	{
0414E8                     A   509    _delayms:
                           A   510    .DEFINE "_delayms"
                           A   511    
                           A   512    .VALUE _delayms
                           A   513    
                           A   514    .CLASS 2
                           A   515    
                           A   516    .TYPE 65
                           A   517    
                           A   518    .ENDEF
                           A   519    
                           A   520    .BEGFUNC "delayms",49,"_delayms"
                           A   521    
                           A   522    .LINE 49
                           A   523    
                           A   524    .DEFINE "ms"
                           A   525    
                           A   526    .CLASS 65
                           A   527    
                           A   528    .VALUE 6
                           A   529    
                           A   530    .TYPE 4
                           A   531    
                           A   532    .ENDEF
                           A   533    
                           A   534    .DEFINE "timer1"
                           A   535    
                           A   536    .CLASS 65
                           A   537    
                           A   538    .VALUE -2
                           A   539    
                           A   540    .TYPE 13
                           A   541    
                           A   542    .ENDEF
                           A   543    
0414E8 DDE5                A   544    	PUSH	IX
0414EA DD210000 00         A   545    	LD	IX,0
0414EF DD39                A   546    	ADD	IX,SP
0414F1 3B                  A   547    	DEC	SP
0414F2 3B                  A   548    	DEC	SP
                           A   549    ;   50		unsigned short rr;
                           A   550    ;   51		UINT16 timer1;
                           A   551    ;   52	
                           A   552    ;   53		rr = TMR1_COUNTER_1ms - 19;	// 1,7%
                           A   553    ;   54		
                           A   554    ;   55		TMR1_CTL = 0x00;	// disable time
                           A   555    .LINE 55
                           A   556    
0414F3 AF                  A   557    	XOR	A,A
0414F4 ED3983              A   558    	OUT0	(131),A
                           A   559    ;   56		
                           A   560    ;   57		while(ms)
                           A   561    .LINE 57
                           A   562    
0414F7 18 43               A   563    	JR	L_6
0414F9                     A   564    L_7:
                           A   565    ;   58		{	
                           A   566    ;   59			TMR1_RR_H = (unsigned char)(rr 
                           A   567    .LINE 59
                           A   568    
0414F9 3E04                A   569    	LD	A,%4
0414FB ED3985              A   570    	OUT0	(133),A
                           A   571    ;   60			TMR1_RR_L = (unsigned char)(rr)
                           A   572    .LINE 60
                           A   573    
0414FE 3E6D                A   574    	LD	A,%6D
041500 ED3984              A   575    	OUT0	(132),A
                           A   576    ;   61					
                           A   577    ;   62			TMR1_CTL = 0x87; // enable, sin
                           A   578    .LINE 62
                           A   579    
041503 3E87                A   580    	LD	A,%87
041505 ED3983              A   581    	OUT0	(131),A
                           A   582    ;   63			do
041508                     A   583    L_2:
                           A   584    .LINE 63
                           A   585    
                           A   586    ;   64			{
                           A   587    ;   65				timer1 = TMR1_DR_L;
                           A   588    .LINE 65
                           A   589    
041508 ED3884              A   590    	IN0	A,(132)
04150B 4F                  A   591    	LD	C,A
04150C 0600                A   592    	LD	B,%0
04150E C5E1                A   593    	LD	HL,BC
041510 DD75FE              A   594    	LD	(IX+%FFFFFFFE),L
041513 DD74FF              A   595    	LD	(IX+%FFFFFFFF),H
                           A   596    ;   66				timer1 = timer1 | (TMR1_DR_
                           A   597    .LINE 66
                           A   598    
041516 ED3885              A   599    	IN0	A,(133)
041519 4F                  A   600    	LD	C,A
04151A C5E1                A   601    	LD	HL,BC
04151C 65                  A   602    	LD	H,L
04151D 2E00                A   603    	LD	L,%0
04151F DD07FE              A   604    	LD	BC,(IX+%FFFFFFFE)
041522 CD 78 1E 04         A   605    	CALL	__sor
041526 DD75FE              A   606    	LD	(IX+%FFFFFFFE),L
041529 DD74FF              A   607    	LD	(IX+%FFFFFFFF),H
                           A   608    ;   67			}
                           A   609    ;   68			while(timer1);
                           A   610    .LINE 68
                           A   611    
04152C DD27FE              A   612    	LD	HL,(IX+%FFFFFFFE)
04152F CD 0E 1E 04         A   613    	CALL	__scmpzero
041533 20 D3               A   614    	JR	NZ,L_2
                           A   615    ;   69			ms--;
                           A   616    .LINE 69
                           A   617    
041535 DD0706              A   618    	LD	BC,(IX+%6)
041538 0B                  A   619    	DEC	BC
041539 DD0F06              A   620    	LD	(IX+%6),BC
                           A   621    ;   70		}
04153C                     A   622    L_6:
                           A   623    .LINE 70
                           A   624    
04153C DD2706              A   625    	LD	HL,(IX+%6)
04153F CD 06 1B 04         A   626    	CALL	__icmpzero
041543 20 B4               A   627    	JR	NZ,L_7
                           A   628    .LINE 71
                           A   629    
041545 DDF9                A   630    	LD	SP,IX
041547 DDE1                A   631    	POP	IX
041549 C9                  A   632    	RET	
                           A   633    
                           A   634    
                           A   635    ;**************************** _delayms ********
                           A   636    ;Name                         Addr/Register   S
                           A   637    ;timer1                                IX-2    
                           A   638    ;ms                                    IX+6    
                           A   639    
                           A   640    
                           A   641    ; Stack Frame Size: 11 (bytes)
                           A   642    ;       Spill Code: 0 (instruction)
                           A   643    
                           A   644    
                           A   645    .ENDFUNC "delayms",71,"_delayms"
                           A   646    	XREF _mos_setintvector:ROM
                           A   647    	XREF _timer1_handler:ROM
                           A   648    	XREF _timer1:ROM
                           A   649    	XREF __ldivs:ROM
                           A   650    	XREF __lmuls:ROM
                           A   651    	XREF __sor:ROM
                           A   652    	XREF __stoiu:ROM
                           A   653    	XREF __itol:ROM
                           A   654    	XREF __scmpzero:ROM
                           A   655    	XREF __icmpzero:ROM
                           A   656    	XREF __ishrs_b:ROM
                           A   657    	XDEF _delayms
                           A   658    	XDEF _timer1_end
                           A   659    	XDEF _timer1_begin
                           A   660    	XDEF __timer1_prevhandler
                           A   661    	END


Errors: 0
Warnings: 0
Lines Assembled: 662
