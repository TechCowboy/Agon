Zilog eZ80 Macro Assembler Version 4.3 (19073001)06-Aug-22     16:26:49     page:   1


PC     Object              I  Line    Source 
                           A     1    ; Zilog eZ80 ANSI C Compiler Release 3.4
                           A     2    ; -nomodsect -optspeed -noreduceopt -nopadbranc
                           A     3    ; -peephole -globalopt -localcse -const=ROM 
                           A     4    	FILE	"..\vdu.c"
                           A     5    	.assume ADL=1
                           A     6    .DEBUG "C"
                           A     7    	SEGMENT CODE
                           A     8    .BEGREC "NONAME0",4
                           A     9    .DEFINE "dr"
                           A    10    .VALUE 0
                           A    11    .CLASS 8
                           A    12    .TYPE 12
                           A    13    .ENDEF
                           A    14    .DEFINE "ddr"
                           A    15    .VALUE 1
                           A    16    .CLASS 8
                           A    17    .TYPE 12
                           A    18    .ENDEF
                           A    19    .DEFINE "alt1"
                           A    20    .VALUE 2
                           A    21    .CLASS 8
                           A    22    .TYPE 12
                           A    23    .ENDEF
                           A    24    .DEFINE "alt2"
                           A    25    .VALUE 3
                           A    26    .CLASS 8
                           A    27    .TYPE 12
                           A    28    .ENDEF
                           A    29    .ENDREC "NONAME0"
                           A    30    .BEGREC "NONAME1",6
                           A    31    .DEFINE "baudRate"
                           A    32    .VALUE 0
                           A    33    .CLASS 8
                           A    34    .TYPE 4
                           A    35    .ENDEF
                           A    36    .DEFINE "dataBits"
                           A    37    .VALUE 3
                           A    38    .CLASS 8
                           A    39    .TYPE 12
                           A    40    .ENDEF
                           A    41    .DEFINE "stopBits"
                           A    42    .VALUE 4
                           A    43    .CLASS 8
                           A    44    .TYPE 12
                           A    45    .ENDEF
                           A    46    .DEFINE "parity"
                           A    47    .VALUE 5
                           A    48    .CLASS 8
                           A    49    .TYPE 12
                           A    50    .ENDEF
                           A    51    .ENDREC "NONAME1"
                           A    52    ;    1	/*
                           A    53    ;    2	 * Title:			AGON VDU
                           A    54    ;    3	 * Author:			Jeroen Venema
                           A    55    ;    4	 * Created:			23/07/2022
                           A    56    ;    5	 * Last Updated:	23/07/2022
                           A    57    ;    6	 *
                           A    58    ;    7	 * Modinfo:
                           A    59    ;    8	 * 
                           A    60    ;    9	 */
                           A    61    ;   10	
                           A    62    ;   11	#include "vdu.h"
                           A    63    ;   12	#include "uart.h"
                           A    64    ;   13	#include "timer.h"
                           A    65    ;   14	
                           A    66    ;   15	VOID uart_writeWord(UINT16 w)
                           A    67    ;   16	{
000000                     A    68    _uart_writeWord:
                           A    69    .DEFINE "_uart_writeWord"
                           A    70    
                           A    71    .VALUE _uart_writeWord
                           A    72    
                           A    73    .CLASS 2
                           A    74    
                           A    75    .TYPE 65
                           A    76    
                           A    77    .ENDEF
                           A    78    
                           A    79    .BEGFUNC "uart_writeWord",16,"_uart_writeWord"
                           A    80    
                           A    81    .LINE 16
                           A    82    
                           A    83    .DEFINE "w"
                           A    84    
                           A    85    .CLASS 65
                           A    86    
                           A    87    .VALUE 6
                           A    88    
                           A    89    .TYPE 13
                           A    90    
                           A    91    .ENDEF
                           A    92    
000000 DDE5                A    93    	PUSH	IX
000002 DD210000 00         A    94    	LD	IX,0
000007 DD39                A    95    	ADD	IX,SP
                           A    96    ;   17		putch(w & 0xFF); // write LSB
                           A    97    .LINE 17
                           A    98    
000009 DD0706              A    99    	LD	BC,(IX+%6)
00000C CD 00 00 00         A   100    	CALL	__stoiu
000010 7D                  A   101    	LD	A,L
000011 B7ED62              A   102    	UEXT	HL
000014 6F                  A   103    	LD	L,A
000015 E5                  A   104    	PUSH	HL
000016 CD 00 00 00         A   105    	CALL	_putch
00001A C1                  A   106    	POP	BC
                           A   107    ;   18		putch(w >> 8);	 // write MSB
                           A   108    .LINE 18
                           A   109    
00001B DD0706              A   110    	LD	BC,(IX+%6)
00001E CD 00 00 00         A   111    	CALL	__stoiu
000022 E5C1                A   112    	LD	BC,HL
000024 3B                  A   113    	DEC	SP
000025 C5                  A   114    	PUSH	BC
000026 33                  A   115    	INC	SP
000027 F1                  A   116    	POP	AF
000028 17ED62              A   117    	SEXT	HL
00002B E5                  A   118    	PUSH	HL
00002C C5                  A   119    	PUSH	BC
00002D 33                  A   120    	INC	SP
00002E C1                  A   121    	POP	BC
00002F 33                  A   122    	INC	SP
000030 33                  A   123    	INC	SP
000031 C5                  A   124    	PUSH	BC
000032 CD 00 00 00         A   125    	CALL	_putch
000036 C1                  A   126    	POP	BC
                           A   127    ;   19	}
                           A   128    .LINE 19
                           A   129    
000037 DDF9                A   130    	LD	SP,IX
000039 DDE1                A   131    	POP	IX
00003B C9                  A   132    	RET	
                           A   133    
                           A   134    
                           A   135    ;**************************** _uart_writeWord *
                           A   136    ;Name                         Addr/Register   S
                           A   137    ;_putch                              IMPORT  --
                           A   138    ;w                                     IX+6    
                           A   139    
                           A   140    
                           A   141    ; Stack Frame Size: 9 (bytes)
                           A   142    ;       Spill Code: 0 (instruction)
                           A   143    
                           A   144    
                           A   145    .ENDFUNC "uart_writeWord",19,"_uart_writeWord"
                           A   146    ;   20	
                           A   147    ;   21	VOID uart_writeLong(UINT32 l)
                           A   148    ;   22	{
00003C                     A   149    _uart_writeLong:
                           A   150    .DEFINE "_uart_writeLong"
                           A   151    
                           A   152    .VALUE _uart_writeLong
                           A   153    
                           A   154    .CLASS 2
                           A   155    
                           A   156    .TYPE 65
                           A   157    
                           A   158    .ENDEF
                           A   159    
                           A   160    .BEGFUNC "uart_writeLong",22,"_uart_writeLong"
                           A   161    
                           A   162    .LINE 22
                           A   163    
                           A   164    .DEFINE "l"
                           A   165    
                           A   166    .CLASS 65
                           A   167    
                           A   168    .VALUE 6
                           A   169    
                           A   170    .TYPE 15
                           A   171    
                           A   172    .ENDEF
                           A   173    
                           A   174    .DEFINE "temp"
                           A   175    
                           A   176    .CLASS 65
                           A   177    
                           A   178    .VALUE -4
                           A   179    
                           A   180    .TYPE 15
                           A   181    
                           A   182    .ENDEF
                           A   183    
00003C DDE5                A   184    	PUSH	IX
00003E DD210000 00         A   185    	LD	IX,0
000043 DD39                A   186    	ADD	IX,SP
000045 C5                  A   187    	PUSH	BC
000046 3B                  A   188    	DEC	SP
                           A   189    ;   23		UINT32 temp = l;
                           A   190    ;   24		
                           A   191    ;   25		putch(temp & 0xFF); // write LSB
                           A   192    .LINE 25
                           A   193    
000047 DD2706              A   194    	LD	HL,(IX+%6)
00004A 7D                  A   195    	LD	A,L
00004B B7ED62              A   196    	UEXT	HL
00004E 6F                  A   197    	LD	L,A
00004F E5                  A   198    	PUSH	HL
000050 CD 00 00 00         A   199    	CALL	_putch
000054 C1                  A   200    	POP	BC
                           A   201    ;   26		temp = temp >> 8;
                           A   202    .LINE 26
                           A   203    
000055 DD0707              A   204    	LD	BC,(IX+%7)
000058 AF                  A   205    	XOR	A,A
000059 DD0FFC              A   206    	LD	(IX+%FFFFFFFC),BC
00005C DD77FF              A   207    	LD	(IX+%FFFFFFFF),A
                           A   208    ;   27		putch(temp & 0xFF);
                           A   209    .LINE 27
                           A   210    
00005F C5E1                A   211    	LD	HL,BC
000061 7D                  A   212    	LD	A,L
000062 B7ED62              A   213    	UEXT	HL
000065 6F                  A   214    	LD	L,A
000066 E5                  A   215    	PUSH	HL
000067 CD 00 00 00         A   216    	CALL	_putch
00006B C1                  A   217    	POP	BC
                           A   218    ;   28		temp = temp >> 8;
                           A   219    .LINE 28
                           A   220    
00006C DD07FD              A   221    	LD	BC,(IX+%FFFFFFFD)
00006F AF                  A   222    	XOR	A,A
000070 DD0FFC              A   223    	LD	(IX+%FFFFFFFC),BC
000073 DD77FF              A   224    	LD	(IX+%FFFFFFFF),A
                           A   225    ;   29		putch(temp & 0xFF);
                           A   226    .LINE 29
                           A   227    
000076 C5E1                A   228    	LD	HL,BC
000078 7D                  A   229    	LD	A,L
000079 B7ED62              A   230    	UEXT	HL
00007C 6F                  A   231    	LD	L,A
00007D E5                  A   232    	PUSH	HL
00007E CD 00 00 00         A   233    	CALL	_putch
000082 C1                  A   234    	POP	BC
                           A   235    ;   30		temp = temp >> 8;
                           A   236    .LINE 30
                           A   237    
000083 DD07FD              A   238    	LD	BC,(IX+%FFFFFFFD)
000086 AF                  A   239    	XOR	A,A
000087 DD0FFC              A   240    	LD	(IX+%FFFFFFFC),BC
00008A DD77FF              A   241    	LD	(IX+%FFFFFFFF),A
                           A   242    ;   31		putch(temp & 0xFF);
                           A   243    .LINE 31
                           A   244    
00008D C5E1                A   245    	LD	HL,BC
00008F 7D                  A   246    	LD	A,L
000090 B7ED62              A   247    	UEXT	HL
000093 6F                  A   248    	LD	L,A
000094 E5                  A   249    	PUSH	HL
000095 CD 00 00 00         A   250    	CALL	_putch
000099 C1                  A   251    	POP	BC
                           A   252    ;   32		return;
                           A   253    ;   33	}
                           A   254    .LINE 33
                           A   255    
00009A DDF9                A   256    	LD	SP,IX
00009C DDE1                A   257    	POP	IX
00009E C9                  A   258    	RET	
                           A   259    
                           A   260    
                           A   261    ;**************************** _uart_writeLong *
                           A   262    ;Name                         Addr/Register   S
                           A   263    ;_putch                              IMPORT  --
                           A   264    ;temp                                  IX-4    
                           A   265    ;l                                     IX+6    
                           A   266    
                           A   267    
                           A   268    ; Stack Frame Size: 16 (bytes)
                           A   269    ;       Spill Code: 0 (instruction)
                           A   270    
                           A   271    
                           A   272    .ENDFUNC "uart_writeLong",33,"_uart_writeLong"
                           A   273    ;   34	
                           A   274    ;   35	INT16 uart_readWord(VOID)
                           A   275    ;   36	{
00009F                     A   276    _uart_readWord:
                           A   277    .DEFINE "_uart_readWord"
                           A   278    
                           A   279    .VALUE _uart_readWord
                           A   280    
                           A   281    .CLASS 2
                           A   282    
                           A   283    .TYPE 67
                           A   284    
                           A   285    .ENDEF
                           A   286    
                           A   287    .BEGFUNC "uart_readWord",36,"_uart_readWord"
                           A   288    
                           A   289    .LINE 36
                           A   290    
                           A   291    .DEFINE "w"
                           A   292    
                           A   293    .CLASS 65
                           A   294    
                           A   295    .VALUE -2
                           A   296    
                           A   297    .TYPE 13
                           A   298    
                           A   299    .ENDEF
                           A   300    
00009F DDE5                A   301    	PUSH	IX
0000A1 DD210000 00         A   302    	LD	IX,0
0000A6 DD39                A   303    	ADD	IX,SP
0000A8 C5                  A   304    	PUSH	BC
                           A   305    ;   37		UINT16 w = 0;
                           A   306    ;   38		
                           A   307    ;   39		w |= getch();
                           A   308    .LINE 39
                           A   309    
0000A9 DD77FD              A   310    	LD	(IX+%FFFFFFFD),A
0000AC CD 00 00 00         A   311    	CALL	_getch
0000B0 DD7EFD              A   312    	LD	A,(IX+%FFFFFFFD)
0000B3 49010000            A   313    	LD.LIS	BC,0
0000B7 CD 00 00 00         A   314    	CALL	__sor
0000BB DD75FE              A   315    	LD	(IX+%FFFFFFFE),L
0000BE DD74FF              A   316    	LD	(IX+%FFFFFFFF),H
                           A   317    ;   40		w |= (getch() << 8);
                           A   318    .LINE 40
                           A   319    
0000C1 DD77FD              A   320    	LD	(IX+%FFFFFFFD),A
0000C4 CD 00 00 00         A   321    	CALL	_getch
0000C8 DD7EFD              A   322    	LD	A,(IX+%FFFFFFFD)
0000CB E5                  A   323    	PUSH	HL
0000CC B7ED62              A   324    	UEXT	HL
0000CF E5                  A   325    	PUSH	HL
0000D0 33                  A   326    	INC	SP
0000D1 33                  A   327    	INC	SP
0000D2 E1                  A   328    	POP	HL
0000D3 33                  A   329    	INC	SP
0000D4 DD07FE              A   330    	LD	BC,(IX+%FFFFFFFE)
0000D7 CD 00 00 00         A   331    	CALL	__sor
0000DB DD75FE              A   332    	LD	(IX+%FFFFFFFE),L
0000DE DD74FF              A   333    	LD	(IX+%FFFFFFFF),H
                           A   334    ;   41	
                           A   335    ;   42		return w;
                           A   336    .LINE 42
                           A   337    
0000E1 DD27FE              A   338    	LD	HL,(IX+%FFFFFFFE)
                           A   339    ;   43	}
                           A   340    .LINE 43
                           A   341    
0000E4 DDF9                A   342    	LD	SP,IX
0000E6 DDE1                A   343    	POP	IX
0000E8 C9                  A   344    	RET	
                           A   345    
                           A   346    
                           A   347    ;**************************** _uart_readWord **
                           A   348    ;Name                         Addr/Register   S
                           A   349    ;_getch                              IMPORT  --
                           A   350    ;w                                     IX-2    
                           A   351    
                           A   352    
                           A   353    ; Stack Frame Size: 9 (bytes)
                           A   354    ;       Spill Code: 0 (instruction)
                           A   355    
                           A   356    
                           A   357    .ENDFUNC "uart_readWord",43,"_uart_readWord"
                           A   358    ;   44	
                           A   359    ;   45	INT32 uart_readLong(VOID)
                           A   360    ;   46	{
0000E9                     A   361    _uart_readLong:
                           A   362    .DEFINE "_uart_readLong"
                           A   363    
                           A   364    .VALUE _uart_readLong
                           A   365    
                           A   366    .CLASS 2
                           A   367    
                           A   368    .TYPE 69
                           A   369    
                           A   370    .ENDEF
                           A   371    
                           A   372    .BEGFUNC "uart_readLong",46,"_uart_readLong"
                           A   373    
                           A   374    .LINE 46
                           A   375    
                           A   376    .DEFINE "lsw"
                           A   377    
                           A   378    .CLASS 65
                           A   379    
                           A   380    .VALUE -4
                           A   381    
                           A   382    .TYPE 15
                           A   383    
                           A   384    .ENDEF
                           A   385    
                           A   386    .DEFINE "msw"
                           A   387    
                           A   388    .CLASS 65
                           A   389    
                           A   390    .VALUE -8
                           A   391    
                           A   392    .TYPE 15
                           A   393    
                           A   394    .ENDEF
                           A   395    
                           A   396    .DEFINE "r"
                           A   397    
                           A   398    .CLASS 65
                           A   399    
                           A   400    .VALUE -12
                           A   401    
                           A   402    .TYPE 15
                           A   403    
                           A   404    .ENDEF
                           A   405    
0000E9 DDE5                A   406    	PUSH	IX
0000EB DD210000 00         A   407    	LD	IX,0
0000F0 DD39                A   408    	ADD	IX,SP
0000F2 ED22F3              A   409    	LEA	HL,IX+%FFFFFFF3
0000F5 F9                  A   410    	LD	SP,HL
                           A   411    ;   47		UINT32 lsw,msw;
                           A   412    ;   48		UINT32 r;
                           A   413    ;   49		
                           A   414    ;   50		lsw = uart_readWord();
                           A   415    .LINE 50
                           A   416    
0000F6 DD77F3              A   417    	LD	(IX+%FFFFFFF3),A
0000F9 CD 9F 00 00         A   418    	CALL	_uart_readWord
0000FD DD7EF3              A   419    	LD	A,(IX+%FFFFFFF3)
000100 E5C1                A   420    	LD	BC,HL
000102 CD 00 00 00         A   421    	CALL	__stoi
000106 E5C1                A   422    	LD	BC,HL
000108 C5E1                A   423    	LD	HL,BC
00010A 29                  A   424    	ADD	HL,HL
00010B 9F                  A   425    	SBC	A,A
00010C DD0FFC              A   426    	LD	(IX+%FFFFFFFC),BC
00010F DD77FF              A   427    	LD	(IX+%FFFFFFFF),A
                           A   428    ;   51		msw = uart_readWord();
                           A   429    .LINE 51
                           A   430    
000112 DD77F3              A   431    	LD	(IX+%FFFFFFF3),A
000115 CD 9F 00 00         A   432    	CALL	_uart_readWord
000119 DD7EF3              A   433    	LD	A,(IX+%FFFFFFF3)
00011C E5C1                A   434    	LD	BC,HL
00011E CD 00 00 00         A   435    	CALL	__stoi
000122 E5C1                A   436    	LD	BC,HL
000124 C5E1                A   437    	LD	HL,BC
000126 29                  A   438    	ADD	HL,HL
000127 9F                  A   439    	SBC	A,A
000128 DD0FF8              A   440    	LD	(IX+%FFFFFFF8),BC
00012B DD77FB              A   441    	LD	(IX+%FFFFFFFB),A
                           A   442    ;   52		
                           A   443    ;   53		r = lsw | msw << 16;
                           A   444    .LINE 53
                           A   445    
00012E DD07F8              A   446    	LD	BC,(IX+%FFFFFFF8)
000131 C5                  A   447    	PUSH	BC
000132 C5                  A   448    	PUSH	BC
000133 B7ED62              A   449    	UEXT	HL
000136 E5                  A   450    	PUSH	HL
000137 33                  A   451    	INC	SP
000138 E1                  A   452    	POP	HL
000139 C1                  A   453    	POP	BC
00013A 33                  A   454    	INC	SP
00013B 33                  A   455    	INC	SP
00013C 59                  A   456    	LD	E,C
00013D DD07FC              A   457    	LD	BC,(IX+%FFFFFFFC)
000140 DD7EFF              A   458    	LD	A,(IX+%FFFFFFFF)
000143 CD 00 00 00         A   459    	CALL	__lor
000147 DD2FF4              A   460    	LD	(IX+%FFFFFFF4),HL
00014A DD73F7              A   461    	LD	(IX+%FFFFFFF7),E
                           A   462    ;   54		return r;
                           A   463    .LINE 54
                           A   464    
00014D DD27F4              A   465    	LD	HL,(IX+%FFFFFFF4)
000150 DD5EF7              A   466    	LD	E,(IX+%FFFFFFF7)
                           A   467    ;   55	}
                           A   468    .LINE 55
                           A   469    
000153 DDF9                A   470    	LD	SP,IX
000155 DDE1                A   471    	POP	IX
000157 C9                  A   472    	RET	
                           A   473    
                           A   474    
                           A   475    ;**************************** _uart_readLong **
                           A   476    ;Name                         Addr/Register   S
                           A   477    ;_uart_readWord                      IMPORT  --
                           A   478    ;r                                    IX-12    
                           A   479    ;msw                                   IX-8    
                           A   480    ;lsw                                   IX-4    
                           A   481    
                           A   482    
                           A   483    ; Stack Frame Size: 19 (bytes)
                           A   484    ;       Spill Code: 0 (instruction)
                           A   485    
                           A   486    
                           A   487    .ENDFUNC "uart_readLong",55,"_uart_readLong"
                           A   488    ;   56	
                           A   489    ;   57	
                           A   490    ;   58	VOID bitmap_select(UINT8 id)
                           A   491    ;   59	{
000158                     A   492    _bitmap_select:
                           A   493    .DEFINE "_bitmap_select"
                           A   494    
                           A   495    .VALUE _bitmap_select
                           A   496    
                           A   497    .CLASS 2
                           A   498    
                           A   499    .TYPE 65
                           A   500    
                           A   501    .ENDEF
                           A   502    
                           A   503    .BEGFUNC "bitmap_select",59,"_bitmap_select"
                           A   504    
                           A   505    .LINE 59
                           A   506    
                           A   507    .DEFINE "id"
                           A   508    
                           A   509    .CLASS 65
                           A   510    
                           A   511    .VALUE 6
                           A   512    
                           A   513    .TYPE 12
                           A   514    
                           A   515    .ENDEF
                           A   516    
000158 DDE5                A   517    	PUSH	IX
00015A DD210000 00         A   518    	LD	IX,0
00015F DD39                A   519    	ADD	IX,SP
                           A   520    ;   60		putch(23); // vdu_sys
                           A   521    .LINE 60
                           A   522    
000161 01170000            A   523    	LD	BC,23
000165 C5                  A   524    	PUSH	BC
000166 CD 00 00 00         A   525    	CALL	_putch
00016A C1                  A   526    	POP	BC
                           A   527    ;   61		putch(27); // sprite command
                           A   528    .LINE 61
                           A   529    
00016B 011B0000            A   530    	LD	BC,27
00016F C5                  A   531    	PUSH	BC
000170 CD 00 00 00         A   532    	CALL	_putch
000174 C1                  A   533    	POP	BC
                           A   534    ;   62		putch(0); // select command
                           A   535    .LINE 62
                           A   536    
000175 01000000            A   537    	LD	BC,0
000179 C5                  A   538    	PUSH	BC
00017A CD 00 00 00         A   539    	CALL	_putch
00017E C1                  A   540    	POP	BC
                           A   541    ;   63		putch(id);  // bitmap_id
                           A   542    .LINE 63
                           A   543    
00017F DD7E06              A   544    	LD	A,(IX+%6)
000182 B7ED62              A   545    	UEXT	HL
000185 6F                  A   546    	LD	L,A
000186 E5                  A   547    	PUSH	HL
000187 CD 00 00 00         A   548    	CALL	_putch
00018B C1                  A   549    	POP	BC
                           A   550    ;   64		return;
                           A   551    ;   65	}
                           A   552    .LINE 65
                           A   553    
00018C DDF9                A   554    	LD	SP,IX
00018E DDE1                A   555    	POP	IX
000190 C9                  A   556    	RET	
                           A   557    
                           A   558    
                           A   559    ;**************************** _bitmap_select **
                           A   560    ;Name                         Addr/Register   S
                           A   561    ;_putch                              IMPORT  --
                           A   562    ;id                                    IX+6    
                           A   563    
                           A   564    
                           A   565    ; Stack Frame Size: 9 (bytes)
                           A   566    ;       Spill Code: 0 (instruction)
                           A   567    
                           A   568    
                           A   569    .ENDFUNC "bitmap_select",65,"_bitmap_select"
                           A   570    ;   66	
                           A   571    ;   67	VOID bitmap_sendData_selected(UINT16 wi
                           A   572    ;   68	{
000191                     A   573    _bitmap_sendData_selected:
                           A   574    .DEFINE "_bitmap_sendData_selected"
                           A   575    
                           A   576    .VALUE _bitmap_sendData_selected
                           A   577    
                           A   578    .CLASS 2
                           A   579    
                           A   580    .TYPE 65
                           A   581    
                           A   582    .ENDEF
                           A   583    
                           A   584    .BEGFUNC "bitmap_sendData_selected",68,"_bitmap
                           A   585    
                           A   586    .LINE 68
                           A   587    
                           A   588    .DEFINE "width"
                           A   589    
                           A   590    .CLASS 65
                           A   591    
                           A   592    .VALUE 6
                           A   593    
                           A   594    .TYPE 13
                           A   595    
                           A   596    .ENDEF
                           A   597    
                           A   598    .DEFINE "height"
                           A   599    
                           A   600    .CLASS 65
                           A   601    
                           A   602    .VALUE 9
                           A   603    
                           A   604    .TYPE 13
                           A   605    
                           A   606    .ENDEF
                           A   607    
                           A   608    .DEFINE "data"
                           A   609    
                           A   610    .CLASS 65
                           A   611    
                           A   612    .VALUE 12
                           A   613    
                           A   614    .TYPE 47
                           A   615    
                           A   616    .ENDEF
                           A   617    
                           A   618    .DEFINE "n"
                           A   619    
                           A   620    .CLASS 65
                           A   621    
                           A   622    .VALUE -2
                           A   623    
                           A   624    .TYPE 13
                           A   625    
                           A   626    .ENDEF
                           A   627    
000191 DDE5                A   628    	PUSH	IX
000193 DD210000 00         A   629    	LD	IX,0
000198 DD39                A   630    	ADD	IX,SP
00019A 3B                  A   631    	DEC	SP
00019B 3B                  A   632    	DEC	SP
                           A   633    ;   69		UINT16 n;
                           A   634    ;   70		
                           A   635    ;   71		putch(23); // vdu_sys
                           A   636    .LINE 71
                           A   637    
00019C 01170000            A   638    	LD	BC,23
0001A0 C5                  A   639    	PUSH	BC
0001A1 CD 00 00 00         A   640    	CALL	_putch
0001A5 C1                  A   641    	POP	BC
                           A   642    ;   72		putch(27); // sprite command
                           A   643    .LINE 72
                           A   644    
0001A6 011B0000            A   645    	LD	BC,27
0001AA C5                  A   646    	PUSH	BC
0001AB CD 00 00 00         A   647    	CALL	_putch
0001AF C1                  A   648    	POP	BC
                           A   649    ;   73		putch(1); // send data to selected 
                           A   650    .LINE 73
                           A   651    
0001B0 01010000            A   652    	LD	BC,1
0001B4 C5                  A   653    	PUSH	BC
0001B5 CD 00 00 00         A   654    	CALL	_putch
0001B9 C1                  A   655    	POP	BC
                           A   656    ;   74		
                           A   657    ;   75		uart_writeWord(width);
                           A   658    .LINE 75
                           A   659    
0001BA DD0706              A   660    	LD	BC,(IX+%6)
0001BD C5                  A   661    	PUSH	BC
0001BE CD 00 00 00         A   662    	CALL	_uart_writeWord
0001C2 C1                  A   663    	POP	BC
                           A   664    ;   76		uart_writeWord(height);
                           A   665    .LINE 76
                           A   666    
0001C3 DD0709              A   667    	LD	BC,(IX+%9)
0001C6 C5                  A   668    	PUSH	BC
0001C7 CD 00 00 00         A   669    	CALL	_uart_writeWord
0001CB C1                  A   670    	POP	BC
                           A   671    ;   77		
                           A   672    ;   78		for(n = 0; n < (width*height); n++)
                           A   673    .LINE 78
                           A   674    
0001CC DD36FE00            A   675    	LD	(IX+%FFFFFFFE),%0
0001D0 DD36FF00            A   676    	LD	(IX+%FFFFFFFF),%0
0001D4 18 35               A   677    	JR	L_8
0001D6                     A   678    L_6:
                           A   679    ;   79		{
                           A   680    ;   80			uart_writeLong(data[n]);
                           A   681    .LINE 80
                           A   682    
0001D6 DD07FE              A   683    	LD	BC,(IX+%FFFFFFFE)
0001D9 CD 00 00 00         A   684    	CALL	__stoiu
0001DD 29                  A   685    	ADD	HL,HL
0001DE 29                  A   686    	ADD	HL,HL
0001DF DD070C              A   687    	LD	BC,(IX+%C)
0001E2 09                  A   688    	ADD	HL,BC
0001E3 E5FDE1              A   689    	LD	IY,HL
0001E6 FD0700              A   690    	LD	BC,(IY)
0001E9 FD7E03              A   691    	LD	A,(IY+%3)
0001EC 2600                A   692    	LD	H,%0
0001EE 6F                  A   693    	LD	L,A
0001EF E5                  A   694    	PUSH	HL
0001F0 C5                  A   695    	PUSH	BC
0001F1 CD 3C 00 00         A   696    	CALL	_uart_writeLong
0001F5 C1                  A   697    	POP	BC
0001F6 C1                  A   698    	POP	BC
                           A   699    ;   81			delayms(1);
                           A   700    .LINE 81
                           A   701    
0001F7 01010000            A   702    	LD	BC,1
0001FB C5                  A   703    	PUSH	BC
0001FC CD 00 00 00         A   704    	CALL	_delayms
000200 C1                  A   705    	POP	BC
000201 DD27FE              A   706    	LD	HL,(IX+%FFFFFFFE)
000204 23                  A   707    	INC	HL
000205 DD75FE              A   708    	LD	(IX+%FFFFFFFE),L
000208 DD74FF              A   709    	LD	(IX+%FFFFFFFF),H
                           A   710    ;   82		}
00020B                     A   711    L_8:
                           A   712    .LINE 82
                           A   713    
00020B DD0706              A   714    	LD	BC,(IX+%6)
00020E CD 00 00 00         A   715    	CALL	__stoiu
000212 E5D1                A   716    	LD	DE,HL
000214 DD0709              A   717    	LD	BC,(IX+%9)
000217 CD 00 00 00         A   718    	CALL	__stoiu
00021B E5C1                A   719    	LD	BC,HL
00021D D5E1                A   720    	LD	HL,DE
00021F CD 00 00 00         A   721    	CALL	__imuls
000223 E5D1                A   722    	LD	DE,HL
000225 DD07FE              A   723    	LD	BC,(IX+%FFFFFFFE)
000228 CD 00 00 00         A   724    	CALL	__stoiu
00022C B7                  A   725    	OR	A,A
00022D ED52                A   726    	SBC	HL,DE
00022F FA 39 02 00         A   727    	JP	M,L__6
000233 EA D6 01 00         A   728    	JP	PE,L_6
000237 18 04               A   729    	JR	L__7
000239                     A   730    L__6:
000239 E2 D6 01 00         A   731    	JP	PO,L_6
00023D                     A   732    L__7:
                           A   733    ;   83		return;	
                           A   734    ;   84	}
                           A   735    .LINE 84
                           A   736    
00023D DDF9                A   737    	LD	SP,IX
00023F DDE1                A   738    	POP	IX
000241 C9                  A   739    	RET	
                           A   740    
                           A   741    
                           A   742    ;**************************** _bitmap_sendData_
                           A   743    ;Name                         Addr/Register   S
                           A   744    ;_delayms                            IMPORT  --
                           A   745    ;_uart_writeLong                     IMPORT  --
                           A   746    ;_uart_writeWord                     IMPORT  --
                           A   747    ;_putch                              IMPORT  --
                           A   748    ;n                                     IX-2    
                           A   749    ;data                                 IX+12    
                           A   750    ;height                                IX+9    
                           A   751    ;width                                 IX+6    
                           A   752    
                           A   753    
                           A   754    ; Stack Frame Size: 17 (bytes)
                           A   755    ;       Spill Code: 0 (instruction)
                           A   756    
                           A   757    
                           A   758    .ENDFUNC "bitmap_sendData_selected",84,"_bitmap
                           A   759    ;   85	
                           A   760    ;   86	VOID bitmap_sendData(UINT8 id, UINT16 w
                           A   761    ;   87	{
000242                     A   762    _bitmap_sendData:
                           A   763    .DEFINE "_bitmap_sendData"
                           A   764    
                           A   765    .VALUE _bitmap_sendData
                           A   766    
                           A   767    .CLASS 2
                           A   768    
                           A   769    .TYPE 65
                           A   770    
                           A   771    .ENDEF
                           A   772    
                           A   773    .BEGFUNC "bitmap_sendData",87,"_bitmap_sendData
                           A   774    
                           A   775    .LINE 87
                           A   776    
                           A   777    .DEFINE "id"
                           A   778    
                           A   779    .CLASS 65
                           A   780    
                           A   781    .VALUE 6
                           A   782    
                           A   783    .TYPE 12
                           A   784    
                           A   785    .ENDEF
                           A   786    
                           A   787    .DEFINE "width"
                           A   788    
                           A   789    .CLASS 65
                           A   790    
                           A   791    .VALUE 9
                           A   792    
                           A   793    .TYPE 13
                           A   794    
                           A   795    .ENDEF
                           A   796    
                           A   797    .DEFINE "height"
                           A   798    
                           A   799    .CLASS 65
                           A   800    
                           A   801    .VALUE 12
                           A   802    
                           A   803    .TYPE 13
                           A   804    
                           A   805    .ENDEF
                           A   806    
                           A   807    .DEFINE "data"
                           A   808    
                           A   809    .CLASS 65
                           A   810    
                           A   811    .VALUE 15
                           A   812    
                           A   813    .TYPE 47
                           A   814    
                           A   815    .ENDEF
                           A   816    
000242 DDE5                A   817    	PUSH	IX
000244 DD210000 00         A   818    	LD	IX,0
000249 DD39                A   819    	ADD	IX,SP
                           A   820    ;   88		bitmap_select(id);
                           A   821    .LINE 88
                           A   822    
00024B DD4E06              A   823    	LD	C,(IX+%6)
00024E 0600                A   824    	LD	B,%0
000250 C5                  A   825    	PUSH	BC
000251 CD 58 01 00         A   826    	CALL	_bitmap_select
000255 C1                  A   827    	POP	BC
                           A   828    ;   89		bitmap_sendData_selected(width, hei
                           A   829    .LINE 89
                           A   830    
000256 DD070F              A   831    	LD	BC,(IX+%F)
000259 C5                  A   832    	PUSH	BC
00025A DD070C              A   833    	LD	BC,(IX+%C)
00025D C5                  A   834    	PUSH	BC
00025E DD0709              A   835    	LD	BC,(IX+%9)
000261 C5                  A   836    	PUSH	BC
000262 CD 91 01 00         A   837    	CALL	_bitmap_sendData_selected
000266 C1                  A   838    	POP	BC
000267 C1                  A   839    	POP	BC
000268 C1                  A   840    	POP	BC
                           A   841    ;   90		return;
                           A   842    ;   91	}
                           A   843    .LINE 91
                           A   844    
000269 DDF9                A   845    	LD	SP,IX
00026B DDE1                A   846    	POP	IX
00026D C9                  A   847    	RET	
                           A   848    
                           A   849    
                           A   850    ;**************************** _bitmap_sendData 
                           A   851    ;Name                         Addr/Register   S
                           A   852    ;_bitmap_sendData_selected           IMPORT  --
                           A   853    ;_bitmap_select                      IMPORT  --
                           A   854    ;data                                 IX+15    
                           A   855    ;height                               IX+12    
                           A   856    ;width                                 IX+9    
                           A   857    ;id                                    IX+6    
                           A   858    
                           A   859    
                           A   860    ; Stack Frame Size: 18 (bytes)
                           A   861    ;       Spill Code: 0 (instruction)
                           A   862    
                           A   863    
                           A   864    .ENDFUNC "bitmap_sendData",91,"_bitmap_sendData
                           A   865    ;   92	
                           A   866    ;   93	VOID bitmap_draw_selected(UINT16 x, UIN
                           A   867    ;   94	{
00026E                     A   868    _bitmap_draw_selected:
                           A   869    .DEFINE "_bitmap_draw_selected"
                           A   870    
                           A   871    .VALUE _bitmap_draw_selected
                           A   872    
                           A   873    .CLASS 2
                           A   874    
                           A   875    .TYPE 65
                           A   876    
                           A   877    .ENDEF
                           A   878    
                           A   879    .BEGFUNC "bitmap_draw_selected",94,"_bitmap_dra
                           A   880    
                           A   881    .LINE 94
                           A   882    
                           A   883    .DEFINE "x"
                           A   884    
                           A   885    .CLASS 65
                           A   886    
                           A   887    .VALUE 6
                           A   888    
                           A   889    .TYPE 13
                           A   890    
                           A   891    .ENDEF
                           A   892    
                           A   893    .DEFINE "y"
                           A   894    
                           A   895    .CLASS 65
                           A   896    
                           A   897    .VALUE 9
                           A   898    
                           A   899    .TYPE 13
                           A   900    
                           A   901    .ENDEF
                           A   902    
00026E DDE5                A   903    	PUSH	IX
000270 DD210000 00         A   904    	LD	IX,0
000275 DD39                A   905    	ADD	IX,SP
                           A   906    ;   95		putch(23); // vdu_sys
                           A   907    .LINE 95
                           A   908    
000277 01170000            A   909    	LD	BC,23
00027B C5                  A   910    	PUSH	BC
00027C CD 00 00 00         A   911    	CALL	_putch
000280 C1                  A   912    	POP	BC
                           A   913    ;   96		putch(27); // sprite command
                           A   914    .LINE 96
                           A   915    
000281 011B0000            A   916    	LD	BC,27
000285 C5                  A   917    	PUSH	BC
000286 CD 00 00 00         A   918    	CALL	_putch
00028A C1                  A   919    	POP	BC
                           A   920    ;   97		putch(3); // draw selected bitmap
                           A   921    .LINE 97
                           A   922    
00028B 01030000            A   923    	LD	BC,3
00028F C5                  A   924    	PUSH	BC
000290 CD 00 00 00         A   925    	CALL	_putch
000294 C1                  A   926    	POP	BC
                           A   927    ;   98		
                           A   928    ;   99		uart_writeWord(x);
                           A   929    .LINE 99
                           A   930    
000295 DD0706              A   931    	LD	BC,(IX+%6)
000298 C5                  A   932    	PUSH	BC
000299 CD 00 00 00         A   933    	CALL	_uart_writeWord
00029D C1                  A   934    	POP	BC
                           A   935    ;  100		uart_writeWord(y);
                           A   936    .LINE 100
                           A   937    
00029E DD0709              A   938    	LD	BC,(IX+%9)
0002A1 C5                  A   939    	PUSH	BC
0002A2 CD 00 00 00         A   940    	CALL	_uart_writeWord
0002A6 C1                  A   941    	POP	BC
                           A   942    ;  101		
                           A   943    ;  102		return;
                           A   944    ;  103	}
                           A   945    .LINE 103
                           A   946    
0002A7 DDF9                A   947    	LD	SP,IX
0002A9 DDE1                A   948    	POP	IX
0002AB C9                  A   949    	RET	
                           A   950    
                           A   951    
                           A   952    ;**************************** _bitmap_draw_sele
                           A   953    ;Name                         Addr/Register   S
                           A   954    ;_uart_writeWord                     IMPORT  --
                           A   955    ;_putch                              IMPORT  --
                           A   956    ;y                                     IX+9    
                           A   957    ;x                                     IX+6    
                           A   958    
                           A   959    
                           A   960    ; Stack Frame Size: 12 (bytes)
                           A   961    ;       Spill Code: 0 (instruction)
                           A   962    
                           A   963    
                           A   964    .ENDFUNC "bitmap_draw_selected",103,"_bitmap_dr
                           A   965    ;  104	
                           A   966    ;  105	VOID bitmap_draw(UINT8 id, UINT16 x, UI
                           A   967    ;  106	{
0002AC                     A   968    _bitmap_draw:
                           A   969    .DEFINE "_bitmap_draw"
                           A   970    
                           A   971    .VALUE _bitmap_draw
                           A   972    
                           A   973    .CLASS 2
                           A   974    
                           A   975    .TYPE 65
                           A   976    
                           A   977    .ENDEF
                           A   978    
                           A   979    .BEGFUNC "bitmap_draw",106,"_bitmap_draw"
                           A   980    
                           A   981    .LINE 106
                           A   982    
                           A   983    .DEFINE "id"
                           A   984    
                           A   985    .CLASS 65
                           A   986    
                           A   987    .VALUE 6
                           A   988    
                           A   989    .TYPE 12
                           A   990    
                           A   991    .ENDEF
                           A   992    
                           A   993    .DEFINE "x"
                           A   994    
                           A   995    .CLASS 65
                           A   996    
                           A   997    .VALUE 9
                           A   998    
                           A   999    .TYPE 13
                           A  1000    
                           A  1001    .ENDEF
                           A  1002    
                           A  1003    .DEFINE "y"
                           A  1004    
                           A  1005    .CLASS 65
                           A  1006    
                           A  1007    .VALUE 12
                           A  1008    
                           A  1009    .TYPE 13
                           A  1010    
                           A  1011    .ENDEF
                           A  1012    
0002AC DDE5                A  1013    	PUSH	IX
0002AE DD210000 00         A  1014    	LD	IX,0
0002B3 DD39                A  1015    	ADD	IX,SP
                           A  1016    ;  107		bitmap_select(id);
                           A  1017    .LINE 107
                           A  1018    
0002B5 DD4E06              A  1019    	LD	C,(IX+%6)
0002B8 0600                A  1020    	LD	B,%0
0002BA C5                  A  1021    	PUSH	BC
0002BB CD 58 01 00         A  1022    	CALL	_bitmap_select
0002BF C1                  A  1023    	POP	BC
                           A  1024    ;  108		bitmap_draw_selected(x,y);
                           A  1025    .LINE 108
                           A  1026    
0002C0 DD070C              A  1027    	LD	BC,(IX+%C)
0002C3 C5                  A  1028    	PUSH	BC
0002C4 DD0709              A  1029    	LD	BC,(IX+%9)
0002C7 C5                  A  1030    	PUSH	BC
0002C8 CD 6E 02 00         A  1031    	CALL	_bitmap_draw_selected
0002CC C1                  A  1032    	POP	BC
0002CD C1                  A  1033    	POP	BC
                           A  1034    ;  109		return;
                           A  1035    ;  110	}
                           A  1036    .LINE 110
                           A  1037    
0002CE DDF9                A  1038    	LD	SP,IX
0002D0 DDE1                A  1039    	POP	IX
0002D2 C9                  A  1040    	RET	
                           A  1041    
                           A  1042    
                           A  1043    ;**************************** _bitmap_draw ****
                           A  1044    ;Name                         Addr/Register   S
                           A  1045    ;_bitmap_draw_selected               IMPORT  --
                           A  1046    ;_bitmap_select                      IMPORT  --
                           A  1047    ;y                                    IX+12    
                           A  1048    ;x                                     IX+9    
                           A  1049    ;id                                    IX+6    
                           A  1050    
                           A  1051    
                           A  1052    ; Stack Frame Size: 15 (bytes)
                           A  1053    ;       Spill Code: 0 (instruction)
                           A  1054    
                           A  1055    
                           A  1056    .ENDFUNC "bitmap_draw",110,"_bitmap_draw"
                           A  1057    ;  111	
                           A  1058    ;  112	VOID bitmap_createSolidColor_selected(U
                           A  1059    ;  113	{
0002D3                     A  1060    _bitmap_createSolidColor_selected:
                           A  1061    .DEFINE "_bitmap_createSolidColor_selected"
                           A  1062    
                           A  1063    .VALUE _bitmap_createSolidColor_selected
                           A  1064    
                           A  1065    .CLASS 2
                           A  1066    
                           A  1067    .TYPE 65
                           A  1068    
                           A  1069    .ENDEF
                           A  1070    
                           A  1071    .BEGFUNC "bitmap_createSolidColor_selected",113
                           A  1072    
                           A  1073    .LINE 113
                           A  1074    
                           A  1075    .DEFINE "width"
                           A  1076    
                           A  1077    .CLASS 65
                           A  1078    
                           A  1079    .VALUE 6
                           A  1080    
                           A  1081    .TYPE 13
                           A  1082    
                           A  1083    .ENDEF
                           A  1084    
                           A  1085    .DEFINE "height"
                           A  1086    
                           A  1087    .CLASS 65
                           A  1088    
                           A  1089    .VALUE 9
                           A  1090    
                           A  1091    .TYPE 13
                           A  1092    
                           A  1093    .ENDEF
                           A  1094    
                           A  1095    .DEFINE "abgr"
                           A  1096    
                           A  1097    .CLASS 65
                           A  1098    
                           A  1099    .VALUE 12
                           A  1100    
                           A  1101    .TYPE 15
                           A  1102    
                           A  1103    .ENDEF
                           A  1104    
0002D3 DDE5                A  1105    	PUSH	IX
0002D5 DD210000 00         A  1106    	LD	IX,0
0002DA DD39                A  1107    	ADD	IX,SP
                           A  1108    ;  114		putch(23); // vdu_sys
                           A  1109    .LINE 114
                           A  1110    
0002DC 01170000            A  1111    	LD	BC,23
0002E0 C5                  A  1112    	PUSH	BC
0002E1 CD 00 00 00         A  1113    	CALL	_putch
0002E5 C1                  A  1114    	POP	BC
                           A  1115    ;  115		putch(27); // sprite command
                           A  1116    .LINE 115
                           A  1117    
0002E6 011B0000            A  1118    	LD	BC,27
0002EA C5                  A  1119    	PUSH	BC
0002EB CD 00 00 00         A  1120    	CALL	_putch
0002EF C1                  A  1121    	POP	BC
                           A  1122    ;  116		putch(2); // define in single color
                           A  1123    .LINE 116
                           A  1124    
0002F0 01020000            A  1125    	LD	BC,2
0002F4 C5                  A  1126    	PUSH	BC
0002F5 CD 00 00 00         A  1127    	CALL	_putch
0002F9 C1                  A  1128    	POP	BC
                           A  1129    ;  117		
                           A  1130    ;  118		uart_writeWord(width);
                           A  1131    .LINE 118
                           A  1132    
0002FA DD0706              A  1133    	LD	BC,(IX+%6)
0002FD C5                  A  1134    	PUSH	BC
0002FE CD 00 00 00         A  1135    	CALL	_uart_writeWord
000302 C1                  A  1136    	POP	BC
                           A  1137    ;  119		uart_writeWord(height);
                           A  1138    .LINE 119
                           A  1139    
000303 DD0709              A  1140    	LD	BC,(IX+%9)
000306 C5                  A  1141    	PUSH	BC
000307 CD 00 00 00         A  1142    	CALL	_uart_writeWord
00030B C1                  A  1143    	POP	BC
                           A  1144    ;  120		uart_writeLong(abgr);
                           A  1145    .LINE 120
                           A  1146    
00030C DD4E0F              A  1147    	LD	C,(IX+%F)
00030F 0600                A  1148    	LD	B,%0
000311 C5                  A  1149    	PUSH	BC
000312 DD070C              A  1150    	LD	BC,(IX+%C)
000315 C5                  A  1151    	PUSH	BC
000316 CD 3C 00 00         A  1152    	CALL	_uart_writeLong
00031A C1                  A  1153    	POP	BC
00031B C1                  A  1154    	POP	BC
                           A  1155    ;  121		return;	
                           A  1156    ;  122	}
                           A  1157    .LINE 122
                           A  1158    
00031C DDF9                A  1159    	LD	SP,IX
00031E DDE1                A  1160    	POP	IX
000320 C9                  A  1161    	RET	
                           A  1162    
                           A  1163    
                           A  1164    ;**************************** _bitmap_createSol
                           A  1165    ;Name                         Addr/Register   S
                           A  1166    ;_uart_writeLong                     IMPORT  --
                           A  1167    ;_uart_writeWord                     IMPORT  --
                           A  1168    ;_putch                              IMPORT  --
                           A  1169    ;abgr                                 IX+12    
                           A  1170    ;height                                IX+9    
                           A  1171    ;width                                 IX+6    
                           A  1172    
                           A  1173    
                           A  1174    ; Stack Frame Size: 18 (bytes)
                           A  1175    ;       Spill Code: 0 (instruction)
                           A  1176    
                           A  1177    
                           A  1178    .ENDFUNC "bitmap_createSolidColor_selected",122
                           A  1179    ;  123	
                           A  1180    ;  124	VOID bitmap_createSolidColor(UINT8 id, 
                           A  1181    ;  125	{
000321                     A  1182    _bitmap_createSolidColor:
                           A  1183    .DEFINE "_bitmap_createSolidColor"
                           A  1184    
                           A  1185    .VALUE _bitmap_createSolidColor
                           A  1186    
                           A  1187    .CLASS 2
                           A  1188    
                           A  1189    .TYPE 65
                           A  1190    
                           A  1191    .ENDEF
                           A  1192    
                           A  1193    .BEGFUNC "bitmap_createSolidColor",125,"_bitmap
                           A  1194    
                           A  1195    .LINE 125
                           A  1196    
                           A  1197    .DEFINE "id"
                           A  1198    
                           A  1199    .CLASS 65
                           A  1200    
                           A  1201    .VALUE 6
                           A  1202    
                           A  1203    .TYPE 12
                           A  1204    
                           A  1205    .ENDEF
                           A  1206    
                           A  1207    .DEFINE "width"
                           A  1208    
                           A  1209    .CLASS 65
                           A  1210    
                           A  1211    .VALUE 9
                           A  1212    
                           A  1213    .TYPE 13
                           A  1214    
                           A  1215    .ENDEF
                           A  1216    
                           A  1217    .DEFINE "height"
                           A  1218    
                           A  1219    .CLASS 65
                           A  1220    
                           A  1221    .VALUE 12
                           A  1222    
                           A  1223    .TYPE 13
                           A  1224    
                           A  1225    .ENDEF
                           A  1226    
                           A  1227    .DEFINE "abgr"
                           A  1228    
                           A  1229    .CLASS 65
                           A  1230    
                           A  1231    .VALUE 15
                           A  1232    
                           A  1233    .TYPE 15
                           A  1234    
                           A  1235    .ENDEF
                           A  1236    
000321 DDE5                A  1237    	PUSH	IX
000323 DD210000 00         A  1238    	LD	IX,0
000328 DD39                A  1239    	ADD	IX,SP
                           A  1240    ;  126		bitmap_select(id);
                           A  1241    .LINE 126
                           A  1242    
00032A DD4E06              A  1243    	LD	C,(IX+%6)
00032D 0600                A  1244    	LD	B,%0
00032F C5                  A  1245    	PUSH	BC
000330 CD 58 01 00         A  1246    	CALL	_bitmap_select
000334 C1                  A  1247    	POP	BC
                           A  1248    ;  127		bitmap_createSolidColor_selected(wi
                           A  1249    .LINE 127
                           A  1250    
000335 DD4E12              A  1251    	LD	C,(IX+%12)
000338 0600                A  1252    	LD	B,%0
00033A C5                  A  1253    	PUSH	BC
00033B DD070F              A  1254    	LD	BC,(IX+%F)
00033E C5                  A  1255    	PUSH	BC
00033F DD070C              A  1256    	LD	BC,(IX+%C)
000342 C5                  A  1257    	PUSH	BC
000343 DD0709              A  1258    	LD	BC,(IX+%9)
000346 C5                  A  1259    	PUSH	BC
000347 CD D3 02 00         A  1260    	CALL	_bitmap_createSolidColor_selected
00034B C1                  A  1261    	POP	BC
00034C C1                  A  1262    	POP	BC
00034D C1                  A  1263    	POP	BC
00034E C1                  A  1264    	POP	BC
                           A  1265    ;  128		return;
                           A  1266    ;  129	}
                           A  1267    .LINE 129
                           A  1268    
00034F DDF9                A  1269    	LD	SP,IX
000351 DDE1                A  1270    	POP	IX
000353 C9                  A  1271    	RET	
                           A  1272    
                           A  1273    
                           A  1274    ;**************************** _bitmap_createSol
                           A  1275    ;Name                         Addr/Register   S
                           A  1276    ;_bitmap_createSolidColor_selected      IMPORT 
                           A  1277    ;_bitmap_select                      IMPORT  --
                           A  1278    ;abgr                                 IX+15    
                           A  1279    ;height                               IX+12    
                           A  1280    ;width                                 IX+9    
                           A  1281    ;id                                    IX+6    
                           A  1282    
                           A  1283    
                           A  1284    ; Stack Frame Size: 21 (bytes)
                           A  1285    ;       Spill Code: 0 (instruction)
                           A  1286    
                           A  1287    
                           A  1288    .ENDFUNC "bitmap_createSolidColor",129,"_bitmap
                           A  1289    ;  130	
                           A  1290    ;  131	VOID sprite_select(UINT8 n)
                           A  1291    ;  132	{
000354                     A  1292    _sprite_select:
                           A  1293    .DEFINE "_sprite_select"
                           A  1294    
                           A  1295    .VALUE _sprite_select
                           A  1296    
                           A  1297    .CLASS 2
                           A  1298    
                           A  1299    .TYPE 65
                           A  1300    
                           A  1301    .ENDEF
                           A  1302    
                           A  1303    .BEGFUNC "sprite_select",132,"_sprite_select"
                           A  1304    
                           A  1305    .LINE 132
                           A  1306    
                           A  1307    .DEFINE "n"
                           A  1308    
                           A  1309    .CLASS 65
                           A  1310    
                           A  1311    .VALUE 6
                           A  1312    
                           A  1313    .TYPE 12
                           A  1314    
                           A  1315    .ENDEF
                           A  1316    
000354 DDE5                A  1317    	PUSH	IX
000356 DD210000 00         A  1318    	LD	IX,0
00035B DD39                A  1319    	ADD	IX,SP
                           A  1320    ;  133		putch(23); // vdu_sys
                           A  1321    .LINE 133
                           A  1322    
00035D 01170000            A  1323    	LD	BC,23
000361 C5                  A  1324    	PUSH	BC
000362 CD 00 00 00         A  1325    	CALL	_putch
000366 C1                  A  1326    	POP	BC
                           A  1327    ;  134		putch(27); // sprite command
                           A  1328    .LINE 134
                           A  1329    
000367 011B0000            A  1330    	LD	BC,27
00036B C5                  A  1331    	PUSH	BC
00036C CD 00 00 00         A  1332    	CALL	_putch
000370 C1                  A  1333    	POP	BC
                           A  1334    ;  135		putch(4); // select sprite
                           A  1335    .LINE 135
                           A  1336    
000371 01040000            A  1337    	LD	BC,4
000375 C5                  A  1338    	PUSH	BC
000376 CD 00 00 00         A  1339    	CALL	_putch
00037A C1                  A  1340    	POP	BC
                           A  1341    ;  136		putch(n);
                           A  1342    .LINE 136
                           A  1343    
00037B DD7E06              A  1344    	LD	A,(IX+%6)
00037E B7ED62              A  1345    	UEXT	HL
000381 6F                  A  1346    	LD	L,A
000382 E5                  A  1347    	PUSH	HL
000383 CD 00 00 00         A  1348    	CALL	_putch
000387 C1                  A  1349    	POP	BC
                           A  1350    ;  137		return;		
                           A  1351    ;  138	}
                           A  1352    .LINE 138
                           A  1353    
000388 DDF9                A  1354    	LD	SP,IX
00038A DDE1                A  1355    	POP	IX
00038C C9                  A  1356    	RET	
                           A  1357    
                           A  1358    
                           A  1359    ;**************************** _sprite_select **
                           A  1360    ;Name                         Addr/Register   S
                           A  1361    ;_putch                              IMPORT  --
                           A  1362    ;n                                     IX+6    
                           A  1363    
                           A  1364    
                           A  1365    ; Stack Frame Size: 9 (bytes)
                           A  1366    ;       Spill Code: 0 (instruction)
                           A  1367    
                           A  1368    
                           A  1369    .ENDFUNC "sprite_select",138,"_sprite_select"
                           A  1370    ;  139	
                           A  1371    ;  140	VOID sprite_clearFrames_selected(VOID)
                           A  1372    ;  141	{
00038D                     A  1373    _sprite_clearFrames_selected:
                           A  1374    .DEFINE "_sprite_clearFrames_selected"
                           A  1375    
                           A  1376    .VALUE _sprite_clearFrames_selected
                           A  1377    
                           A  1378    .CLASS 2
                           A  1379    
                           A  1380    .TYPE 65
                           A  1381    
                           A  1382    .ENDEF
                           A  1383    
                           A  1384    .BEGFUNC "sprite_clearFrames_selected",141,"_sp
                           A  1385    
00038D DDE5                A  1386    	PUSH	IX
00038F DD210000 00         A  1387    	LD	IX,0
000394 DD39                A  1388    	ADD	IX,SP
                           A  1389    ;  142		putch(23); // vdu_sys
                           A  1390    .LINE 142
                           A  1391    
000396 01170000            A  1392    	LD	BC,23
00039A C5                  A  1393    	PUSH	BC
00039B CD 00 00 00         A  1394    	CALL	_putch
00039F C1                  A  1395    	POP	BC
                           A  1396    ;  143		putch(27); // sprite command
                           A  1397    .LINE 143
                           A  1398    
0003A0 011B0000            A  1399    	LD	BC,27
0003A4 C5                  A  1400    	PUSH	BC
0003A5 CD 00 00 00         A  1401    	CALL	_putch
0003A9 C1                  A  1402    	POP	BC
                           A  1403    ;  144		putch(5); // clear frames
                           A  1404    .LINE 144
                           A  1405    
0003AA 01050000            A  1406    	LD	BC,5
0003AE C5                  A  1407    	PUSH	BC
0003AF CD 00 00 00         A  1408    	CALL	_putch
0003B3 C1                  A  1409    	POP	BC
                           A  1410    ;  145		return;			
                           A  1411    ;  146	}
                           A  1412    .LINE 146
                           A  1413    
0003B4 DDF9                A  1414    	LD	SP,IX
0003B6 DDE1                A  1415    	POP	IX
0003B8 C9                  A  1416    	RET	
                           A  1417    
                           A  1418    
                           A  1419    ;**************************** _sprite_clearFram
                           A  1420    ;Name                         Addr/Register   S
                           A  1421    ;_putch                              IMPORT  --
                           A  1422    
                           A  1423    
                           A  1424    ; Stack Frame Size: 6 (bytes)
                           A  1425    ;       Spill Code: 0 (instruction)
                           A  1426    
                           A  1427    
                           A  1428    .ENDFUNC "sprite_clearFrames_selected",146,"_sp
                           A  1429    ;  147	
                           A  1430    ;  148	VOID sprite_clearFrames(UINT8 id)
                           A  1431    ;  149	{
0003B9                     A  1432    _sprite_clearFrames:
                           A  1433    .DEFINE "_sprite_clearFrames"
                           A  1434    
                           A  1435    .VALUE _sprite_clearFrames
                           A  1436    
                           A  1437    .CLASS 2
                           A  1438    
                           A  1439    .TYPE 65
                           A  1440    
                           A  1441    .ENDEF
                           A  1442    
                           A  1443    .BEGFUNC "sprite_clearFrames",149,"_sprite_clea
                           A  1444    
                           A  1445    .LINE 149
                           A  1446    
                           A  1447    .DEFINE "id"
                           A  1448    
                           A  1449    .CLASS 65
                           A  1450    
                           A  1451    .VALUE 6
                           A  1452    
                           A  1453    .TYPE 12
                           A  1454    
                           A  1455    .ENDEF
                           A  1456    
0003B9 DDE5                A  1457    	PUSH	IX
0003BB DD210000 00         A  1458    	LD	IX,0
0003C0 DD39                A  1459    	ADD	IX,SP
                           A  1460    ;  150		sprite_select(id);
                           A  1461    .LINE 150
                           A  1462    
0003C2 DD4E06              A  1463    	LD	C,(IX+%6)
0003C5 0600                A  1464    	LD	B,%0
0003C7 C5                  A  1465    	PUSH	BC
0003C8 CD 54 03 00         A  1466    	CALL	_sprite_select
0003CC C1                  A  1467    	POP	BC
                           A  1468    ;  151		sprite_clearFrames_selected();
                           A  1469    .LINE 151
                           A  1470    
0003CD CD 8D 03 00         A  1471    	CALL	_sprite_clearFrames_selected
                           A  1472    ;  152		return;			
                           A  1473    ;  153	}
                           A  1474    .LINE 153
                           A  1475    
0003D1 DDF9                A  1476    	LD	SP,IX
0003D3 DDE1                A  1477    	POP	IX
0003D5 C9                  A  1478    	RET	
                           A  1479    
                           A  1480    
                           A  1481    ;**************************** _sprite_clearFram
                           A  1482    ;Name                         Addr/Register   S
                           A  1483    ;_sprite_clearFrames_selected        IMPORT  --
                           A  1484    ;_sprite_select                      IMPORT  --
                           A  1485    ;id                                    IX+6    
                           A  1486    
                           A  1487    
                           A  1488    ; Stack Frame Size: 9 (bytes)
                           A  1489    ;       Spill Code: 0 (instruction)
                           A  1490    
                           A  1491    
                           A  1492    .ENDFUNC "sprite_clearFrames",153,"_sprite_clea
                           A  1493    ;  154	
                           A  1494    ;  155	VOID sprite_addFrame_selected(UINT8 bit
                           A  1495    ;  156	{
0003D6                     A  1496    _sprite_addFrame_selected:
                           A  1497    .DEFINE "_sprite_addFrame_selected"
                           A  1498    
                           A  1499    .VALUE _sprite_addFrame_selected
                           A  1500    
                           A  1501    .CLASS 2
                           A  1502    
                           A  1503    .TYPE 65
                           A  1504    
                           A  1505    .ENDEF
                           A  1506    
                           A  1507    .BEGFUNC "sprite_addFrame_selected",156,"_sprit
                           A  1508    
                           A  1509    .LINE 156
                           A  1510    
                           A  1511    .DEFINE "bitmapid"
                           A  1512    
                           A  1513    .CLASS 65
                           A  1514    
                           A  1515    .VALUE 6
                           A  1516    
                           A  1517    .TYPE 12
                           A  1518    
                           A  1519    .ENDEF
                           A  1520    
0003D6 DDE5                A  1521    	PUSH	IX
0003D8 DD210000 00         A  1522    	LD	IX,0
0003DD DD39                A  1523    	ADD	IX,SP
                           A  1524    ;  157		putch(23); // vdu_sys
                           A  1525    .LINE 157
                           A  1526    
0003DF 01170000            A  1527    	LD	BC,23
0003E3 C5                  A  1528    	PUSH	BC
0003E4 CD 00 00 00         A  1529    	CALL	_putch
0003E8 C1                  A  1530    	POP	BC
                           A  1531    ;  158		putch(27); // sprite command
                           A  1532    .LINE 158
                           A  1533    
0003E9 011B0000            A  1534    	LD	BC,27
0003ED C5                  A  1535    	PUSH	BC
0003EE CD 00 00 00         A  1536    	CALL	_putch
0003F2 C1                  A  1537    	POP	BC
                           A  1538    ;  159		putch(6); // add frame
                           A  1539    .LINE 159
                           A  1540    
0003F3 01060000            A  1541    	LD	BC,6
0003F7 C5                  A  1542    	PUSH	BC
0003F8 CD 00 00 00         A  1543    	CALL	_putch
0003FC C1                  A  1544    	POP	BC
                           A  1545    ;  160		putch(bitmapid);
                           A  1546    .LINE 160
                           A  1547    
0003FD DD7E06              A  1548    	LD	A,(IX+%6)
000400 B7ED62              A  1549    	UEXT	HL
000403 6F                  A  1550    	LD	L,A
000404 E5                  A  1551    	PUSH	HL
000405 CD 00 00 00         A  1552    	CALL	_putch
000409 C1                  A  1553    	POP	BC
                           A  1554    ;  161		return;
                           A  1555    ;  162	}
                           A  1556    .LINE 162
                           A  1557    
00040A DDF9                A  1558    	LD	SP,IX
00040C DDE1                A  1559    	POP	IX
00040E C9                  A  1560    	RET	
                           A  1561    
                           A  1562    
                           A  1563    ;**************************** _sprite_addFrame_
                           A  1564    ;Name                         Addr/Register   S
                           A  1565    ;_putch                              IMPORT  --
                           A  1566    ;bitmapid                              IX+6    
                           A  1567    
                           A  1568    
                           A  1569    ; Stack Frame Size: 9 (bytes)
                           A  1570    ;       Spill Code: 0 (instruction)
                           A  1571    
                           A  1572    
                           A  1573    .ENDFUNC "sprite_addFrame_selected",162,"_sprit
                           A  1574    ;  163	
                           A  1575    ;  164	VOID sprite_addFrame(UINT8 id, UINT8 bi
                           A  1576    ;  165	{
00040F                     A  1577    _sprite_addFrame:
                           A  1578    .DEFINE "_sprite_addFrame"
                           A  1579    
                           A  1580    .VALUE _sprite_addFrame
                           A  1581    
                           A  1582    .CLASS 2
                           A  1583    
                           A  1584    .TYPE 65
                           A  1585    
                           A  1586    .ENDEF
                           A  1587    
                           A  1588    .BEGFUNC "sprite_addFrame",165,"_sprite_addFram
                           A  1589    
                           A  1590    .LINE 165
                           A  1591    
                           A  1592    .DEFINE "id"
                           A  1593    
                           A  1594    .CLASS 65
                           A  1595    
                           A  1596    .VALUE 6
                           A  1597    
                           A  1598    .TYPE 12
                           A  1599    
                           A  1600    .ENDEF
                           A  1601    
                           A  1602    .DEFINE "bitmapid"
                           A  1603    
                           A  1604    .CLASS 65
                           A  1605    
                           A  1606    .VALUE 9
                           A  1607    
                           A  1608    .TYPE 12
                           A  1609    
                           A  1610    .ENDEF
                           A  1611    
00040F DDE5                A  1612    	PUSH	IX
000411 DD210000 00         A  1613    	LD	IX,0
000416 DD39                A  1614    	ADD	IX,SP
                           A  1615    ;  166		sprite_select(id);
                           A  1616    .LINE 166
                           A  1617    
000418 DD4E06              A  1618    	LD	C,(IX+%6)
00041B 0600                A  1619    	LD	B,%0
00041D C5                  A  1620    	PUSH	BC
00041E CD 54 03 00         A  1621    	CALL	_sprite_select
000422 C1                  A  1622    	POP	BC
                           A  1623    ;  167		sprite_addFrame_selected(bitmapid);
                           A  1624    .LINE 167
                           A  1625    
000423 DD4E09              A  1626    	LD	C,(IX+%9)
000426 0600                A  1627    	LD	B,%0
000428 C5                  A  1628    	PUSH	BC
000429 CD D6 03 00         A  1629    	CALL	_sprite_addFrame_selected
00042D C1                  A  1630    	POP	BC
                           A  1631    ;  168		return;
                           A  1632    ;  169	}
                           A  1633    .LINE 169
                           A  1634    
00042E DDF9                A  1635    	LD	SP,IX
000430 DDE1                A  1636    	POP	IX
000432 C9                  A  1637    	RET	
                           A  1638    
                           A  1639    
                           A  1640    ;**************************** _sprite_addFrame 
                           A  1641    ;Name                         Addr/Register   S
                           A  1642    ;_sprite_addFrame_selected           IMPORT  --
                           A  1643    ;_sprite_select                      IMPORT  --
                           A  1644    ;bitmapid                              IX+9    
                           A  1645    ;id                                    IX+6    
                           A  1646    
                           A  1647    
                           A  1648    ; Stack Frame Size: 12 (bytes)
                           A  1649    ;       Spill Code: 0 (instruction)
                           A  1650    
                           A  1651    
                           A  1652    .ENDFUNC "sprite_addFrame",169,"_sprite_addFram
                           A  1653    ;  170	
                           A  1654    ;  171	VOID sprite_activateTotal(UINT8 n)
                           A  1655    ;  172	{
000433                     A  1656    _sprite_activateTotal:
                           A  1657    .DEFINE "_sprite_activateTotal"
                           A  1658    
                           A  1659    .VALUE _sprite_activateTotal
                           A  1660    
                           A  1661    .CLASS 2
                           A  1662    
                           A  1663    .TYPE 65
                           A  1664    
                           A  1665    .ENDEF
                           A  1666    
                           A  1667    .BEGFUNC "sprite_activateTotal",172,"_sprite_ac
                           A  1668    
                           A  1669    .LINE 172
                           A  1670    
                           A  1671    .DEFINE "n"
                           A  1672    
                           A  1673    .CLASS 65
                           A  1674    
                           A  1675    .VALUE 6
                           A  1676    
                           A  1677    .TYPE 12
                           A  1678    
                           A  1679    .ENDEF
                           A  1680    
000433 DDE5                A  1681    	PUSH	IX
000435 DD210000 00         A  1682    	LD	IX,0
00043A DD39                A  1683    	ADD	IX,SP
                           A  1684    ;  173		putch(23); // vdu_sys
                           A  1685    .LINE 173
                           A  1686    
00043C 01170000            A  1687    	LD	BC,23
000440 C5                  A  1688    	PUSH	BC
000441 CD 00 00 00         A  1689    	CALL	_putch
000445 C1                  A  1690    	POP	BC
                           A  1691    ;  174		putch(27); // sprite command
                           A  1692    .LINE 174
                           A  1693    
000446 011B0000            A  1694    	LD	BC,27
00044A C5                  A  1695    	PUSH	BC
00044B CD 00 00 00         A  1696    	CALL	_putch
00044F C1                  A  1697    	POP	BC
                           A  1698    ;  175		putch(7); // set number of sprites
                           A  1699    .LINE 175
                           A  1700    
000450 01070000            A  1701    	LD	BC,7
000454 C5                  A  1702    	PUSH	BC
000455 CD 00 00 00         A  1703    	CALL	_putch
000459 C1                  A  1704    	POP	BC
                           A  1705    ;  176		putch(n);
                           A  1706    .LINE 176
                           A  1707    
00045A DD7E06              A  1708    	LD	A,(IX+%6)
00045D B7ED62              A  1709    	UEXT	HL
000460 6F                  A  1710    	LD	L,A
000461 E5                  A  1711    	PUSH	HL
000462 CD 00 00 00         A  1712    	CALL	_putch
000466 C1                  A  1713    	POP	BC
                           A  1714    ;  177		return;
                           A  1715    ;  178	}
                           A  1716    .LINE 178
                           A  1717    
000467 DDF9                A  1718    	LD	SP,IX
000469 DDE1                A  1719    	POP	IX
00046B C9                  A  1720    	RET	
                           A  1721    
                           A  1722    
                           A  1723    ;**************************** _sprite_activateT
                           A  1724    ;Name                         Addr/Register   S
                           A  1725    ;_putch                              IMPORT  --
                           A  1726    ;n                                     IX+6    
                           A  1727    
                           A  1728    
                           A  1729    ; Stack Frame Size: 9 (bytes)
                           A  1730    ;       Spill Code: 0 (instruction)
                           A  1731    
                           A  1732    
                           A  1733    .ENDFUNC "sprite_activateTotal",178,"_sprite_ac
                           A  1734    ;  179	
                           A  1735    ;  180	VOID sprite_nextFrame(VOID)
                           A  1736    ;  181	{
00046C                     A  1737    _sprite_nextFrame:
                           A  1738    .DEFINE "_sprite_nextFrame"
                           A  1739    
                           A  1740    .VALUE _sprite_nextFrame
                           A  1741    
                           A  1742    .CLASS 2
                           A  1743    
                           A  1744    .TYPE 65
                           A  1745    
                           A  1746    .ENDEF
                           A  1747    
                           A  1748    .BEGFUNC "sprite_nextFrame",181,"_sprite_nextFr
                           A  1749    
00046C DDE5                A  1750    	PUSH	IX
00046E DD210000 00         A  1751    	LD	IX,0
000473 DD39                A  1752    	ADD	IX,SP
                           A  1753    ;  182		putch(23); // vdu_sys
                           A  1754    .LINE 182
                           A  1755    
000475 01170000            A  1756    	LD	BC,23
000479 C5                  A  1757    	PUSH	BC
00047A CD 00 00 00         A  1758    	CALL	_putch
00047E C1                  A  1759    	POP	BC
                           A  1760    ;  183		putch(27); // sprite command
                           A  1761    .LINE 183
                           A  1762    
00047F 011B0000            A  1763    	LD	BC,27
000483 C5                  A  1764    	PUSH	BC
000484 CD 00 00 00         A  1765    	CALL	_putch
000488 C1                  A  1766    	POP	BC
                           A  1767    ;  184		putch(8); // next frame
                           A  1768    .LINE 184
                           A  1769    
000489 01080000            A  1770    	LD	BC,8
00048D C5                  A  1771    	PUSH	BC
00048E CD 00 00 00         A  1772    	CALL	_putch
000492 C1                  A  1773    	POP	BC
                           A  1774    ;  185		return;	
                           A  1775    ;  186	}
                           A  1776    .LINE 186
                           A  1777    
000493 DDF9                A  1778    	LD	SP,IX
000495 DDE1                A  1779    	POP	IX
000497 C9                  A  1780    	RET	
                           A  1781    
                           A  1782    
                           A  1783    ;**************************** _sprite_nextFrame
                           A  1784    ;Name                         Addr/Register   S
                           A  1785    ;_putch                              IMPORT  --
                           A  1786    
                           A  1787    
                           A  1788    ; Stack Frame Size: 6 (bytes)
                           A  1789    ;       Spill Code: 0 (instruction)
                           A  1790    
                           A  1791    
                           A  1792    .ENDFUNC "sprite_nextFrame",186,"_sprite_nextFr
                           A  1793    ;  187	
                           A  1794    ;  188	VOID sprite_previousFrame(VOID)
                           A  1795    ;  189	{
000498                     A  1796    _sprite_previousFrame:
                           A  1797    .DEFINE "_sprite_previousFrame"
                           A  1798    
                           A  1799    .VALUE _sprite_previousFrame
                           A  1800    
                           A  1801    .CLASS 2
                           A  1802    
                           A  1803    .TYPE 65
                           A  1804    
                           A  1805    .ENDEF
                           A  1806    
                           A  1807    .BEGFUNC "sprite_previousFrame",189,"_sprite_pr
                           A  1808    
000498 DDE5                A  1809    	PUSH	IX
00049A DD210000 00         A  1810    	LD	IX,0
00049F DD39                A  1811    	ADD	IX,SP
                           A  1812    ;  190		putch(23); // vdu_sys
                           A  1813    .LINE 190
                           A  1814    
0004A1 01170000            A  1815    	LD	BC,23
0004A5 C5                  A  1816    	PUSH	BC
0004A6 CD 00 00 00         A  1817    	CALL	_putch
0004AA C1                  A  1818    	POP	BC
                           A  1819    ;  191		putch(27); // sprite command
                           A  1820    .LINE 191
                           A  1821    
0004AB 011B0000            A  1822    	LD	BC,27
0004AF C5                  A  1823    	PUSH	BC
0004B0 CD 00 00 00         A  1824    	CALL	_putch
0004B4 C1                  A  1825    	POP	BC
                           A  1826    ;  192		putch(9); // previous frame
                           A  1827    .LINE 192
                           A  1828    
0004B5 01090000            A  1829    	LD	BC,9
0004B9 C5                  A  1830    	PUSH	BC
0004BA CD 00 00 00         A  1831    	CALL	_putch
0004BE C1                  A  1832    	POP	BC
                           A  1833    ;  193		return;
                           A  1834    ;  194	
                           A  1835    ;  195	}
                           A  1836    .LINE 195
                           A  1837    
0004BF DDF9                A  1838    	LD	SP,IX
0004C1 DDE1                A  1839    	POP	IX
0004C3 C9                  A  1840    	RET	
                           A  1841    
                           A  1842    
                           A  1843    ;**************************** _sprite_previousF
                           A  1844    ;Name                         Addr/Register   S
                           A  1845    ;_putch                              IMPORT  --
                           A  1846    
                           A  1847    
                           A  1848    ; Stack Frame Size: 6 (bytes)
                           A  1849    ;       Spill Code: 0 (instruction)
                           A  1850    
                           A  1851    
                           A  1852    .ENDFUNC "sprite_previousFrame",195,"_sprite_pr
                           A  1853    ;  196	
                           A  1854    ;  197	VOID sprite_setFrame(UINT8 n)
                           A  1855    ;  198	{
0004C4                     A  1856    _sprite_setFrame:
                           A  1857    .DEFINE "_sprite_setFrame"
                           A  1858    
                           A  1859    .VALUE _sprite_setFrame
                           A  1860    
                           A  1861    .CLASS 2
                           A  1862    
                           A  1863    .TYPE 65
                           A  1864    
                           A  1865    .ENDEF
                           A  1866    
                           A  1867    .BEGFUNC "sprite_setFrame",198,"_sprite_setFram
                           A  1868    
                           A  1869    .LINE 198
                           A  1870    
                           A  1871    .DEFINE "n"
                           A  1872    
                           A  1873    .CLASS 65
                           A  1874    
                           A  1875    .VALUE 6
                           A  1876    
                           A  1877    .TYPE 12
                           A  1878    
                           A  1879    .ENDEF
                           A  1880    
0004C4 DDE5                A  1881    	PUSH	IX
0004C6 DD210000 00         A  1882    	LD	IX,0
0004CB DD39                A  1883    	ADD	IX,SP
                           A  1884    ;  199		putch(23); // vdu_sys
                           A  1885    .LINE 199
                           A  1886    
0004CD 01170000            A  1887    	LD	BC,23
0004D1 C5                  A  1888    	PUSH	BC
0004D2 CD 00 00 00         A  1889    	CALL	_putch
0004D6 C1                  A  1890    	POP	BC
                           A  1891    ;  200		putch(27); // sprite command
                           A  1892    .LINE 200
                           A  1893    
0004D7 011B0000            A  1894    	LD	BC,27
0004DB C5                  A  1895    	PUSH	BC
0004DC CD 00 00 00         A  1896    	CALL	_putch
0004E0 C1                  A  1897    	POP	BC
                           A  1898    ;  201		putch(10); // set current frame
                           A  1899    .LINE 201
                           A  1900    
0004E1 010A0000            A  1901    	LD	BC,10
0004E5 C5                  A  1902    	PUSH	BC
0004E6 CD 00 00 00         A  1903    	CALL	_putch
0004EA C1                  A  1904    	POP	BC
                           A  1905    ;  202		putch(n);
                           A  1906    .LINE 202
                           A  1907    
0004EB DD7E06              A  1908    	LD	A,(IX+%6)
0004EE B7ED62              A  1909    	UEXT	HL
0004F1 6F                  A  1910    	LD	L,A
0004F2 E5                  A  1911    	PUSH	HL
0004F3 CD 00 00 00         A  1912    	CALL	_putch
0004F7 C1                  A  1913    	POP	BC
                           A  1914    ;  203		return;
                           A  1915    ;  204	}
                           A  1916    .LINE 204
                           A  1917    
0004F8 DDF9                A  1918    	LD	SP,IX
0004FA DDE1                A  1919    	POP	IX
0004FC C9                  A  1920    	RET	
                           A  1921    
                           A  1922    
                           A  1923    ;**************************** _sprite_setFrame 
                           A  1924    ;Name                         Addr/Register   S
                           A  1925    ;_putch                              IMPORT  --
                           A  1926    ;n                                     IX+6    
                           A  1927    
                           A  1928    
                           A  1929    ; Stack Frame Size: 9 (bytes)
                           A  1930    ;       Spill Code: 0 (instruction)
                           A  1931    
                           A  1932    
                           A  1933    .ENDFUNC "sprite_setFrame",204,"_sprite_setFram
                           A  1934    ;  205	
                           A  1935    ;  206	VOID sprite_show(VOID)
                           A  1936    ;  207	{
0004FD                     A  1937    _sprite_show:
                           A  1938    .DEFINE "_sprite_show"
                           A  1939    
                           A  1940    .VALUE _sprite_show
                           A  1941    
                           A  1942    .CLASS 2
                           A  1943    
                           A  1944    .TYPE 65
                           A  1945    
                           A  1946    .ENDEF
                           A  1947    
                           A  1948    .BEGFUNC "sprite_show",207,"_sprite_show"
                           A  1949    
0004FD DDE5                A  1950    	PUSH	IX
0004FF DD210000 00         A  1951    	LD	IX,0
000504 DD39                A  1952    	ADD	IX,SP
                           A  1953    ;  208		putch(23); // vdu_sys
                           A  1954    .LINE 208
                           A  1955    
000506 01170000            A  1956    	LD	BC,23
00050A C5                  A  1957    	PUSH	BC
00050B CD 00 00 00         A  1958    	CALL	_putch
00050F C1                  A  1959    	POP	BC
                           A  1960    ;  209		putch(27); // sprite command
                           A  1961    .LINE 209
                           A  1962    
000510 011B0000            A  1963    	LD	BC,27
000514 C5                  A  1964    	PUSH	BC
000515 CD 00 00 00         A  1965    	CALL	_putch
000519 C1                  A  1966    	POP	BC
                           A  1967    ;  210		putch(11); // show sprite
                           A  1968    .LINE 210
                           A  1969    
00051A 010B0000            A  1970    	LD	BC,11
00051E C5                  A  1971    	PUSH	BC
00051F CD 00 00 00         A  1972    	CALL	_putch
000523 C1                  A  1973    	POP	BC
                           A  1974    ;  211		return;		
                           A  1975    ;  212	}
                           A  1976    .LINE 212
                           A  1977    
000524 DDF9                A  1978    	LD	SP,IX
000526 DDE1                A  1979    	POP	IX
000528 C9                  A  1980    	RET	
                           A  1981    
                           A  1982    
                           A  1983    ;**************************** _sprite_show ****
                           A  1984    ;Name                         Addr/Register   S
                           A  1985    ;_putch                              IMPORT  --
                           A  1986    
                           A  1987    
                           A  1988    ; Stack Frame Size: 6 (bytes)
                           A  1989    ;       Spill Code: 0 (instruction)
                           A  1990    
                           A  1991    
                           A  1992    .ENDFUNC "sprite_show",212,"_sprite_show"
                           A  1993    ;  213	
                           A  1994    ;  214	VOID sprite_hide(VOID)
                           A  1995    ;  215	{
000529                     A  1996    _sprite_hide:
                           A  1997    .DEFINE "_sprite_hide"
                           A  1998    
                           A  1999    .VALUE _sprite_hide
                           A  2000    
                           A  2001    .CLASS 2
                           A  2002    
                           A  2003    .TYPE 65
                           A  2004    
                           A  2005    .ENDEF
                           A  2006    
                           A  2007    .BEGFUNC "sprite_hide",215,"_sprite_hide"
                           A  2008    
000529 DDE5                A  2009    	PUSH	IX
00052B DD210000 00         A  2010    	LD	IX,0
000530 DD39                A  2011    	ADD	IX,SP
                           A  2012    ;  216		putch(23); // vdu_sys
                           A  2013    .LINE 216
                           A  2014    
000532 01170000            A  2015    	LD	BC,23
000536 C5                  A  2016    	PUSH	BC
000537 CD 00 00 00         A  2017    	CALL	_putch
00053B C1                  A  2018    	POP	BC
                           A  2019    ;  217		putch(27); // sprite command
                           A  2020    .LINE 217
                           A  2021    
00053C 011B0000            A  2022    	LD	BC,27
000540 C5                  A  2023    	PUSH	BC
000541 CD 00 00 00         A  2024    	CALL	_putch
000545 C1                  A  2025    	POP	BC
                           A  2026    ;  218		putch(12); // hide sprite
                           A  2027    .LINE 218
                           A  2028    
000546 010C0000            A  2029    	LD	BC,12
00054A C5                  A  2030    	PUSH	BC
00054B CD 00 00 00         A  2031    	CALL	_putch
00054F C1                  A  2032    	POP	BC
                           A  2033    ;  219		return;	
                           A  2034    ;  220	}
                           A  2035    .LINE 220
                           A  2036    
000550 DDF9                A  2037    	LD	SP,IX
000552 DDE1                A  2038    	POP	IX
000554 C9                  A  2039    	RET	
                           A  2040    
                           A  2041    
                           A  2042    ;**************************** _sprite_hide ****
                           A  2043    ;Name                         Addr/Register   S
                           A  2044    ;_putch                              IMPORT  --
                           A  2045    
                           A  2046    
                           A  2047    ; Stack Frame Size: 6 (bytes)
                           A  2048    ;       Spill Code: 0 (instruction)
                           A  2049    
                           A  2050    
                           A  2051    .ENDFUNC "sprite_hide",220,"_sprite_hide"
                           A  2052    ;  221	
                           A  2053    ;  222	VOID sprite_moveTo(UINT16 x, UINT16 y)
                           A  2054    ;  223	{
000555                     A  2055    _sprite_moveTo:
                           A  2056    .DEFINE "_sprite_moveTo"
                           A  2057    
                           A  2058    .VALUE _sprite_moveTo
                           A  2059    
                           A  2060    .CLASS 2
                           A  2061    
                           A  2062    .TYPE 65
                           A  2063    
                           A  2064    .ENDEF
                           A  2065    
                           A  2066    .BEGFUNC "sprite_moveTo",223,"_sprite_moveTo"
                           A  2067    
                           A  2068    .LINE 223
                           A  2069    
                           A  2070    .DEFINE "x"
                           A  2071    
                           A  2072    .CLASS 65
                           A  2073    
                           A  2074    .VALUE 6
                           A  2075    
                           A  2076    .TYPE 13
                           A  2077    
                           A  2078    .ENDEF
                           A  2079    
                           A  2080    .DEFINE "y"
                           A  2081    
                           A  2082    .CLASS 65
                           A  2083    
                           A  2084    .VALUE 9
                           A  2085    
                           A  2086    .TYPE 13
                           A  2087    
                           A  2088    .ENDEF
                           A  2089    
000555 DDE5                A  2090    	PUSH	IX
000557 DD210000 00         A  2091    	LD	IX,0
00055C DD39                A  2092    	ADD	IX,SP
                           A  2093    ;  224		putch(23); // vdu_sys
                           A  2094    .LINE 224
                           A  2095    
00055E 01170000            A  2096    	LD	BC,23
000562 C5                  A  2097    	PUSH	BC
000563 CD 00 00 00         A  2098    	CALL	_putch
000567 C1                  A  2099    	POP	BC
                           A  2100    ;  225		putch(27); // sprite command
                           A  2101    .LINE 225
                           A  2102    
000568 011B0000            A  2103    	LD	BC,27
00056C C5                  A  2104    	PUSH	BC
00056D CD 00 00 00         A  2105    	CALL	_putch
000571 C1                  A  2106    	POP	BC
                           A  2107    ;  226		putch(13); // move to
                           A  2108    .LINE 226
                           A  2109    
000572 010D0000            A  2110    	LD	BC,13
000576 C5                  A  2111    	PUSH	BC
000577 CD 00 00 00         A  2112    	CALL	_putch
00057B C1                  A  2113    	POP	BC
                           A  2114    ;  227		uart_writeWord(x);
                           A  2115    .LINE 227
                           A  2116    
00057C DD0706              A  2117    	LD	BC,(IX+%6)
00057F C5                  A  2118    	PUSH	BC
000580 CD 00 00 00         A  2119    	CALL	_uart_writeWord
000584 C1                  A  2120    	POP	BC
                           A  2121    ;  228		uart_writeWord(y);
                           A  2122    .LINE 228
                           A  2123    
000585 DD0709              A  2124    	LD	BC,(IX+%9)
000588 C5                  A  2125    	PUSH	BC
000589 CD 00 00 00         A  2126    	CALL	_uart_writeWord
00058D C1                  A  2127    	POP	BC
                           A  2128    ;  229		return;
                           A  2129    ;  230	}
                           A  2130    .LINE 230
                           A  2131    
00058E DDF9                A  2132    	LD	SP,IX
000590 DDE1                A  2133    	POP	IX
000592 C9                  A  2134    	RET	
                           A  2135    
                           A  2136    
                           A  2137    ;**************************** _sprite_moveTo **
                           A  2138    ;Name                         Addr/Register   S
                           A  2139    ;_uart_writeWord                     IMPORT  --
                           A  2140    ;_putch                              IMPORT  --
                           A  2141    ;y                                     IX+9    
                           A  2142    ;x                                     IX+6    
                           A  2143    
                           A  2144    
                           A  2145    ; Stack Frame Size: 12 (bytes)
                           A  2146    ;       Spill Code: 0 (instruction)
                           A  2147    
                           A  2148    
                           A  2149    .ENDFUNC "sprite_moveTo",230,"_sprite_moveTo"
                           A  2150    ;  231	
                           A  2151    ;  232	VOID sprite_moveBy(INT16 x, INT16 y)
                           A  2152    ;  233	{
000593                     A  2153    _sprite_moveBy:
                           A  2154    .DEFINE "_sprite_moveBy"
                           A  2155    
                           A  2156    .VALUE _sprite_moveBy
                           A  2157    
                           A  2158    .CLASS 2
                           A  2159    
                           A  2160    .TYPE 65
                           A  2161    
                           A  2162    .ENDEF
                           A  2163    
                           A  2164    .BEGFUNC "sprite_moveBy",233,"_sprite_moveBy"
                           A  2165    
                           A  2166    .LINE 233
                           A  2167    
                           A  2168    .DEFINE "x"
                           A  2169    
                           A  2170    .CLASS 65
                           A  2171    
                           A  2172    .VALUE 6
                           A  2173    
                           A  2174    .TYPE 3
                           A  2175    
                           A  2176    .ENDEF
                           A  2177    
                           A  2178    .DEFINE "y"
                           A  2179    
                           A  2180    .CLASS 65
                           A  2181    
                           A  2182    .VALUE 9
                           A  2183    
                           A  2184    .TYPE 3
                           A  2185    
                           A  2186    .ENDEF
                           A  2187    
000593 DDE5                A  2188    	PUSH	IX
000595 DD210000 00         A  2189    	LD	IX,0
00059A DD39                A  2190    	ADD	IX,SP
                           A  2191    ;  234		putch(23); // vdu_sys
                           A  2192    .LINE 234
                           A  2193    
00059C 01170000            A  2194    	LD	BC,23
0005A0 C5                  A  2195    	PUSH	BC
0005A1 CD 00 00 00         A  2196    	CALL	_putch
0005A5 C1                  A  2197    	POP	BC
                           A  2198    ;  235		putch(27); // sprite command
                           A  2199    .LINE 235
                           A  2200    
0005A6 011B0000            A  2201    	LD	BC,27
0005AA C5                  A  2202    	PUSH	BC
0005AB CD 00 00 00         A  2203    	CALL	_putch
0005AF C1                  A  2204    	POP	BC
                           A  2205    ;  236		putch(14); // move by
                           A  2206    .LINE 236
                           A  2207    
0005B0 010E0000            A  2208    	LD	BC,14
0005B4 C5                  A  2209    	PUSH	BC
0005B5 CD 00 00 00         A  2210    	CALL	_putch
0005B9 C1                  A  2211    	POP	BC
                           A  2212    ;  237		uart_writeWord(x);
                           A  2213    .LINE 237
                           A  2214    
0005BA DD0706              A  2215    	LD	BC,(IX+%6)
0005BD C5                  A  2216    	PUSH	BC
0005BE CD 00 00 00         A  2217    	CALL	_uart_writeWord
0005C2 C1                  A  2218    	POP	BC
                           A  2219    ;  238		uart_writeWord(y);
                           A  2220    .LINE 238
                           A  2221    
0005C3 DD0709              A  2222    	LD	BC,(IX+%9)
0005C6 C5                  A  2223    	PUSH	BC
0005C7 CD 00 00 00         A  2224    	CALL	_uart_writeWord
0005CB C1                  A  2225    	POP	BC
                           A  2226    ;  239		return;
                           A  2227    ;  240	}
                           A  2228    .LINE 240
                           A  2229    
0005CC DDF9                A  2230    	LD	SP,IX
0005CE DDE1                A  2231    	POP	IX
0005D0 C9                  A  2232    	RET	
                           A  2233    
                           A  2234    
                           A  2235    ;**************************** _sprite_moveBy **
                           A  2236    ;Name                         Addr/Register   S
                           A  2237    ;_uart_writeWord                     IMPORT  --
                           A  2238    ;_putch                              IMPORT  --
                           A  2239    ;y                                     IX+9    
                           A  2240    ;x                                     IX+6    
                           A  2241    
                           A  2242    
                           A  2243    ; Stack Frame Size: 12 (bytes)
                           A  2244    ;       Spill Code: 0 (instruction)
                           A  2245    
                           A  2246    
                           A  2247    .ENDFUNC "sprite_moveBy",240,"_sprite_moveBy"
                           A  2248    ;  241	
                           A  2249    ;  242	VOID vdu_gotoxy(UINT16 x, UINT16 y)
                           A  2250    ;  243	{
0005D1                     A  2251    _vdu_gotoxy:
                           A  2252    .DEFINE "_vdu_gotoxy"
                           A  2253    
                           A  2254    .VALUE _vdu_gotoxy
                           A  2255    
                           A  2256    .CLASS 2
                           A  2257    
                           A  2258    .TYPE 65
                           A  2259    
                           A  2260    .ENDEF
                           A  2261    
                           A  2262    .BEGFUNC "vdu_gotoxy",243,"_vdu_gotoxy"
                           A  2263    
                           A  2264    .LINE 243
                           A  2265    
                           A  2266    .DEFINE "x"
                           A  2267    
                           A  2268    .CLASS 65
                           A  2269    
                           A  2270    .VALUE 6
                           A  2271    
                           A  2272    .TYPE 13
                           A  2273    
                           A  2274    .ENDEF
                           A  2275    
                           A  2276    .DEFINE "y"
                           A  2277    
                           A  2278    .CLASS 65
                           A  2279    
                           A  2280    .VALUE 9
                           A  2281    
                           A  2282    .TYPE 13
                           A  2283    
                           A  2284    .ENDEF
                           A  2285    
0005D1 DDE5                A  2286    	PUSH	IX
0005D3 DD210000 00         A  2287    	LD	IX,0
0005D8 DD39                A  2288    	ADD	IX,SP
                           A  2289    ;  244		putch(25);
                           A  2290    .LINE 244
                           A  2291    
0005DA 01190000            A  2292    	LD	BC,25
0005DE C5                  A  2293    	PUSH	BC
0005DF CD 00 00 00         A  2294    	CALL	_putch
0005E3 C1                  A  2295    	POP	BC
                           A  2296    ;  245		putch(4);
                           A  2297    .LINE 245
                           A  2298    
0005E4 01040000            A  2299    	LD	BC,4
0005E8 C5                  A  2300    	PUSH	BC
0005E9 CD 00 00 00         A  2301    	CALL	_putch
0005ED C1                  A  2302    	POP	BC
                           A  2303    ;  246		uart_writeWord(x);
                           A  2304    .LINE 246
                           A  2305    
0005EE DD0706              A  2306    	LD	BC,(IX+%6)
0005F1 C5                  A  2307    	PUSH	BC
0005F2 CD 00 00 00         A  2308    	CALL	_uart_writeWord
0005F6 C1                  A  2309    	POP	BC
                           A  2310    ;  247		uart_writeWord(y);
                           A  2311    .LINE 247
                           A  2312    
0005F7 DD0709              A  2313    	LD	BC,(IX+%9)
0005FA C5                  A  2314    	PUSH	BC
0005FB CD 00 00 00         A  2315    	CALL	_uart_writeWord
0005FF C1                  A  2316    	POP	BC
                           A  2317    ;  248		return;
                           A  2318    ;  249	}
                           A  2319    .LINE 249
                           A  2320    
000600 DDF9                A  2321    	LD	SP,IX
000602 DDE1                A  2322    	POP	IX
000604 C9                  A  2323    	RET	
                           A  2324    
                           A  2325    
                           A  2326    ;**************************** _vdu_gotoxy *****
                           A  2327    ;Name                         Addr/Register   S
                           A  2328    ;_uart_writeWord                     IMPORT  --
                           A  2329    ;_putch                              IMPORT  --
                           A  2330    ;y                                     IX+9    
                           A  2331    ;x                                     IX+6    
                           A  2332    
                           A  2333    
                           A  2334    ; Stack Frame Size: 12 (bytes)
                           A  2335    ;       Spill Code: 0 (instruction)
                           A  2336    
                           A  2337    
                           A  2338    .ENDFUNC "vdu_gotoxy",249,"_vdu_gotoxy"
                           A  2339    ;  250	
                           A  2340    ;  251	VOID vdu_lineto(UINT16 x, UINT16 y)
                           A  2341    ;  252	{
000605                     A  2342    _vdu_lineto:
                           A  2343    .DEFINE "_vdu_lineto"
                           A  2344    
                           A  2345    .VALUE _vdu_lineto
                           A  2346    
                           A  2347    .CLASS 2
                           A  2348    
                           A  2349    .TYPE 65
                           A  2350    
                           A  2351    .ENDEF
                           A  2352    
                           A  2353    .BEGFUNC "vdu_lineto",252,"_vdu_lineto"
                           A  2354    
                           A  2355    .LINE 252
                           A  2356    
                           A  2357    .DEFINE "x"
                           A  2358    
                           A  2359    .CLASS 65
                           A  2360    
                           A  2361    .VALUE 6
                           A  2362    
                           A  2363    .TYPE 13
                           A  2364    
                           A  2365    .ENDEF
                           A  2366    
                           A  2367    .DEFINE "y"
                           A  2368    
                           A  2369    .CLASS 65
                           A  2370    
                           A  2371    .VALUE 9
                           A  2372    
                           A  2373    .TYPE 13
                           A  2374    
                           A  2375    .ENDEF
                           A  2376    
000605 DDE5                A  2377    	PUSH	IX
000607 DD210000 00         A  2378    	LD	IX,0
00060C DD39                A  2379    	ADD	IX,SP
                           A  2380    ;  253		putch(25);
                           A  2381    .LINE 253
                           A  2382    
00060E 01190000            A  2383    	LD	BC,25
000612 C5                  A  2384    	PUSH	BC
000613 CD 00 00 00         A  2385    	CALL	_putch
000617 C1                  A  2386    	POP	BC
                           A  2387    ;  254		putch(5);
                           A  2388    .LINE 254
                           A  2389    
000618 01050000            A  2390    	LD	BC,5
00061C C5                  A  2391    	PUSH	BC
00061D CD 00 00 00         A  2392    	CALL	_putch
000621 C1                  A  2393    	POP	BC
                           A  2394    ;  255		uart_writeWord(x);
                           A  2395    .LINE 255
                           A  2396    
000622 DD0706              A  2397    	LD	BC,(IX+%6)
000625 C5                  A  2398    	PUSH	BC
000626 CD 00 00 00         A  2399    	CALL	_uart_writeWord
00062A C1                  A  2400    	POP	BC
                           A  2401    ;  256		uart_writeWord(y);
                           A  2402    .LINE 256
                           A  2403    
00062B DD0709              A  2404    	LD	BC,(IX+%9)
00062E C5                  A  2405    	PUSH	BC
00062F CD 00 00 00         A  2406    	CALL	_uart_writeWord
000633 C1                  A  2407    	POP	BC
                           A  2408    ;  257		return;
                           A  2409    ;  258	}
                           A  2410    .LINE 258
                           A  2411    
000634 DDF9                A  2412    	LD	SP,IX
000636 DDE1                A  2413    	POP	IX
000638 C9                  A  2414    	RET	
                           A  2415    
                           A  2416    
                           A  2417    ;**************************** _vdu_lineto *****
                           A  2418    ;Name                         Addr/Register   S
                           A  2419    ;_uart_writeWord                     IMPORT  --
                           A  2420    ;_putch                              IMPORT  --
                           A  2421    ;y                                     IX+9    
                           A  2422    ;x                                     IX+6    
                           A  2423    
                           A  2424    
                           A  2425    ; Stack Frame Size: 12 (bytes)
                           A  2426    ;       Spill Code: 0 (instruction)
                           A  2427    
                           A  2428    
                           A  2429    .ENDFUNC "vdu_lineto",258,"_vdu_lineto"
                           A  2430    ;  259	
                           A  2431    ;  260	VOID vdu_plotPoint(UINT16 x, UINT16 y)
                           A  2432    ;  261	{
000639                     A  2433    _vdu_plotPoint:
                           A  2434    .DEFINE "_vdu_plotPoint"
                           A  2435    
                           A  2436    .VALUE _vdu_plotPoint
                           A  2437    
                           A  2438    .CLASS 2
                           A  2439    
                           A  2440    .TYPE 65
                           A  2441    
                           A  2442    .ENDEF
                           A  2443    
                           A  2444    .BEGFUNC "vdu_plotPoint",261,"_vdu_plotPoint"
                           A  2445    
                           A  2446    .LINE 261
                           A  2447    
                           A  2448    .DEFINE "x"
                           A  2449    
                           A  2450    .CLASS 65
                           A  2451    
                           A  2452    .VALUE 6
                           A  2453    
                           A  2454    .TYPE 13
                           A  2455    
                           A  2456    .ENDEF
                           A  2457    
                           A  2458    .DEFINE "y"
                           A  2459    
                           A  2460    .CLASS 65
                           A  2461    
                           A  2462    .VALUE 9
                           A  2463    
                           A  2464    .TYPE 13
                           A  2465    
                           A  2466    .ENDEF
                           A  2467    
000639 DDE5                A  2468    	PUSH	IX
00063B DD210000 00         A  2469    	LD	IX,0
000640 DD39                A  2470    	ADD	IX,SP
                           A  2471    ;  262		putch(25);
                           A  2472    .LINE 262
                           A  2473    
000642 01190000            A  2474    	LD	BC,25
000646 C5                  A  2475    	PUSH	BC
000647 CD 00 00 00         A  2476    	CALL	_putch
00064B C1                  A  2477    	POP	BC
                           A  2478    ;  263		putch(0x40);
                           A  2479    .LINE 263
                           A  2480    
00064C 01400000            A  2481    	LD	BC,64
000650 C5                  A  2482    	PUSH	BC
000651 CD 00 00 00         A  2483    	CALL	_putch
000655 C1                  A  2484    	POP	BC
                           A  2485    ;  264		uart_writeWord(x);
                           A  2486    .LINE 264
                           A  2487    
000656 DD0706              A  2488    	LD	BC,(IX+%6)
000659 C5                  A  2489    	PUSH	BC
00065A CD 00 00 00         A  2490    	CALL	_uart_writeWord
00065E C1                  A  2491    	POP	BC
                           A  2492    ;  265		uart_writeWord(y);
                           A  2493    .LINE 265
                           A  2494    
00065F DD0709              A  2495    	LD	BC,(IX+%9)
000662 C5                  A  2496    	PUSH	BC
000663 CD 00 00 00         A  2497    	CALL	_uart_writeWord
000667 C1                  A  2498    	POP	BC
                           A  2499    ;  266		return;	
                           A  2500    ;  267	}
                           A  2501    .LINE 267
                           A  2502    
000668 DDF9                A  2503    	LD	SP,IX
00066A DDE1                A  2504    	POP	IX
00066C C9                  A  2505    	RET	
                           A  2506    
                           A  2507    
                           A  2508    ;**************************** _vdu_plotPoint **
                           A  2509    ;Name                         Addr/Register   S
                           A  2510    ;_uart_writeWord                     IMPORT  --
                           A  2511    ;_putch                              IMPORT  --
                           A  2512    ;y                                     IX+9    
                           A  2513    ;x                                     IX+6    
                           A  2514    
                           A  2515    
                           A  2516    ; Stack Frame Size: 12 (bytes)
                           A  2517    ;       Spill Code: 0 (instruction)
                           A  2518    
                           A  2519    
                           A  2520    .ENDFUNC "vdu_plotPoint",267,"_vdu_plotPoint"
                           A  2521    ;  268	
                           A  2522    ;  269	VOID vdu_cls(VOID)
                           A  2523    ;  270	{
00066D                     A  2524    _vdu_cls:
                           A  2525    .DEFINE "_vdu_cls"
                           A  2526    
                           A  2527    .VALUE _vdu_cls
                           A  2528    
                           A  2529    .CLASS 2
                           A  2530    
                           A  2531    .TYPE 65
                           A  2532    
                           A  2533    .ENDEF
                           A  2534    
                           A  2535    .BEGFUNC "vdu_cls",270,"_vdu_cls"
                           A  2536    
00066D DDE5                A  2537    	PUSH	IX
00066F DD210000 00         A  2538    	LD	IX,0
000674 DD39                A  2539    	ADD	IX,SP
                           A  2540    ;  271		putch(0x0C);
                           A  2541    .LINE 271
                           A  2542    
000676 010C0000            A  2543    	LD	BC,12
00067A C5                  A  2544    	PUSH	BC
00067B CD 00 00 00         A  2545    	CALL	_putch
00067F C1                  A  2546    	POP	BC
                           A  2547    ;  272		return;
                           A  2548    ;  273	}
                           A  2549    .LINE 273
                           A  2550    
000680 DDF9                A  2551    	LD	SP,IX
000682 DDE1                A  2552    	POP	IX
000684 C9                  A  2553    	RET	
                           A  2554    
                           A  2555    
                           A  2556    ;**************************** _vdu_cls ********
                           A  2557    ;Name                         Addr/Register   S
                           A  2558    ;_putch                              IMPORT  --
                           A  2559    
                           A  2560    
                           A  2561    ; Stack Frame Size: 6 (bytes)
                           A  2562    ;       Spill Code: 0 (instruction)
                           A  2563    
                           A  2564    
                           A  2565    .ENDFUNC "vdu_cls",273,"_vdu_cls"
                           A  2566    ;  274	
                           A  2567    ;  275	VOID vdu_gcol(UINT8 mode, UINT8 r, UINT
                           A  2568    ;  276	{
000685                     A  2569    _vdu_gcol:
                           A  2570    .DEFINE "_vdu_gcol"
                           A  2571    
                           A  2572    .VALUE _vdu_gcol
                           A  2573    
                           A  2574    .CLASS 2
                           A  2575    
                           A  2576    .TYPE 65
                           A  2577    
                           A  2578    .ENDEF
                           A  2579    
                           A  2580    .BEGFUNC "vdu_gcol",276,"_vdu_gcol"
                           A  2581    
                           A  2582    .LINE 276
                           A  2583    
                           A  2584    .DEFINE "mode"
                           A  2585    
                           A  2586    .CLASS 65
                           A  2587    
                           A  2588    .VALUE 6
                           A  2589    
                           A  2590    .TYPE 12
                           A  2591    
                           A  2592    .ENDEF
                           A  2593    
                           A  2594    .DEFINE "r"
                           A  2595    
                           A  2596    .CLASS 65
                           A  2597    
                           A  2598    .VALUE 9
                           A  2599    
                           A  2600    .TYPE 12
                           A  2601    
                           A  2602    .ENDEF
                           A  2603    
                           A  2604    .DEFINE "g"
                           A  2605    
                           A  2606    .CLASS 65
                           A  2607    
                           A  2608    .VALUE 12
                           A  2609    
                           A  2610    .TYPE 12
                           A  2611    
                           A  2612    .ENDEF
                           A  2613    
                           A  2614    .DEFINE "b"
                           A  2615    
                           A  2616    .CLASS 65
                           A  2617    
                           A  2618    .VALUE 15
                           A  2619    
                           A  2620    .TYPE 12
                           A  2621    
                           A  2622    .ENDEF
                           A  2623    
000685 DDE5                A  2624    	PUSH	IX
000687 DD210000 00         A  2625    	LD	IX,0
00068C DD39                A  2626    	ADD	IX,SP
                           A  2627    ;  277		// ignore mode for now
                           A  2628    ;  278		putch(0x12);
                           A  2629    .LINE 278
                           A  2630    
00068E 01120000            A  2631    	LD	BC,18
000692 C5                  A  2632    	PUSH	BC
000693 CD 00 00 00         A  2633    	CALL	_putch
000697 C1                  A  2634    	POP	BC
                           A  2635    ;  279		putch(mode);
                           A  2636    .LINE 279
                           A  2637    
000698 DD7E06              A  2638    	LD	A,(IX+%6)
00069B B7ED62              A  2639    	UEXT	HL
00069E 6F                  A  2640    	LD	L,A
00069F E5                  A  2641    	PUSH	HL
0006A0 CD 00 00 00         A  2642    	CALL	_putch
0006A4 C1                  A  2643    	POP	BC
                           A  2644    ;  280		putch(r);
                           A  2645    .LINE 280
                           A  2646    
0006A5 DD7E09              A  2647    	LD	A,(IX+%9)
0006A8 B7ED62              A  2648    	UEXT	HL
0006AB 6F                  A  2649    	LD	L,A
0006AC E5                  A  2650    	PUSH	HL
0006AD CD 00 00 00         A  2651    	CALL	_putch
0006B1 C1                  A  2652    	POP	BC
                           A  2653    ;  281		putch(g);
                           A  2654    .LINE 281
                           A  2655    
0006B2 DD7E0C              A  2656    	LD	A,(IX+%C)
0006B5 B7ED62              A  2657    	UEXT	HL
0006B8 6F                  A  2658    	LD	L,A
0006B9 E5                  A  2659    	PUSH	HL
0006BA CD 00 00 00         A  2660    	CALL	_putch
0006BE C1                  A  2661    	POP	BC
                           A  2662    ;  282		putch(b);
                           A  2663    .LINE 282
                           A  2664    
0006BF DD7E0F              A  2665    	LD	A,(IX+%F)
0006C2 B7ED62              A  2666    	UEXT	HL
0006C5 6F                  A  2667    	LD	L,A
0006C6 E5                  A  2668    	PUSH	HL
0006C7 CD 00 00 00         A  2669    	CALL	_putch
0006CB C1                  A  2670    	POP	BC
                           A  2671    ;  283		return;
                           A  2672    ;  284	}
                           A  2673    .LINE 284
                           A  2674    
0006CC DDF9                A  2675    	LD	SP,IX
0006CE DDE1                A  2676    	POP	IX
0006D0 C9                  A  2677    	RET	
                           A  2678    
                           A  2679    
                           A  2680    ;**************************** _vdu_gcol *******
                           A  2681    ;Name                         Addr/Register   S
                           A  2682    ;_putch                              IMPORT  --
                           A  2683    ;b                                    IX+15    
                           A  2684    ;g                                    IX+12    
                           A  2685    ;r                                     IX+9    
                           A  2686    ;mode                                  IX+6    
                           A  2687    
                           A  2688    
                           A  2689    ; Stack Frame Size: 18 (bytes)
                           A  2690    ;       Spill Code: 0 (instruction)
                           A  2691    
                           A  2692    
                           A  2693    .ENDFUNC "vdu_gcol",284,"_vdu_gcol"
                           A  2694    ;  285	
                           A  2695    ;  286	VOID vdu_box(UINT16 topleftx, UINT16 to
                           A  2696    ;  287	{
0006D1                     A  2697    _vdu_box:
                           A  2698    .DEFINE "_vdu_box"
                           A  2699    
                           A  2700    .VALUE _vdu_box
                           A  2701    
                           A  2702    .CLASS 2
                           A  2703    
                           A  2704    .TYPE 65
                           A  2705    
                           A  2706    .ENDEF
                           A  2707    
                           A  2708    .BEGFUNC "vdu_box",287,"_vdu_box"
                           A  2709    
                           A  2710    .LINE 287
                           A  2711    
                           A  2712    .DEFINE "topleftx"
                           A  2713    
                           A  2714    .CLASS 65
                           A  2715    
                           A  2716    .VALUE 6
                           A  2717    
                           A  2718    .TYPE 13
                           A  2719    
                           A  2720    .ENDEF
                           A  2721    
                           A  2722    .DEFINE "toplefty"
                           A  2723    
                           A  2724    .CLASS 65
                           A  2725    
                           A  2726    .VALUE 9
                           A  2727    
                           A  2728    .TYPE 13
                           A  2729    
                           A  2730    .ENDEF
                           A  2731    
                           A  2732    .DEFINE "bottomrightx"
                           A  2733    
                           A  2734    .CLASS 65
                           A  2735    
                           A  2736    .VALUE 12
                           A  2737    
                           A  2738    .TYPE 13
                           A  2739    
                           A  2740    .ENDEF
                           A  2741    
                           A  2742    .DEFINE "bottomrighty"
                           A  2743    
                           A  2744    .CLASS 65
                           A  2745    
                           A  2746    .VALUE 15
                           A  2747    
                           A  2748    .TYPE 13
                           A  2749    
                           A  2750    .ENDEF
                           A  2751    
0006D1 DDE5                A  2752    	PUSH	IX
0006D3 DD210000 00         A  2753    	LD	IX,0
0006D8 DD39                A  2754    	ADD	IX,SP
                           A  2755    ;  288		vdu_gotoxy(topleftx, toplefty);
                           A  2756    .LINE 288
                           A  2757    
0006DA DD0709              A  2758    	LD	BC,(IX+%9)
0006DD C5                  A  2759    	PUSH	BC
0006DE DD0706              A  2760    	LD	BC,(IX+%6)
0006E1 C5                  A  2761    	PUSH	BC
0006E2 CD D1 05 00         A  2762    	CALL	_vdu_gotoxy
0006E6 C1                  A  2763    	POP	BC
0006E7 C1                  A  2764    	POP	BC
                           A  2765    ;  289		vdu_lineto(bottomrightx, toplefty);
                           A  2766    .LINE 289
                           A  2767    
0006E8 DD0709              A  2768    	LD	BC,(IX+%9)
0006EB C5                  A  2769    	PUSH	BC
0006EC DD070C              A  2770    	LD	BC,(IX+%C)
0006EF C5                  A  2771    	PUSH	BC
0006F0 CD 05 06 00         A  2772    	CALL	_vdu_lineto
0006F4 C1                  A  2773    	POP	BC
0006F5 C1                  A  2774    	POP	BC
                           A  2775    ;  290		vdu_lineto(bottomrightx, bottomrigh
                           A  2776    .LINE 290
                           A  2777    
0006F6 DD070F              A  2778    	LD	BC,(IX+%F)
0006F9 C5                  A  2779    	PUSH	BC
0006FA DD070C              A  2780    	LD	BC,(IX+%C)
0006FD C5                  A  2781    	PUSH	BC
0006FE CD 05 06 00         A  2782    	CALL	_vdu_lineto
000702 C1                  A  2783    	POP	BC
000703 C1                  A  2784    	POP	BC
                           A  2785    ;  291		vdu_lineto(topleftx, bottomrighty);
                           A  2786    .LINE 291
                           A  2787    
000704 DD070F              A  2788    	LD	BC,(IX+%F)
000707 C5                  A  2789    	PUSH	BC
000708 DD0706              A  2790    	LD	BC,(IX+%6)
00070B C5                  A  2791    	PUSH	BC
00070C CD 05 06 00         A  2792    	CALL	_vdu_lineto
000710 C1                  A  2793    	POP	BC
000711 C1                  A  2794    	POP	BC
                           A  2795    ;  292		vdu_lineto(topleftx, toplefty);
                           A  2796    .LINE 292
                           A  2797    
000712 DD0709              A  2798    	LD	BC,(IX+%9)
000715 C5                  A  2799    	PUSH	BC
000716 DD0706              A  2800    	LD	BC,(IX+%6)
000719 C5                  A  2801    	PUSH	BC
00071A CD 05 06 00         A  2802    	CALL	_vdu_lineto
00071E C1                  A  2803    	POP	BC
00071F C1                  A  2804    	POP	BC
                           A  2805    ;  293		return;
                           A  2806    ;  294	}
                           A  2807    .LINE 294
                           A  2808    
000720 DDF9                A  2809    	LD	SP,IX
000722 DDE1                A  2810    	POP	IX
000724 C9                  A  2811    	RET	
                           A  2812    
                           A  2813    
                           A  2814    ;**************************** _vdu_box ********
                           A  2815    ;Name                         Addr/Register   S
                           A  2816    ;_vdu_lineto                         IMPORT  --
                           A  2817    ;_vdu_gotoxy                         IMPORT  --
                           A  2818    ;bottomrighty                         IX+15    
                           A  2819    ;bottomrightx                         IX+12    
                           A  2820    ;toplefty                              IX+9    
                           A  2821    ;topleftx                              IX+6    
                           A  2822    
                           A  2823    
                           A  2824    ; Stack Frame Size: 18 (bytes)
                           A  2825    ;       Spill Code: 0 (instruction)
                           A  2826    
                           A  2827    
                           A  2828    .ENDFUNC "vdu_box",294,"_vdu_box"
                           A  2829    ;  295	
                           A  2830    ;  296	VOID vdu_setmode(UINT8 mode)
                           A  2831    ;  297	{
000725                     A  2832    _vdu_setmode:
                           A  2833    .DEFINE "_vdu_setmode"
                           A  2834    
                           A  2835    .VALUE _vdu_setmode
                           A  2836    
                           A  2837    .CLASS 2
                           A  2838    
                           A  2839    .TYPE 65
                           A  2840    
                           A  2841    .ENDEF
                           A  2842    
                           A  2843    .BEGFUNC "vdu_setmode",297,"_vdu_setmode"
                           A  2844    
                           A  2845    .LINE 297
                           A  2846    
                           A  2847    .DEFINE "mode"
                           A  2848    
                           A  2849    .CLASS 65
                           A  2850    
                           A  2851    .VALUE 6
                           A  2852    
                           A  2853    .TYPE 12
                           A  2854    
                           A  2855    .ENDEF
                           A  2856    
000725 DDE5                A  2857    	PUSH	IX
000727 DD210000 00         A  2858    	LD	IX,0
00072C DD39                A  2859    	ADD	IX,SP
                           A  2860    ;  298		putch(0x16); // set mode
                           A  2861    .LINE 298
                           A  2862    
00072E 01160000            A  2863    	LD	BC,22
000732 C5                  A  2864    	PUSH	BC
000733 CD 00 00 00         A  2865    	CALL	_putch
000737 C1                  A  2866    	POP	BC
                           A  2867    ;  299		putch(mode);
                           A  2868    .LINE 299
                           A  2869    
000738 DD7E06              A  2870    	LD	A,(IX+%6)
00073B B7ED62              A  2871    	UEXT	HL
00073E 6F                  A  2872    	LD	L,A
00073F E5                  A  2873    	PUSH	HL
000740 CD 00 00 00         A  2874    	CALL	_putch
000744 C1                  A  2875    	POP	BC
                           A  2876    ;  300		return;
                           A  2877    ;  301	}
                           A  2878    .LINE 301
                           A  2879    
000745 DDF9                A  2880    	LD	SP,IX
000747 DDE1                A  2881    	POP	IX
000749 C9                  A  2882    	RET	
                           A  2883    
                           A  2884    
                           A  2885    ;**************************** _vdu_setmode ****
                           A  2886    ;Name                         Addr/Register   S
                           A  2887    ;_putch                              IMPORT  --
                           A  2888    ;mode                                  IX+6    
                           A  2889    
                           A  2890    
                           A  2891    ; Stack Frame Size: 9 (bytes)
                           A  2892    ;       Spill Code: 0 (instruction)
                           A  2893    
                           A  2894    
                           A  2895    .ENDFUNC "vdu_setmode",301,"_vdu_setmode"
                           A  2896    	XREF _delayms:ROM
                           A  2897    	XREF _getch:ROM
                           A  2898    	XREF _putch:ROM
                           A  2899    	XREF __imuls:ROM
                           A  2900    	XREF __sor:ROM
                           A  2901    	XREF __lor:ROM
                           A  2902    	XREF __stoi:ROM
                           A  2903    	XREF __stoiu:ROM
                           A  2904    	XDEF _vdu_setmode
                           A  2905    	XDEF _vdu_box
                           A  2906    	XDEF _vdu_gcol
                           A  2907    	XDEF _vdu_cls
                           A  2908    	XDEF _vdu_plotPoint
                           A  2909    	XDEF _vdu_lineto
                           A  2910    	XDEF _vdu_gotoxy
                           A  2911    	XDEF _sprite_moveBy
                           A  2912    	XDEF _sprite_moveTo
                           A  2913    	XDEF _sprite_hide
                           A  2914    	XDEF _sprite_show
                           A  2915    	XDEF _sprite_setFrame
                           A  2916    	XDEF _sprite_previousFrame
                           A  2917    	XDEF _sprite_nextFrame
                           A  2918    	XDEF _sprite_activateTotal
                           A  2919    	XDEF _sprite_addFrame
                           A  2920    	XDEF _sprite_addFrame_selected
                           A  2921    	XDEF _sprite_clearFrames
                           A  2922    	XDEF _sprite_clearFrames_selected
                           A  2923    	XDEF _sprite_select
                           A  2924    	XDEF _bitmap_createSolidColor
                           A  2925    	XDEF _bitmap_createSolidColor_selected
                           A  2926    	XDEF _bitmap_draw
                           A  2927    	XDEF _bitmap_draw_selected
                           A  2928    	XDEF _bitmap_sendData
                           A  2929    	XDEF _bitmap_sendData_selected
                           A  2930    	XDEF _bitmap_select
                           A  2931    	XDEF _uart_readLong
                           A  2932    	XDEF _uart_readWord
                           A  2933    	XDEF _uart_writeLong
                           A  2934    	XDEF _uart_writeWord
                           A  2935    	END


Errors: 0
Warnings: 0
Lines Assembled: 2936
