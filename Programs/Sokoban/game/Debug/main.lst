Zilog eZ80 Macro Assembler Version 4.3 (19073001) RELISTED10-Dec-22     17:34:41     page:   1


PC     Object              I  Line    Source 
                           A     1    ; Zilog eZ80 ANSI C Compiler Release 3.4
                           A     2    ; -nomodsect -optsize -noreduceopt -nopadbranch
                           A     3    ; -peephole -globalopt -localcse -const=ROM 
                           A     4    	FILE	"..\main.c"
                           A     5    	.assume ADL=1
                           A     6    .DEBUG "C"
                           A     7    	SEGMENT CODE
                           A     8    .BEGREC "fmt_type",19
                           A     9    .DEFINE "status"
                           A    10    .VALUE 0
                           A    11    .CLASS 8
                           A    12    .TYPE 12
                           A    13    .ENDEF
                           A    14    .DEFINE "flags"
                           A    15    .VALUE 1
                           A    16    .CLASS 8
                           A    17    .TYPE 12
                           A    18    .ENDEF
                           A    19    .DEFINE "size"
                           A    20    .VALUE 2
                           A    21    .CLASS 8
                           A    22    .TYPE 2
                           A    23    .ENDEF
                           A    24    .DEFINE "chr"
                           A    25    .VALUE 3
                           A    26    .CLASS 8
                           A    27    .TYPE 2
                           A    28    .ENDEF
                           A    29    .DEFINE "type"
                           A    30    .VALUE 4
                           A    31    .CLASS 8
                           A    32    .TYPE 2
                           A    33    .ENDEF
                           A    34    .DEFINE "field_width"
                           A    35    .VALUE 5
                           A    36    .CLASS 8
                           A    37    .TYPE 2
                           A    38    .ENDEF
                           A    39    .DEFINE "precision"
                           A    40    .VALUE 6
                           A    41    .CLASS 8
                           A    42    .TYPE 2
                           A    43    .ENDEF
                           A    44    .DEFINE "set_begin"
                           A    45    .VALUE 7
                           A    46    .CLASS 8
                           A    47    .TYPE 34
                           A    48    .ENDEF
                           A    49    .DEFINE "set_end"
                           A    50    .VALUE 10
                           A    51    .CLASS 8
                           A    52    .TYPE 34
                           A    53    .ENDEF
                           A    54    .DEFINE "pad_whole"
                           A    55    .VALUE 13
                           A    56    .CLASS 8
                           A    57    .TYPE 12
                           A    58    .ENDEF
                           A    59    .DEFINE "pad_pre_fract"
                           A    60    .VALUE 14
                           A    61    .CLASS 8
                           A    62    .TYPE 12
                           A    63    .ENDEF
                           A    64    .DEFINE "pad_post_fract"
                           A    65    .VALUE 15
                           A    66    .CLASS 8
                           A    67    .TYPE 12
                           A    68    .ENDEF
                           A    69    .DEFINE "pad_at"
                           A    70    .VALUE 16
                           A    71    .CLASS 8
                           A    72    .TYPE 34
                           A    73    .ENDEF
                           A    74    .ENDREC "fmt_type"
                           A    75    .BEGREC "flt_info",12
                           A    76    .DEFINE "flags"
                           A    77    .VALUE 0
                           A    78    .CLASS 8
                           A    79    .TYPE 12
                           A    80    .ENDEF
                           A    81    .DEFINE "exp"
                           A    82    .VALUE 1
                           A    83    .CLASS 8
                           A    84    .TYPE 2
                           A    85    .ENDEF
                           A    86    .DEFINE "digits"
                           A    87    .VALUE 2
                           A    88    .CLASS 8
                           A    89    .DIM 10
                           A    90    .TYPE 108
                           A    91    .ENDEF
                           A    92    .ENDREC "flt_info"
                           A    93    .BEGREC "sokobanlevel",1207
                           A    94    .DEFINE "xpos"
                           A    95    .VALUE 0
                           A    96    .CLASS 8
                           A    97    .TYPE 12
                           A    98    .ENDEF
                           A    99    .DEFINE "ypos"
                           A   100    .VALUE 1
                           A   101    .CLASS 8
                           A   102    .TYPE 12
                           A   103    .ENDEF
                           A   104    .DEFINE "width"
                           A   105    .VALUE 2
                           A   106    .CLASS 8
                           A   107    .TYPE 12
                           A   108    .ENDEF
                           A   109    .DEFINE "height"
                           A   110    .VALUE 3
                           A   111    .CLASS 8
                           A   112    .TYPE 12
                           A   113    .ENDEF
                           A   114    .DEFINE "goals"
                           A   115    .VALUE 4
                           A   116    .CLASS 8
                           A   117    .TYPE 12
                           A   118    .ENDEF
                           A   119    .DEFINE "goalstaken"
                           A   120    .VALUE 5
                           A   121    .CLASS 8
                           A   122    .TYPE 12
                           A   123    .ENDEF
                           A   124    .DEFINE "crates"
                           A   125    .VALUE 6
                           A   126    .CLASS 8
                           A   127    .TYPE 12
                           A   128    .ENDEF
                           A   129    .DEFINE "data"
                           A   130    .VALUE 7
                           A   131    .CLASS 8
                           A   132    .DIM 30
                           A   133    .DIM 40
                           A   134    .TYPE 876
                           A   135    .ENDEF
                           A   136    .ENDREC "sokobanlevel"
                           A   137    .BEGREC "NONAME0",2
                           A   138    .DEFINE "ch"
                           A   139    .VALUE 0
                           A   140    .CLASS 8
                           A   141    .TYPE 2
                           A   142    .ENDEF
                           A   143    .DEFINE "tile_id"
                           A   144    .VALUE 1
                           A   145    .CLASS 8
                           A   146    .TYPE 12
                           A   147    .ENDEF
                           A   148    .ENDREC "NONAME0"
                           A   149    ;    1	#include <stdio.h>
                           A   150    ;    2	#include <ctype.h>
                           A   151    ;    3	#include "mos-interface.h"
                           A   152    ;    4	#include "vdp.h"
                           A   153    ;    5	#include "game.h"
                           A   154    ;    6	
                           A   155    ;    7	#define FILE_LEVELS	"levels.bin"
                           A   156    ;    8	
                           A   157    ;    9	int main(int argc, char * argv[]) {
0400D7                     A   158    _main:
                           A   159    .DEFINE "_main"
                           A   160    
                           A   161    .VALUE _main
                           A   162    
                           A   163    .CLASS 2
                           A   164    
                           A   165    .TYPE 68
                           A   166    
                           A   167    .ENDEF
                           A   168    
                           A   169    .BEGFUNC "main",9,"_main"
                           A   170    
                           A   171    .LINE 9
                           A   172    
                           A   173    .DEFINE "argc"
                           A   174    
                           A   175    .CLASS 65
                           A   176    
                           A   177    .VALUE 6
                           A   178    
                           A   179    .TYPE 4
                           A   180    
                           A   181    .ENDEF
                           A   182    
                           A   183    .DEFINE "argv"
                           A   184    
                           A   185    .CLASS 65
                           A   186    
                           A   187    .VALUE 9
                           A   188    
                           A   189    .TYPE 290
                           A   190    
                           A   191    .ENDEF
                           A   192    
                           A   193    .DEFINE "ingame"
                           A   194    
                           A   195    .CLASS 65
                           A   196    
                           A   197    .VALUE -1
                           A   198    
                           A   199    .TYPE 12
                           A   200    
                           A   201    .ENDEF
                           A   202    
                           A   203    .DEFINE "key"
                           A   204    
                           A   205    .CLASS 65
                           A   206    
                           A   207    .VALUE -2
                           A   208    
                           A   209    .TYPE 2
                           A   210    
                           A   211    .ENDEF
                           A   212    
                           A   213    .DEFINE "levels"
                           A   214    
                           A   215    .CLASS 65
                           A   216    
                           A   217    .VALUE -3
                           A   218    
                           A   219    .TYPE 12
                           A   220    
                           A   221    .ENDEF
                           A   222    
                           A   223    .DEFINE "doneplaying"
                           A   224    
                           A   225    .CLASS 65
                           A   226    
                           A   227    .VALUE -4
                           A   228    
                           A   229    .TYPE 12
                           A   230    
                           A   231    .ENDEF
                           A   232    
                           A   233    .DEFINE "levelnumber"
                           A   234    
                           A   235    .CLASS 65
                           A   236    
                           A   237    .VALUE -6
                           A   238    
                           A   239    .TYPE 3
                           A   240    
                           A   241    .ENDEF
                           A   242    
0400D7 DDE5                A   243    	PUSH	IX
0400D9 DD210000 00         A   244    	LD	IX,0
0400DE DD39                A   245    	ADD	IX,SP
0400E0 C5                  A   246    	PUSH	BC
0400E1 C5                  A   247    	PUSH	BC
0400E2 C5                  A   248    	PUSH	BC
                           A   249    ;   10		UINT8 levels;
                           A   250    ;   11		INT16 levelnumber;
                           A   251    ;   12		BOOL doneplaying = FALSE;
                           A   252    .LINE 12
                           A   253    
0400E3 DD36FC00            A   254    	LD	(IX+%FFFFFFFC),%0
                           A   255    ;   13		BOOL quit;
                           A   256    ;   14		BOOL ingame;
                           A   257    ;   15		char key;
                           A   258    ;   16		
                           A   259    ;   17		printf("Reading levels.bin\r\n");
                           A   260    .LINE 17
                           A   261    
0400E7 01 2F 1D 04         A   262    	LD	BC,___print_uputch
0400EB ED43 9F 33 04       A   263    	LD	(___print_xputch),BC
0400F0 01 A2 33 04         A   264    	LD	BC,L__0
0400F4 C5                  A   265    	PUSH	BC
0400F5 CD AF 1B 04         A   266    	CALL	___print_sendstring
0400F9 C1                  A   267    	POP	BC
                           A   268    ;   18		levels = game_readLevels(FILE_LEVEL
                           A   269    .LINE 18
                           A   270    
0400FA 01 B7 33 04         A   271    	LD	BC,L__1
0400FE C5                  A   272    	PUSH	BC
0400FF CD BB 18 04         A   273    	CALL	_game_readLevels
040103 C1                  A   274    	POP	BC
040104 DD77FD              A   275    	LD	(IX+%FFFFFFFD),A
                           A   276    ;   19		if(levels)
                           A   277    .LINE 19
                           A   278    
040107 B7                  A   279    	OR	A,A
040108 CA 04 02 04         A   280    	JR	Z,L_18
                           A   281    ;   20		{
                           A   282    ;   21			vdp_mode(0);	// 640x480 pixe
                           A   283    .LINE 21
                           A   284    
04010C 01000000            A   285    	LD	BC,0
040110 C5                  A   286    	PUSH	BC
040111 CD CD 02 04         A   287    	CALL	_vdp_mode
040115 C1                  A   288    	POP	BC
                           A   289    ;   22			vdp_cursorDisable();
                           A   290    .LINE 22
                           A   291    
040116 CD 8A 0C 04         A   292    	CALL	_vdp_cursorDisable
                           A   293    ;   23			
                           A   294    ;   24			game_sendSpriteData();
                           A   295    .LINE 24
                           A   296    
04011A CD 2B 0D 04         A   297    	CALL	_game_sendSpriteData
                           A   298    ;   25			
                           A   299    ;   26			while(!doneplaying)
                           A   300    .LINE 26
                           A   301    
04011E C3 EC 01 04         A   302    	JR	L_14
040122                     A   303    L_15:
                           A   304    ;   27			{
                           A   305    ;   28				levelnumber = game_selectLe
                           A   306    .LINE 28
                           A   307    
040122 DD4EFD              A   308    	LD	C,(IX+%FFFFFFFD)
040125 0600                A   309    	LD	B,%0
040127 C5                  A   310    	PUSH	BC
040128 CD 6E 15 04         A   311    	CALL	_game_selectLevel
04012C C1                  A   312    	POP	BC
04012D DD75FA              A   313    	LD	(IX+%FFFFFFFA),L
040130 DD74FB              A   314    	LD	(IX+%FFFFFFFB),H
                           A   315    ;   29				if(levelnumber >= 0)
                           A   316    .LINE 29
                           A   317    
040133 DD27FA              A   318    	LD	HL,(IX+%FFFFFFFA)
040136 CD 09 1F 04         A   319    	CALL	__scmpzero
04013A FA E8 01 04         A   320    	JP	M,L_13
                           A   321    ;   30				{
                           A   322    ;   31					// Start game
                           A   323    ;   32					ingame = TRUE;
                           A   324    .LINE 32
                           A   325    
04013E DD36FF01            A   326    	LD	(IX+%FFFFFFFF),%1
                           A   327    ;   33					game_resetSprites();	
                           A   328    .LINE 33
                           A   329    
040142 CD E7 0D 04         A   330    	CALL	_game_resetSprites
                           A   331    ;   34					game_initLevel(levelnum
                           A   332    .LINE 34
                           A   333    
040146 DD4EFA              A   334    	LD	C,(IX+%FFFFFFFA)
040149 0600                A   335    	LD	B,%0
04014B C5                  A   336    	PUSH	BC
04014C CD 50 19 04         A   337    	CALL	_game_initLevel
040150 C1                  A   338    	POP	BC
                           A   339    ;   35					game_initSprites();		
                           A   340    .LINE 35
                           A   341    
040151 CD 86 19 04         A   342    	CALL	_game_initSprites
                           A   343    ;   36					
                           A   344    ;   37					vdp_cls();	// clear ou
                           A   345    .LINE 37
                           A   346    
040155 CD F2 02 04         A   347    	CALL	_vdp_cls
                           A   348    ;   38					
                           A   349    ;   39					game_displayLevel();
                           A   350    .LINE 39
                           A   351    
040159 CD E9 16 04         A   352    	CALL	_game_displayLevel
                           A   353    ;   40					while(ingame)
                           A   354    .LINE 40
                           A   355    
04015D 18 7F               A   356    	JR	L_10
04015F                     A   357    L_11:
                           A   358    ;   41					{
                           A   359    ;   42						key = getch();
                           A   360    .LINE 42
                           A   361    
04015F CD C8 1A 04         A   362    	CALL	_getch
040163 DD77FE              A   363    	LD	(IX+%FFFFFFFE),A
                           A   364    ;   43						if((key == 'q') || 
                           A   365    .LINE 43
                           A   366    
040166 FE71                A   367    	CP	A,%71
040168 28 0E               A   368    	JR	Z,L_8
04016A DD7EFE              A   369    	LD	A,(IX+%FFFFFFFE)
04016D FE51                A   370    	CP	A,%51
04016F 28 07               A   371    	JR	Z,L_8
040171 DD7EFE              A   372    	LD	A,(IX+%FFFFFFFE)
040174 FE1B                A   373    	CP	A,%1B
040176 20 42               A   374    	JR	NZ,L_9
040178                     A   375    L_8:
                           A   376    ;   44						{
                           A   377    ;   45							game_resetSprit
                           A   378    .LINE 45
                           A   379    
040178 CD E7 0D 04         A   380    	CALL	_game_resetSprites
                           A   381    ;   46							ingame = (game_
                           A   382    .LINE 46
                           A   383    
04017C 016E0000            A   384    	LD	BC,110
040180 C5                  A   385    	PUSH	BC
040181 01790000            A   386    	LD	BC,121
040185 C5                  A   387    	PUSH	BC
040186 01 C2 33 04         A   388    	LD	BC,L__7
04018A C5                  A   389    	PUSH	BC
04018B CD 77 14 04         A   390    	CALL	_game_getResponse
04018F C1                  A   391    	POP	BC
040190 C1                  A   392    	POP	BC
040191 C1                  A   393    	POP	BC
040192 47                  A   394    	LD	B,A
040193 78                  A   395    	LD	A,B
040194 17ED62              A   396    	SEXT	HL
040197 68                  A   397    	LD	L,B
040198 01790000            A   398    	LD	BC,121
04019C B7                  A   399    	OR	A,A
04019D ED42                A   400    	SBC	HL,BC
04019F 28 04               A   401    	JR	Z,L__9
0401A1 3E01                A   402    	LD	A,%1
0401A3 18 01               A   403    	JR	L__10
0401A5                     A   404    L__9:
0401A5 AF                  A   405    	XOR	A,A
0401A6                     A   406    L__10:
0401A6 DD77FF              A   407    	LD	(IX+%FFFFFFFF),A
                           A   408    ;   47							if(ingame)
                           A   409    .LINE 47
                           A   410    
0401A9 B7                  A   411    	OR	A,A
0401AA 28 08               A   412    	JR	Z,L_3
                           A   413    ;   48							{
                           A   414    ;   49								game_initSp
                           A   415    .LINE 49
                           A   416    
0401AC CD 86 19 04         A   417    	CALL	_game_initSprites
                           A   418    ;   50								game_displa
                           A   419    .LINE 50
                           A   420    
0401B0 CD E9 16 04         A   421    	CALL	_game_displayLevel
                           A   422    ;   51							}
0401B4                     A   423    L_3:
                           A   424    .LINE 51
                           A   425    
                           A   426    ;   52							game_displayLev
                           A   427    .LINE 52
                           A   428    
0401B4 CD E9 16 04         A   429    	CALL	_game_displayLevel
                           A   430    ;   53						}
                           A   431    ;   54						else ingame = !game
                           A   432    .LINE 54
                           A   433    
0401B8 18 24               A   434    	JR	L_10
0401BA                     A   435    L_9:
0401BA DD4EFE              A   436    	LD	C,(IX+%FFFFFFFE)
0401BD 0600                A   437    	LD	B,%0
0401BF C5                  A   438    	PUSH	BC
0401C0 CD A7 12 04         A   439    	CALL	_game_handleKey
0401C4 C1                  A   440    	POP	BC
0401C5 B7                  A   441    	OR	A,A
0401C6 20 09               A   442    	JR	NZ,L_5
0401C8 01010000            A   443    	LD	BC,1
0401CC DD0FF7              A   444    	LD	(IX+%FFFFFFF7),BC
0401CF 18 07               A   445    	JR	L_6
0401D1                     A   446    L_5:
0401D1 01000000            A   447    	LD	BC,0
0401D5 DD0FF7              A   448    	LD	(IX+%FFFFFFF7),BC
0401D8                     A   449    L_6:
0401D8 DD7EF7              A   450    	LD	A,(IX+%FFFFFFF7)
0401DB DD77FF              A   451    	LD	(IX+%FFFFFFFF),A
                           A   452    ;   55					}
0401DE                     A   453    L_10:
                           A   454    .LINE 55
                           A   455    
0401DE DD7EFF              A   456    	LD	A,(IX+%FFFFFFFF)
0401E1 B7                  A   457    	OR	A,A
0401E2 C2 5F 01 04         A   458    	JR	NZ,L_11
0401E6 18 04               A   459    	JR	L_14
                           A   460    ;   56				}
                           A   461    ;   57				else doneplaying = TRUE;
0401E8                     A   462    L_13:
                           A   463    .LINE 57
                           A   464    
0401E8 DD36FC01            A   465    	LD	(IX+%FFFFFFFC),%1
                           A   466    ;   58			}
0401EC                     A   467    L_14:
                           A   468    .LINE 58
                           A   469    
0401EC DD7EFC              A   470    	LD	A,(IX+%FFFFFFFC)
0401EF B7                  A   471    	OR	A,A
0401F0 CA 22 01 04         A   472    	JR	Z,L_15
                           A   473    ;   59	
                           A   474    ;   60			game_resetSprites();
                           A   475    .LINE 60
                           A   476    
0401F4 CD E7 0D 04         A   477    	CALL	_game_resetSprites
                           A   478    ;   61			vdp_mode(1);	// 512x384 pixe
                           A   479    .LINE 61
                           A   480    
0401F8 01010000            A   481    	LD	BC,1
0401FC C5                  A   482    	PUSH	BC
0401FD CD CD 02 04         A   483    	CALL	_vdp_mode
040201 C1                  A   484    	POP	BC
                           A   485    ;   62		}
                           A   486    ;   63		else printf("No level available\r\n
                           A   487    .LINE 63
                           A   488    
040202 18 13               A   489    	JR	L_19
040204                     A   490    L_18:
040204 01 2F 1D 04         A   491    	LD	BC,___print_uputch
040208 ED43 9F 33 04       A   492    	LD	(___print_xputch),BC
04020D 01 DB 33 04         A   493    	LD	BC,L__15
040211 C5                  A   494    	PUSH	BC
040212 CD AF 1B 04         A   495    	CALL	___print_sendstring
040216 C1                  A   496    	POP	BC
040217                     A   497    L_19:
                           A   498    ;   64		return 0;
                           A   499    .LINE 64
                           A   500    
040217 B7                  A   501    	OR	A,A
040218 ED62                A   502    	SBC	HL,HL
                           A   503    ;   65	}
                           A   504    .LINE 65
                           A   505    
04021A DDF9                A   506    	LD	SP,IX
04021C DDE1                A   507    	POP	IX
04021E C9                  A   508    	RET	
                           A   509    
                           A   510    
                           A   511    ;**************************** _main ***********
                           A   512    ;Name                         Addr/Register   S
                           A   513    ;_game_handleKey                     IMPORT  --
                           A   514    ;_game_getResponse                   IMPORT  --
                           A   515    ;_getch                              IMPORT  --
                           A   516    ;_game_displayLevel                  IMPORT  --
                           A   517    ;_vdp_cls                            IMPORT  --
                           A   518    ;_game_initSprites                   IMPORT  --
                           A   519    ;_game_initLevel                     IMPORT  --
                           A   520    ;_game_resetSprites                  IMPORT  --
                           A   521    ;_game_selectLevel                   IMPORT  --
                           A   522    ;_game_sendSpriteData                IMPORT  --
                           A   523    ;_vdp_cursorDisable                  IMPORT  --
                           A   524    ;_vdp_mode                           IMPORT  --
                           A   525    ;_game_readLevels                    IMPORT  --
                           A   526    ;___print_sendstring                 IMPORT  --
                           A   527    ;___print_xputch                     IMPORT    
                           A   528    ;___print_uputch                     IMPORT  --
                           A   529    ;temp7                                 IX-9    
                           A   530    ;levelnumber                           IX-6    
                           A   531    ;doneplaying                           IX-4    
                           A   532    ;levels                                IX-3    
                           A   533    ;key                                   IX-2    
                           A   534    ;ingame                                IX-1    
                           A   535    ;argv                                  IX+9    
                           A   536    ;argc                                  IX+6    
                           A   537    
                           A   538    
                           A   539    ; Stack Frame Size: 21 (bytes)
                           A   540    ;       Spill Code: 0 (instruction)
                           A   541    
                           A   542    
                           A   543    .ENDFUNC "main",65,"_main"
                           A   544    	SEGMENT STRSECT
0433A2                     A   545    L__0:
0433A2 52656164 696E6720   A   546    	DB	"Reading levels.bin"
0433AA 6C657665 6C732E62 
0433B2 696E 
0433B4 0D0A00              A   547    	DB	13,10,0
0433B7                     A   548    L__1:
0433B7 6C657665 6C732E62   A   549    	DB	"levels.bin"
0433BF 696E 
0433C1 00                  A   550    	DB	0
0433C2                     A   551    L__7:
0433C2 5265616C 6C792051   A   552    	DB	"Really QUIT level (y/n)?"
0433CA 55495420 6C657665 
0433D2 6C202879 2F6E293F 
0433DA 00                  A   553    	DB	0
0433DB                     A   554    L__15:
0433DB 4E6F206C 6576656C   A   555    	DB	"No level available"
0433E3 20617661 696C6162 
0433EB 6C65 
0433ED 0D0A00              A   556    	DB	13,10,0
                           A   557    	XREF _game_getResponse:ROM
                           A   558    	XREF _game_selectLevel:ROM
                           A   559    	XREF _game_handleKey:ROM
                           A   560    	XREF _game_displayLevel:ROM
                           A   561    	XREF _game_resetSprites:ROM
                           A   562    	XREF _game_initSprites:ROM
                           A   563    	XREF _game_initLevel:ROM
                           A   564    	XREF _game_sendSpriteData:ROM
                           A   565    	XREF _game_readLevels:ROM
                           A   566    	XREF _vdp_cursorDisable:ROM
                           A   567    	XREF _vdp_cls:ROM
                           A   568    	XREF _vdp_mode:ROM
                           A   569    	XREF _getch:ROM
                           A   570    	XREF ___print_sendstring:ROM
                           A   571    	XREF ___print_xputch:ROM
                           A   572    	XREF ___print_uputch:ROM
                           A   573    	XREF __scmpzero:ROM
                           A   574    	XDEF _main
                           A   575    	END


Errors: 0
Warnings: 0
Lines Assembled: 576
